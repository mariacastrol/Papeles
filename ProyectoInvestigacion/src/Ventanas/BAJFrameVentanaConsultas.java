/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.ConexionMysql;
import Clases.ExportarAExcel;
import Clases.FuncionesGenerales;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author ADOLFO
 */
public class BAJFrameVentanaConsultas extends javax.swing.JFrame {

    /**
     * Creates new form JFrameVentanaConsultas
     */
    public BAJFrameVentanaConsultas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePlanes = new javax.swing.JTable();
        botonBuscarPlanes = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        botonCriteriosPlanes = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jCheckBox67 = new javax.swing.JCheckBox();
        jCheckBox68 = new javax.swing.JCheckBox();
        jCheckBox69 = new javax.swing.JCheckBox();
        jCheckBox70 = new javax.swing.JCheckBox();
        jCheckBox71 = new javax.swing.JCheckBox();
        jCheckBox72 = new javax.swing.JCheckBox();
        jCheckBox73 = new javax.swing.JCheckBox();
        jCheckBox74 = new javax.swing.JCheckBox();
        jCheckBox75 = new javax.swing.JCheckBox();
        jCheckBox76 = new javax.swing.JCheckBox();
        jCheckBox77 = new javax.swing.JCheckBox();
        jCheckBox84 = new javax.swing.JCheckBox();
        jCheckBox85 = new javax.swing.JCheckBox();
        jCheckBox86 = new javax.swing.JCheckBox();
        jCheckBox87 = new javax.swing.JCheckBox();
        jCheckBox88 = new javax.swing.JCheckBox();
        jCheckBox94 = new javax.swing.JCheckBox();
        jCheckBox95 = new javax.swing.JCheckBox();
        jCheckBox96 = new javax.swing.JCheckBox();
        jCheckBox97 = new javax.swing.JCheckBox();
        jCheckBox98 = new javax.swing.JCheckBox();
        jCheckBox99 = new javax.swing.JCheckBox();
        jCheckBox100 = new javax.swing.JCheckBox();
        botonEPlanes = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCierres = new javax.swing.JTable();
        botonBuscarCierres = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        botonCriteriosCierres = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jCheckBox45 = new javax.swing.JCheckBox();
        jCheckBox46 = new javax.swing.JCheckBox();
        jCheckBox47 = new javax.swing.JCheckBox();
        jCheckBox48 = new javax.swing.JCheckBox();
        jCheckBox49 = new javax.swing.JCheckBox();
        jCheckBox50 = new javax.swing.JCheckBox();
        jCheckBox62 = new javax.swing.JCheckBox();
        jCheckBox63 = new javax.swing.JCheckBox();
        jCheckBox64 = new javax.swing.JCheckBox();
        jCheckBox65 = new javax.swing.JCheckBox();
        jCheckBox66 = new javax.swing.JCheckBox();
        jCheckBox56 = new javax.swing.JCheckBox();
        jCheckBox51 = new javax.swing.JCheckBox();
        jCheckBox52 = new javax.swing.JCheckBox();
        jCheckBox53 = new javax.swing.JCheckBox();
        jCheckBox54 = new javax.swing.JCheckBox();
        jCheckBox55 = new javax.swing.JCheckBox();
        jCheckBox57 = new javax.swing.JCheckBox();
        jCheckBox58 = new javax.swing.JCheckBox();
        jCheckBox59 = new javax.swing.JCheckBox();
        jCheckBox60 = new javax.swing.JCheckBox();
        jCheckBox61 = new javax.swing.JCheckBox();
        jCheckBox101 = new javax.swing.JCheckBox();
        jButton11 = new javax.swing.JButton();
        botonECierres = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableMS = new javax.swing.JTable();
        botonBuscarMS = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        botonCriteriosMS = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel20 = new javax.swing.JPanel();
        jCheckBox133 = new javax.swing.JCheckBox();
        jCheckBox135 = new javax.swing.JCheckBox();
        jCheckBox136 = new javax.swing.JCheckBox();
        jCheckBox137 = new javax.swing.JCheckBox();
        jCheckBox138 = new javax.swing.JCheckBox();
        jCheckBox139 = new javax.swing.JCheckBox();
        jCheckBox140 = new javax.swing.JCheckBox();
        jCheckBox141 = new javax.swing.JCheckBox();
        jCheckBox142 = new javax.swing.JCheckBox();
        jCheckBox143 = new javax.swing.JCheckBox();
        jCheckBox144 = new javax.swing.JCheckBox();
        jCheckBox145 = new javax.swing.JCheckBox();
        jCheckBox146 = new javax.swing.JCheckBox();
        jCheckBox147 = new javax.swing.JCheckBox();
        jCheckBox148 = new javax.swing.JCheckBox();
        jCheckBox149 = new javax.swing.JCheckBox();
        jCheckBox150 = new javax.swing.JCheckBox();
        jCheckBox151 = new javax.swing.JCheckBox();
        jCheckBox152 = new javax.swing.JCheckBox();
        jCheckBox153 = new javax.swing.JCheckBox();
        jCheckBox154 = new javax.swing.JCheckBox();
        jCheckBox155 = new javax.swing.JCheckBox();
        jCheckBox156 = new javax.swing.JCheckBox();
        jCheckBox157 = new javax.swing.JCheckBox();
        jCheckBox158 = new javax.swing.JCheckBox();
        jCheckBox159 = new javax.swing.JCheckBox();
        jCheckBox160 = new javax.swing.JCheckBox();
        jCheckBox161 = new javax.swing.JCheckBox();
        jCheckBox162 = new javax.swing.JCheckBox();
        jCheckBox163 = new javax.swing.JCheckBox();
        jCheckBox164 = new javax.swing.JCheckBox();
        jCheckBox165 = new javax.swing.JCheckBox();
        jCheckBox166 = new javax.swing.JCheckBox();
        jCheckBox167 = new javax.swing.JCheckBox();
        botonEMS = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableML = new javax.swing.JTable();
        botonBuscarML = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        botonCriteriosML = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel18 = new javax.swing.JPanel();
        jCheckBox78 = new javax.swing.JCheckBox();
        jCheckBox79 = new javax.swing.JCheckBox();
        jCheckBox80 = new javax.swing.JCheckBox();
        jCheckBox81 = new javax.swing.JCheckBox();
        jCheckBox82 = new javax.swing.JCheckBox();
        jCheckBox83 = new javax.swing.JCheckBox();
        jCheckBox89 = new javax.swing.JCheckBox();
        jCheckBox90 = new javax.swing.JCheckBox();
        jCheckBox91 = new javax.swing.JCheckBox();
        jCheckBox92 = new javax.swing.JCheckBox();
        jCheckBox93 = new javax.swing.JCheckBox();
        jCheckBox132 = new javax.swing.JCheckBox();
        jCheckBox134 = new javax.swing.JCheckBox();
        jCheckBox112 = new javax.swing.JCheckBox();
        jCheckBox113 = new javax.swing.JCheckBox();
        jCheckBox114 = new javax.swing.JCheckBox();
        jCheckBox115 = new javax.swing.JCheckBox();
        jCheckBox116 = new javax.swing.JCheckBox();
        jCheckBox118 = new javax.swing.JCheckBox();
        jCheckBox119 = new javax.swing.JCheckBox();
        jCheckBox120 = new javax.swing.JCheckBox();
        jCheckBox121 = new javax.swing.JCheckBox();
        jCheckBox117 = new javax.swing.JCheckBox();
        jCheckBox124 = new javax.swing.JCheckBox();
        jCheckBox125 = new javax.swing.JCheckBox();
        jCheckBox126 = new javax.swing.JCheckBox();
        jCheckBox122 = new javax.swing.JCheckBox();
        jCheckBox123 = new javax.swing.JCheckBox();
        jCheckBox129 = new javax.swing.JCheckBox();
        jCheckBox130 = new javax.swing.JCheckBox();
        jCheckBox131 = new javax.swing.JCheckBox();
        jCheckBox127 = new javax.swing.JCheckBox();
        jCheckBox128 = new javax.swing.JCheckBox();
        jCheckBox102 = new javax.swing.JCheckBox();
        botonEML = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CONSULTAS");
        setIconImage(getIconImage());
        setIconImages(getIconImages());
        setMinimumSize(new java.awt.Dimension(1000, 650));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(null);

        jTablePlanes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTablePlanes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTablePlanes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePlanesMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTablePlanesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePlanes);

        jPanel5.add(jScrollPane1);
        jScrollPane1.setBounds(12, 216, 1043, 290);

        botonBuscarPlanes.setText("BUSCAR");
        botonBuscarPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarPlanesActionPerformed(evt);
            }
        });
        jPanel5.add(botonBuscarPlanes);
        botonBuscarPlanes.setBounds(982, 524, 73, 23);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        botonCriteriosPlanes.setText("ESTABLECER");
        botonCriteriosPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriteriosPlanesActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel21.setText("FECHA");
        jLabel21.setEnabled(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel22.setText("PERSONAL DE VUELO");
        jLabel22.setEnabled(false);

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel43.setText("PERSONAL DE VUELO (NOMBRE)");
        jLabel43.setEnabled(false);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel23.setText("PASAJERO");
        jLabel23.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel24.setText("AERONAVE");
        jLabel24.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel25.setText("AEROPUERTO/AERÓDROMO DE LLEGADA");
        jLabel25.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(botonCriteriosPlanes)
                                .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCriteriosPlanes)
                .addGap(10, 10, 10)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addGap(6, 6, 6)
                .addComponent(jLabel43)
                .addGap(6, 6, 6)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.add(jPanel13);
        jPanel13.setBounds(12, 17, 229, 181);

        jButton12.setText("LIMPIAR");
        jButton12.setEnabled(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton12);
        jButton12.setBounds(891, 524, 73, 23);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("CAMPOS A MOSTRAR EN LA CONSULTA"));
        jPanel11.setEnabled(false);

        jCheckBox67.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox67.setSelected(true);
        jCheckBox67.setText("FECHA/HORA");
        jCheckBox67.setEnabled(false);
        jCheckBox67.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox67ItemStateChanged(evt);
            }
        });

        jCheckBox68.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox68.setSelected(true);
        jCheckBox68.setText("PILOTO (LICENCIA)");
        jCheckBox68.setEnabled(false);
        jCheckBox68.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox68ItemStateChanged(evt);
            }
        });

        jCheckBox69.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox69.setSelected(true);
        jCheckBox69.setText("PILOTO (NOMBRE(S)");
        jCheckBox69.setEnabled(false);
        jCheckBox69.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox69ItemStateChanged(evt);
            }
        });

        jCheckBox70.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox70.setSelected(true);
        jCheckBox70.setText("PILOTO (A. PATERNO)");
        jCheckBox70.setEnabled(false);
        jCheckBox70.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox70ItemStateChanged(evt);
            }
        });

        jCheckBox71.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox71.setSelected(true);
        jCheckBox71.setText("PILOTO (A. MATERNO)");
        jCheckBox71.setEnabled(false);
        jCheckBox71.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox71ItemStateChanged(evt);
            }
        });

        jCheckBox72.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox72.setSelected(true);
        jCheckBox72.setText("PILOTO (TIPO LICENCIA)");
        jCheckBox72.setEnabled(false);
        jCheckBox72.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox72ItemStateChanged(evt);
            }
        });

        jCheckBox73.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox73.setSelected(true);
        jCheckBox73.setText("COPILOTO (LICENCIA)");
        jCheckBox73.setEnabled(false);
        jCheckBox73.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox73ItemStateChanged(evt);
            }
        });

        jCheckBox74.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox74.setSelected(true);
        jCheckBox74.setText("COPILOTO (NOMBRE(S)");
        jCheckBox74.setEnabled(false);
        jCheckBox74.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox74ItemStateChanged(evt);
            }
        });

        jCheckBox75.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox75.setSelected(true);
        jCheckBox75.setText("COPILOTO (A. PATERNO)");
        jCheckBox75.setEnabled(false);
        jCheckBox75.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox75ItemStateChanged(evt);
            }
        });

        jCheckBox76.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox76.setSelected(true);
        jCheckBox76.setText("COPILOTO (A. MATERNO)");
        jCheckBox76.setEnabled(false);
        jCheckBox76.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox76ItemStateChanged(evt);
            }
        });

        jCheckBox77.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox77.setSelected(true);
        jCheckBox77.setText("COPILOTO (TIPO LICENCIA)");
        jCheckBox77.setEnabled(false);
        jCheckBox77.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox77ItemStateChanged(evt);
            }
        });

        jCheckBox84.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox84.setSelected(true);
        jCheckBox84.setText("OTROS DATOS");
        jCheckBox84.setEnabled(false);
        jCheckBox84.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox84ItemStateChanged(evt);
            }
        });

        jCheckBox85.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox85.setSelected(true);
        jCheckBox85.setText("AEROPUERTO (OACI)");
        jCheckBox85.setEnabled(false);
        jCheckBox85.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox85ItemStateChanged(evt);
            }
        });

        jCheckBox86.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox86.setSelected(true);
        jCheckBox86.setText("AEROPUERTO (IATA)");
        jCheckBox86.setEnabled(false);
        jCheckBox86.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox86ItemStateChanged(evt);
            }
        });

        jCheckBox87.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox87.setSelected(true);
        jCheckBox87.setText("AEROPUERTO (NOMBRE)");
        jCheckBox87.setEnabled(false);
        jCheckBox87.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox87ItemStateChanged(evt);
            }
        });

        jCheckBox88.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox88.setSelected(true);
        jCheckBox88.setText("AERONAVE (MATRÍCULA)");
        jCheckBox88.setEnabled(false);
        jCheckBox88.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox88ItemStateChanged(evt);
            }
        });

        jCheckBox94.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox94.setSelected(true);
        jCheckBox94.setText("AERONAVE (TIPO)");
        jCheckBox94.setEnabled(false);
        jCheckBox94.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox94ItemStateChanged(evt);
            }
        });

        jCheckBox95.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox95.setSelected(true);
        jCheckBox95.setText("PERSONAS A BORDO");
        jCheckBox95.setEnabled(false);
        jCheckBox95.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox95ItemStateChanged(evt);
            }
        });

        jCheckBox96.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox96.setSelected(true);
        jCheckBox96.setText("PASAJERO (NOMBRE)");
        jCheckBox96.setEnabled(false);
        jCheckBox96.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox96ItemStateChanged(evt);
            }
        });

        jCheckBox97.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox97.setSelected(true);
        jCheckBox97.setText("PASAJERO (A. PATERNO)");
        jCheckBox97.setEnabled(false);
        jCheckBox97.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox97ItemStateChanged(evt);
            }
        });

        jCheckBox98.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox98.setSelected(true);
        jCheckBox98.setText("PASAJERO (A. MATERNO)");
        jCheckBox98.setEnabled(false);
        jCheckBox98.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox98ItemStateChanged(evt);
            }
        });

        jCheckBox99.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox99.setSelected(true);
        jCheckBox99.setText("PASAJERO (NACIONALIDAD)");
        jCheckBox99.setEnabled(false);
        jCheckBox99.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox99ItemStateChanged(evt);
            }
        });

        jCheckBox100.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox100.setSelected(true);
        jCheckBox100.setText("PDF");
        jCheckBox100.setEnabled(false);
        jCheckBox100.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox100ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox72, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(jCheckBox71, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox70, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox69, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox68, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox67, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox77, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox76, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox75, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox74, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox73, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox84, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox87, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox86, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox85, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox94, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox95, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox88, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox96, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox98, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox99, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox97, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox100, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jCheckBox85)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox86)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox87)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox88))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jCheckBox96)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox97)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox98)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox99)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox94)
                            .addComponent(jCheckBox100))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox95))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jCheckBox73)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox74)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox75)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox76)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox77)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox84))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jCheckBox67)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox69)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox70)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox71)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox72)))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel11);
        jPanel11.setBounds(259, 17, 796, 181);

        botonEPlanes.setText("EXPORTAR DATOS A EXCEL");
        botonEPlanes.setEnabled(false);
        botonEPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEPlanesActionPerformed(evt);
            }
        });
        jPanel5.add(botonEPlanes);
        botonEPlanes.setBounds(698, 524, 175, 23);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("PLANES", jPanel1);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(null);

        jTableCierres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableCierres.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableCierres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCierresMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableCierresMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCierres);

        jPanel6.add(jScrollPane2);
        jScrollPane2.setBounds(12, 216, 1043, 290);

        botonBuscarCierres.setText("BUSCAR");
        botonBuscarCierres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarCierresActionPerformed(evt);
            }
        });
        jPanel6.add(botonBuscarCierres);
        botonBuscarCierres.setBounds(982, 524, 73, 23);

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        botonCriteriosCierres.setText("ESTABLECER");
        botonCriteriosCierres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriteriosCierresActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel26.setText("FECHA");
        jLabel26.setEnabled(false);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel27.setText("PERSONAL DE VUELO");
        jLabel27.setEnabled(false);

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel44.setText("PERSONAL DE VUELO (NOMBRE)");
        jLabel44.setEnabled(false);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel28.setText("PASAJERO");
        jLabel28.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel29.setText("AERONAVE");
        jLabel29.setEnabled(false);

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel30.setText("AEROPUERTO/AERÓDROMO DE SALIDA");
        jLabel30.setEnabled(false);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonCriteriosCierres)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel28))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCriteriosCierres)
                .addGap(10, 10, 10)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.add(jPanel15);
        jPanel15.setBounds(12, 17, 229, 181);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("CAMPOS A MOSTRAR EN LA CONSULTA"));
        jPanel10.setEnabled(false);

        jCheckBox45.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox45.setSelected(true);
        jCheckBox45.setText("FECHA/HORA");
        jCheckBox45.setEnabled(false);
        jCheckBox45.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox45ItemStateChanged(evt);
            }
        });

        jCheckBox46.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox46.setSelected(true);
        jCheckBox46.setText("PILOTO (LICENCIA)");
        jCheckBox46.setEnabled(false);
        jCheckBox46.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox46ItemStateChanged(evt);
            }
        });

        jCheckBox47.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox47.setSelected(true);
        jCheckBox47.setText("PILOTO (NOMBRE(S)");
        jCheckBox47.setEnabled(false);
        jCheckBox47.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox47ItemStateChanged(evt);
            }
        });

        jCheckBox48.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox48.setSelected(true);
        jCheckBox48.setText("PILOTO (A. PATERNO)");
        jCheckBox48.setEnabled(false);
        jCheckBox48.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox48ItemStateChanged(evt);
            }
        });

        jCheckBox49.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox49.setSelected(true);
        jCheckBox49.setText("PILOTO (A. MATERNO)");
        jCheckBox49.setEnabled(false);
        jCheckBox49.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox49ItemStateChanged(evt);
            }
        });

        jCheckBox50.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox50.setSelected(true);
        jCheckBox50.setText("PILOTO (TIPO LICENCIA)");
        jCheckBox50.setEnabled(false);
        jCheckBox50.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox50ItemStateChanged(evt);
            }
        });

        jCheckBox62.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox62.setSelected(true);
        jCheckBox62.setText("COPILOTO (LICENCIA)");
        jCheckBox62.setEnabled(false);
        jCheckBox62.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox62ItemStateChanged(evt);
            }
        });

        jCheckBox63.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox63.setSelected(true);
        jCheckBox63.setText("COPILOTO (NOMBRE(S)");
        jCheckBox63.setEnabled(false);
        jCheckBox63.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox63ItemStateChanged(evt);
            }
        });

        jCheckBox64.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox64.setSelected(true);
        jCheckBox64.setText("COPILOTO (A. PATERNO)");
        jCheckBox64.setEnabled(false);
        jCheckBox64.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox64ItemStateChanged(evt);
            }
        });

        jCheckBox65.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox65.setSelected(true);
        jCheckBox65.setText("COPILOTO (A. MATERNO)");
        jCheckBox65.setEnabled(false);
        jCheckBox65.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox65ItemStateChanged(evt);
            }
        });

        jCheckBox66.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox66.setSelected(true);
        jCheckBox66.setText("COPILOTO (TIPO LICENCIA)");
        jCheckBox66.setEnabled(false);
        jCheckBox66.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox66ItemStateChanged(evt);
            }
        });

        jCheckBox56.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox56.setSelected(true);
        jCheckBox56.setText("OBSERVACIONES");
        jCheckBox56.setEnabled(false);
        jCheckBox56.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox56ItemStateChanged(evt);
            }
        });

        jCheckBox51.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox51.setSelected(true);
        jCheckBox51.setText("AEROPUERTO (OACI)");
        jCheckBox51.setEnabled(false);
        jCheckBox51.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox51ItemStateChanged(evt);
            }
        });

        jCheckBox52.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox52.setSelected(true);
        jCheckBox52.setText("AEROPUERTO (IATA)");
        jCheckBox52.setEnabled(false);
        jCheckBox52.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox52ItemStateChanged(evt);
            }
        });

        jCheckBox53.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox53.setSelected(true);
        jCheckBox53.setText("AEROPUERTO (NOMBRE)");
        jCheckBox53.setEnabled(false);
        jCheckBox53.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox53ItemStateChanged(evt);
            }
        });

        jCheckBox54.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox54.setSelected(true);
        jCheckBox54.setText("AERONAVE (MATRÍCULA)");
        jCheckBox54.setEnabled(false);
        jCheckBox54.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox54ItemStateChanged(evt);
            }
        });

        jCheckBox55.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox55.setSelected(true);
        jCheckBox55.setText("AERONAVE (TIPO)");
        jCheckBox55.setEnabled(false);
        jCheckBox55.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox55ItemStateChanged(evt);
            }
        });

        jCheckBox57.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox57.setSelected(true);
        jCheckBox57.setText("PASAJEROS");
        jCheckBox57.setEnabled(false);
        jCheckBox57.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox57ItemStateChanged(evt);
            }
        });

        jCheckBox58.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox58.setSelected(true);
        jCheckBox58.setText("PASAJERO (NOMBRE)");
        jCheckBox58.setEnabled(false);
        jCheckBox58.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox58ItemStateChanged(evt);
            }
        });

        jCheckBox59.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox59.setSelected(true);
        jCheckBox59.setText("PASAJERO (A. PATERNO)");
        jCheckBox59.setEnabled(false);
        jCheckBox59.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox59ItemStateChanged(evt);
            }
        });

        jCheckBox60.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox60.setSelected(true);
        jCheckBox60.setText("PASAJERO (A. MATERNO)");
        jCheckBox60.setEnabled(false);
        jCheckBox60.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox60ItemStateChanged(evt);
            }
        });

        jCheckBox61.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox61.setSelected(true);
        jCheckBox61.setText("PASAJERO (NACIONALIDAD)");
        jCheckBox61.setEnabled(false);
        jCheckBox61.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox61ItemStateChanged(evt);
            }
        });

        jCheckBox101.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox101.setSelected(true);
        jCheckBox101.setText("PDF");
        jCheckBox101.setEnabled(false);
        jCheckBox101.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox101ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox50, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(jCheckBox49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox66, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox65, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox64, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox63, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox62, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox56, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox57, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox54, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox60, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox61, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox59, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox101, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jCheckBox51)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox52)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox53)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox54))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jCheckBox58)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox59)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox60)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox61)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox55)
                            .addComponent(jCheckBox101))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox57))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jCheckBox62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox63)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox64)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox65)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox66)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox56))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jCheckBox45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox50)))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel10);
        jPanel10.setBounds(259, 17, 796, 181);

        jButton11.setText("LIMPIAR");
        jButton11.setEnabled(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton11);
        jButton11.setBounds(891, 524, 73, 23);

        botonECierres.setText("EXPORTAR DATOS A EXCEL");
        botonECierres.setEnabled(false);
        botonECierres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonECierresActionPerformed(evt);
            }
        });
        jPanel6.add(botonECierres);
        botonECierres.setBounds(698, 524, 175, 23);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("CIERRES DE PLANES", jPanel2);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setLayout(null);

        jTableMS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableMS.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableMS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMSMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableMSMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTableMS);

        jPanel7.add(jScrollPane3);
        jScrollPane3.setBounds(12, 216, 1043, 290);

        botonBuscarMS.setText("BUSCAR");
        botonBuscarMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarMSActionPerformed(evt);
            }
        });
        jPanel7.add(botonBuscarMS);
        botonBuscarMS.setBounds(982, 524, 73, 23);

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        botonCriteriosMS.setText("ESTABLECER");
        botonCriteriosMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriteriosMSActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel31.setText("FECHA");
        jLabel31.setEnabled(false);

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel32.setText("PERSONAL DE VUELO");
        jLabel32.setEnabled(false);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel33.setText("COMPAÑÍA");
        jLabel33.setEnabled(false);

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel34.setText("AERONAVE");
        jLabel34.setEnabled(false);

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel35.setText("DESTINO");
        jLabel35.setEnabled(false);

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel36.setText("NO. DE VUELO");
        jLabel36.setEnabled(false);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonCriteriosMS)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCriteriosMS)
                .addGap(10, 10, 10)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel16);
        jPanel16.setBounds(12, 17, 229, 181);

        jButton14.setText("LIMPIAR");
        jButton14.setEnabled(false);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton14);
        jButton14.setBounds(891, 524, 73, 23);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("CAMPOS A MOSTRAR EN LA CONSULTA"));
        jPanel19.setEnabled(false);

        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane8.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jCheckBox133.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox133.setSelected(true);
        jCheckBox133.setText("FECHA/HORA");
        jCheckBox133.setEnabled(false);
        jCheckBox133.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox133ItemStateChanged(evt);
            }
        });

        jCheckBox135.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox135.setSelected(true);
        jCheckBox135.setText("HORA ITINERARIO");
        jCheckBox135.setEnabled(false);
        jCheckBox135.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox135ItemStateChanged(evt);
            }
        });

        jCheckBox136.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox136.setSelected(true);
        jCheckBox136.setText("HORA REAL");
        jCheckBox136.setEnabled(false);
        jCheckBox136.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox136ItemStateChanged(evt);
            }
        });

        jCheckBox137.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox137.setSelected(true);
        jCheckBox137.setText("NO. DE VUELO");
        jCheckBox137.setEnabled(false);
        jCheckBox137.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox137ItemStateChanged(evt);
            }
        });

        jCheckBox138.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox138.setSelected(true);
        jCheckBox138.setText("COMPAÑIA (SIGLAS)");
        jCheckBox138.setEnabled(false);
        jCheckBox138.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox138ItemStateChanged(evt);
            }
        });

        jCheckBox139.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox139.setSelected(true);
        jCheckBox139.setText("COMPAÑIA (NOMBRE)");
        jCheckBox139.setEnabled(false);
        jCheckBox139.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox139ItemStateChanged(evt);
            }
        });

        jCheckBox140.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox140.setSelected(true);
        jCheckBox140.setText("AEROPUERTO (IATA)");
        jCheckBox140.setEnabled(false);
        jCheckBox140.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox140ItemStateChanged(evt);
            }
        });

        jCheckBox141.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox141.setSelected(true);
        jCheckBox141.setText("AEROPUERTO (OACI)");
        jCheckBox141.setEnabled(false);
        jCheckBox141.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox141ItemStateChanged(evt);
            }
        });

        jCheckBox142.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox142.setSelected(true);
        jCheckBox142.setText("AEROPUERTO (NOMBRE)");
        jCheckBox142.setEnabled(false);
        jCheckBox142.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox142ItemStateChanged(evt);
            }
        });

        jCheckBox143.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox143.setSelected(true);
        jCheckBox143.setText("AERONAVE (MATRÍCULA)");
        jCheckBox143.setEnabled(false);
        jCheckBox143.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox143ItemStateChanged(evt);
            }
        });

        jCheckBox144.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox144.setSelected(true);
        jCheckBox144.setText("AERONAVE (TIPO)");
        jCheckBox144.setEnabled(false);
        jCheckBox144.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox144ItemStateChanged(evt);
            }
        });

        jCheckBox145.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox145.setSelected(true);
        jCheckBox145.setText("SOBRECARGO (NOMBRE)");
        jCheckBox145.setEnabled(false);
        jCheckBox145.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox145ItemStateChanged(evt);
            }
        });

        jCheckBox146.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox146.setSelected(true);
        jCheckBox146.setText("EMBARQUE");
        jCheckBox146.setEnabled(false);
        jCheckBox146.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox146ItemStateChanged(evt);
            }
        });

        jCheckBox147.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox147.setSelected(true);
        jCheckBox147.setText("COMANDANTE (LICENCIA)");
        jCheckBox147.setEnabled(false);
        jCheckBox147.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox147ItemStateChanged(evt);
            }
        });

        jCheckBox148.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox148.setSelected(true);
        jCheckBox148.setText("COMANDANTE (NOMBRE(S))");
        jCheckBox148.setEnabled(false);
        jCheckBox148.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox148ItemStateChanged(evt);
            }
        });

        jCheckBox149.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox149.setSelected(true);
        jCheckBox149.setText("COMANDANTE (A. PATERNO)");
        jCheckBox149.setEnabled(false);
        jCheckBox149.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox149ItemStateChanged(evt);
            }
        });

        jCheckBox150.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox150.setSelected(true);
        jCheckBox150.setText("COMANDANTE (A. MATERNO)");
        jCheckBox150.setEnabled(false);
        jCheckBox150.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox150ItemStateChanged(evt);
            }
        });

        jCheckBox151.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox151.setSelected(true);
        jCheckBox151.setText("COMANDANTE (TIPO LICENCIA)");
        jCheckBox151.setEnabled(false);
        jCheckBox151.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox151ItemStateChanged(evt);
            }
        });

        jCheckBox152.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox152.setSelected(true);
        jCheckBox152.setText("1er. OFICIAL (TIPO LICENCIA)");
        jCheckBox152.setEnabled(false);
        jCheckBox152.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox152ItemStateChanged(evt);
            }
        });

        jCheckBox153.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox153.setSelected(true);
        jCheckBox153.setText("1er. OFICIAL (LICENCIA)");
        jCheckBox153.setEnabled(false);
        jCheckBox153.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox153ItemStateChanged(evt);
            }
        });

        jCheckBox154.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox154.setSelected(true);
        jCheckBox154.setText("1er. OFICIAL (NOMBRE(S))");
        jCheckBox154.setEnabled(false);
        jCheckBox154.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox154ItemStateChanged(evt);
            }
        });

        jCheckBox155.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox155.setSelected(true);
        jCheckBox155.setText("1er. OFICIAL (A. PATERNO)");
        jCheckBox155.setEnabled(false);
        jCheckBox155.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox155ItemStateChanged(evt);
            }
        });

        jCheckBox156.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox156.setSelected(true);
        jCheckBox156.setText("1er. OFICIAL (A. MATERNO)");
        jCheckBox156.setEnabled(false);
        jCheckBox156.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox156ItemStateChanged(evt);
            }
        });

        jCheckBox157.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox157.setSelected(true);
        jCheckBox157.setText("2o. OFICIAL (LICENCIA)");
        jCheckBox157.setEnabled(false);
        jCheckBox157.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox157ItemStateChanged(evt);
            }
        });

        jCheckBox158.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox158.setSelected(true);
        jCheckBox158.setText("2o. OFICIAL (NOMBRE(S))");
        jCheckBox158.setEnabled(false);
        jCheckBox158.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox158ItemStateChanged(evt);
            }
        });

        jCheckBox159.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox159.setSelected(true);
        jCheckBox159.setText("2o. OFICIAL (A. PATERNO)");
        jCheckBox159.setEnabled(false);
        jCheckBox159.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox159ItemStateChanged(evt);
            }
        });

        jCheckBox160.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox160.setSelected(true);
        jCheckBox160.setText("2o. OFICIAL (A. MATERNO)");
        jCheckBox160.setEnabled(false);
        jCheckBox160.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox160ItemStateChanged(evt);
            }
        });

        jCheckBox161.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox161.setSelected(true);
        jCheckBox161.setText("2o. OFICIAL (TIPO LICENCIA)");
        jCheckBox161.setEnabled(false);
        jCheckBox161.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox161ItemStateChanged(evt);
            }
        });

        jCheckBox162.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox162.setSelected(true);
        jCheckBox162.setText("3er. OFICIAL (LICENCIA)");
        jCheckBox162.setEnabled(false);
        jCheckBox162.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox162ItemStateChanged(evt);
            }
        });

        jCheckBox163.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox163.setSelected(true);
        jCheckBox163.setText("3er. OFICIAL (NOMBRE(S))");
        jCheckBox163.setEnabled(false);
        jCheckBox163.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox163ItemStateChanged(evt);
            }
        });

        jCheckBox164.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox164.setSelected(true);
        jCheckBox164.setText("3er. OFICIAL (A. PATERNO)");
        jCheckBox164.setEnabled(false);
        jCheckBox164.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox164ItemStateChanged(evt);
            }
        });

        jCheckBox165.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox165.setSelected(true);
        jCheckBox165.setText("3er. OFICIAL (A. MATERNO)");
        jCheckBox165.setEnabled(false);
        jCheckBox165.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox165ItemStateChanged(evt);
            }
        });

        jCheckBox166.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox166.setSelected(true);
        jCheckBox166.setText("3er. OFICIAL (TIPO LICENCIA)");
        jCheckBox166.setEnabled(false);
        jCheckBox166.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox166ItemStateChanged(evt);
            }
        });

        jCheckBox167.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox167.setSelected(true);
        jCheckBox167.setText("PDF");
        jCheckBox167.setEnabled(false);
        jCheckBox167.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox167ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jCheckBox135, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox137, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox136, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox133, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox138, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox139, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(jCheckBox167, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox140, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox141, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox142, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox143, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox144, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox145, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox146, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox151, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox149, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox147, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox150, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox148, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox154, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox153, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox152, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox155, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox156, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox161, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox160, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox159, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox158, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox157, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox166, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox165, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox164, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox163, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox162, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jCheckBox162)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox163)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox164)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox165)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox166))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jCheckBox157)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox158)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox159)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox160)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox161))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jCheckBox153)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox154)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox155)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox156)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox152))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jCheckBox147)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox148)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox149)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox150)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox151))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jCheckBox143)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox144)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox145)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox146))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jCheckBox140)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox141)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox142))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addComponent(jCheckBox133)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox135))
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addComponent(jCheckBox138)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox139)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox136)
                            .addComponent(jCheckBox167))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox137)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane8.setViewportView(jPanel20);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel19);
        jPanel19.setBounds(259, 17, 796, 181);

        botonEMS.setText("EXPORTAR DATOS A EXCEL");
        botonEMS.setEnabled(false);
        botonEMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEMSActionPerformed(evt);
            }
        });
        jPanel7.add(botonEMS);
        botonEMS.setBounds(698, 524, 175, 23);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("MANIFIESTOS DE SALIDA", jPanel3);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setLayout(null);

        jTableML.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableML.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableML.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMLMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableMLMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTableML);

        jPanel8.add(jScrollPane4);
        jScrollPane4.setBounds(12, 216, 1043, 290);

        botonBuscarML.setText("BUSCAR");
        botonBuscarML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarMLActionPerformed(evt);
            }
        });
        jPanel8.add(botonBuscarML);
        botonBuscarML.setBounds(982, 524, 73, 23);

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        botonCriteriosML.setText("ESTABLECER");
        botonCriteriosML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriteriosMLActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel37.setText("FECHA");
        jLabel37.setEnabled(false);

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel38.setText("PERSONAL DE VUELO");
        jLabel38.setEnabled(false);

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel39.setText("COMPAÑÍA");
        jLabel39.setEnabled(false);

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel40.setText("AERONAVE");
        jLabel40.setEnabled(false);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel41.setText("ORIGEN");
        jLabel41.setEnabled(false);

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel42.setText("NO. DE VUELO");
        jLabel42.setEnabled(false);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonCriteriosML)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCriteriosML)
                .addGap(10, 10, 10)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.add(jPanel17);
        jPanel17.setBounds(12, 17, 229, 181);

        jButton16.setText("LIMPIAR");
        jButton16.setEnabled(false);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton16);
        jButton16.setBounds(891, 524, 73, 23);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("CAMPOS A MOSTRAR EN LA CONSULTA"));
        jPanel12.setEnabled(false);

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel18.setEnabled(false);

        jCheckBox78.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox78.setSelected(true);
        jCheckBox78.setText("FECHA/HORA");
        jCheckBox78.setEnabled(false);
        jCheckBox78.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox78ItemStateChanged(evt);
            }
        });

        jCheckBox79.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox79.setSelected(true);
        jCheckBox79.setText("HORA ITINERARIO");
        jCheckBox79.setEnabled(false);
        jCheckBox79.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox79ItemStateChanged(evt);
            }
        });

        jCheckBox80.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox80.setSelected(true);
        jCheckBox80.setText("HORA REAL");
        jCheckBox80.setEnabled(false);
        jCheckBox80.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox80ItemStateChanged(evt);
            }
        });

        jCheckBox81.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox81.setSelected(true);
        jCheckBox81.setText("NO. DE VUELO");
        jCheckBox81.setEnabled(false);
        jCheckBox81.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox81ItemStateChanged(evt);
            }
        });

        jCheckBox82.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox82.setSelected(true);
        jCheckBox82.setText("COMPAÑIA (SIGLAS)");
        jCheckBox82.setEnabled(false);
        jCheckBox82.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox82ItemStateChanged(evt);
            }
        });

        jCheckBox83.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox83.setSelected(true);
        jCheckBox83.setText("COMPAÑIA (NOMBRE)");
        jCheckBox83.setEnabled(false);
        jCheckBox83.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox83ItemStateChanged(evt);
            }
        });

        jCheckBox89.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox89.setSelected(true);
        jCheckBox89.setText("AEROPUERTO (OACI)");
        jCheckBox89.setEnabled(false);
        jCheckBox89.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox89ItemStateChanged(evt);
            }
        });

        jCheckBox90.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox90.setSelected(true);
        jCheckBox90.setText("AEROPUERTO (IATA)");
        jCheckBox90.setEnabled(false);
        jCheckBox90.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox90ItemStateChanged(evt);
            }
        });

        jCheckBox91.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox91.setSelected(true);
        jCheckBox91.setText("AEROPUERTO (NOMBRE)");
        jCheckBox91.setEnabled(false);
        jCheckBox91.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox91ItemStateChanged(evt);
            }
        });

        jCheckBox92.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox92.setSelected(true);
        jCheckBox92.setText("AERONAVE (MATRÍCULA)");
        jCheckBox92.setEnabled(false);
        jCheckBox92.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox92ItemStateChanged(evt);
            }
        });

        jCheckBox93.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox93.setSelected(true);
        jCheckBox93.setText("AERONAVE (TIPO)");
        jCheckBox93.setEnabled(false);
        jCheckBox93.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox93ItemStateChanged(evt);
            }
        });

        jCheckBox132.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox132.setSelected(true);
        jCheckBox132.setText("SOBRECARGO (NOMBRE)");
        jCheckBox132.setEnabled(false);
        jCheckBox132.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox132ItemStateChanged(evt);
            }
        });

        jCheckBox134.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox134.setSelected(true);
        jCheckBox134.setText("DESEMBARQUE");
        jCheckBox134.setEnabled(false);
        jCheckBox134.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox134ItemStateChanged(evt);
            }
        });

        jCheckBox112.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox112.setSelected(true);
        jCheckBox112.setText("COMANDANTE (LICENCIA)");
        jCheckBox112.setEnabled(false);
        jCheckBox112.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox112ItemStateChanged(evt);
            }
        });

        jCheckBox113.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox113.setSelected(true);
        jCheckBox113.setText("COMANDANTE (NOMBRE(S))");
        jCheckBox113.setEnabled(false);
        jCheckBox113.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox113ItemStateChanged(evt);
            }
        });

        jCheckBox114.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox114.setSelected(true);
        jCheckBox114.setText("COMANDANTE (A. PATERNO)");
        jCheckBox114.setEnabled(false);
        jCheckBox114.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox114ItemStateChanged(evt);
            }
        });

        jCheckBox115.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox115.setSelected(true);
        jCheckBox115.setText("COMANDANTE (A. MATERNO)");
        jCheckBox115.setEnabled(false);
        jCheckBox115.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox115ItemStateChanged(evt);
            }
        });

        jCheckBox116.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox116.setSelected(true);
        jCheckBox116.setText("COMANDANTE (TIPO LICENCIA)");
        jCheckBox116.setEnabled(false);
        jCheckBox116.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox116ItemStateChanged(evt);
            }
        });

        jCheckBox118.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox118.setSelected(true);
        jCheckBox118.setText("1er. OFICIAL (TIPO LICENCIA)");
        jCheckBox118.setEnabled(false);
        jCheckBox118.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox118ItemStateChanged(evt);
            }
        });

        jCheckBox119.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox119.setSelected(true);
        jCheckBox119.setText("1er. OFICIAL (LICENCIA)");
        jCheckBox119.setEnabled(false);
        jCheckBox119.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox119ItemStateChanged(evt);
            }
        });

        jCheckBox120.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox120.setSelected(true);
        jCheckBox120.setText("1er. OFICIAL (NOMBRE(S))");
        jCheckBox120.setEnabled(false);
        jCheckBox120.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox120ItemStateChanged(evt);
            }
        });

        jCheckBox121.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox121.setSelected(true);
        jCheckBox121.setText("1er. OFICIAL (A. PATERNO)");
        jCheckBox121.setEnabled(false);
        jCheckBox121.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox121ItemStateChanged(evt);
            }
        });

        jCheckBox117.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox117.setSelected(true);
        jCheckBox117.setText("1er. OFICIAL (A. MATERNO)");
        jCheckBox117.setEnabled(false);
        jCheckBox117.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox117ItemStateChanged(evt);
            }
        });

        jCheckBox124.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox124.setSelected(true);
        jCheckBox124.setText("2o. OFICIAL (LICENCIA)");
        jCheckBox124.setEnabled(false);
        jCheckBox124.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox124ItemStateChanged(evt);
            }
        });

        jCheckBox125.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox125.setSelected(true);
        jCheckBox125.setText("2o. OFICIAL (NOMBRE(S))");
        jCheckBox125.setEnabled(false);
        jCheckBox125.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox125ItemStateChanged(evt);
            }
        });

        jCheckBox126.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox126.setSelected(true);
        jCheckBox126.setText("2o. OFICIAL (A. PATERNO)");
        jCheckBox126.setEnabled(false);
        jCheckBox126.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox126ItemStateChanged(evt);
            }
        });

        jCheckBox122.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox122.setSelected(true);
        jCheckBox122.setText("2o. OFICIAL (A. MATERNO)");
        jCheckBox122.setEnabled(false);
        jCheckBox122.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox122ItemStateChanged(evt);
            }
        });

        jCheckBox123.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox123.setSelected(true);
        jCheckBox123.setText("2o. OFICIAL (TIPO LICENCIA)");
        jCheckBox123.setEnabled(false);
        jCheckBox123.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox123ItemStateChanged(evt);
            }
        });

        jCheckBox129.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox129.setSelected(true);
        jCheckBox129.setText("3er. OFICIAL (LICENCIA)");
        jCheckBox129.setEnabled(false);
        jCheckBox129.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox129ItemStateChanged(evt);
            }
        });

        jCheckBox130.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox130.setSelected(true);
        jCheckBox130.setText("3er. OFICIAL (NOMBRE(S))");
        jCheckBox130.setEnabled(false);
        jCheckBox130.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox130ItemStateChanged(evt);
            }
        });

        jCheckBox131.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox131.setSelected(true);
        jCheckBox131.setText("3er. OFICIAL (A. PATERNO)");
        jCheckBox131.setEnabled(false);
        jCheckBox131.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox131ItemStateChanged(evt);
            }
        });

        jCheckBox127.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox127.setSelected(true);
        jCheckBox127.setText("3er. OFICIAL (A. MATERNO)");
        jCheckBox127.setEnabled(false);
        jCheckBox127.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox127ItemStateChanged(evt);
            }
        });

        jCheckBox128.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox128.setSelected(true);
        jCheckBox128.setText("3er. OFICIAL (TIPO LICENCIA)");
        jCheckBox128.setEnabled(false);
        jCheckBox128.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox128ItemStateChanged(evt);
            }
        });

        jCheckBox102.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox102.setSelected(true);
        jCheckBox102.setText("PDF");
        jCheckBox102.setEnabled(false);
        jCheckBox102.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox102ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jCheckBox79, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox81, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox80, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox78, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox82, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox83, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(jCheckBox102, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox89, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox90, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox91, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox92, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox93, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox132, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox134, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox116, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox114, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox112, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox115, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox113, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox120, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox119, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox118, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox121, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox117, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox123, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox122, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox126, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox125, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox124, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox128, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox127, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox131, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox130, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox129, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jCheckBox129)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox130)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox131)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox127)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox128))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jCheckBox124)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox125)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox126)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox122)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox123))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jCheckBox119)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox120)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox121)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox117)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox118))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jCheckBox112)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox113)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox114)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox115)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox116))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jCheckBox92)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox93)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox132)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox134))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jCheckBox89)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox90)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox91))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jCheckBox78)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox79))
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jCheckBox82)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox83)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox80)
                            .addComponent(jCheckBox102))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox81)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane7.setViewportView(jPanel18);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel8.add(jPanel12);
        jPanel12.setBounds(259, 17, 796, 181);

        botonEML.setText("EXPORTAR DATOS A EXCEL");
        botonEML.setEnabled(false);
        botonEML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEMLActionPerformed(evt);
            }
        });
        jPanel8.add(botonEML);
        botonEML.setBounds(698, 524, 175, 23);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("MANIFIESTOS DE LLEGADA", jPanel4);

        jMenu1.setText("ARCHIVO");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("VOLVER A LA VENTANA DE INICIO");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("SALIR DE LA APLICACIÓN");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1092, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonBuscarPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarPlanesActionPerformed
        jCheckBox67.setSelected(true);
        jCheckBox68.setSelected(true);
        jCheckBox69.setSelected(true);
        jCheckBox70.setSelected(true);
        jCheckBox71.setSelected(true);
        jCheckBox72.setSelected(true);
        jCheckBox73.setSelected(true);
        jCheckBox74.setSelected(true);
        jCheckBox75.setSelected(true);
        jCheckBox76.setSelected(true);
        jCheckBox77.setSelected(true);
        jCheckBox84.setSelected(true);
        jCheckBox85.setSelected(true);
        jCheckBox86.setSelected(true);
        jCheckBox87.setSelected(true);
        jCheckBox88.setSelected(true);
        jCheckBox94.setSelected(true);
        jCheckBox95.setSelected(true);
        jCheckBox96.setSelected(true);
        jCheckBox97.setSelected(true);
        jCheckBox98.setSelected(true);
        jCheckBox99.setSelected(true);
        jCheckBox100.setSelected(true);
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "APERTURAS_DE_VUELO.fecha_hora, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
        preconsulta += "PILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - LICENCIA";
        preconsulta += "PILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - NOMBRE(S)";
        preconsulta += "PILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A PATERNO";
        preconsulta += "PILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A MATERNO";
        preconsulta += "PILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - T LICENCIA";
        preconsulta += "COPILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - LICENCIA";
        preconsulta += "COPILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - NOMBRE(S)";
        preconsulta += "COPILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A PATERNO";
        preconsulta += "COPILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A MATERNO";
        preconsulta += "COPILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - T LICENCIA";
        preconsulta += "AEROPUERTOS_PLANES.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_PLANES.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "AERONAVES_PLANES.identificacion_aeronave, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_PLANES.tipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - TIPO";
        preconsulta += "APERTURAS_DE_VUELO.otros_datos, ";
            nombresColumnas[columnas][1] = "variosRenglones";
            nombresColumnas[columnas++][0] = "OTROS DATOS";
        preconsulta += "APERTURAS_DE_VUELO.no_personas_a_bordo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PERSONAS A BORDO";
        preconsulta += "PASAJEROS_APERTURA.nombre, ";
            nombresColumnas[columnas][1] = "pasajeroN";
            nombresColumnas[columnas++][0] = "PASAJERO - NOMBRE(S)";
        preconsulta += "PASAJEROS_APERTURA.apellido_paterno, ";
            nombresColumnas[columnas][1] = "pasajeroAP";
            nombresColumnas[columnas++][0] = "PASAJERO - A PATERNO";
        preconsulta += "PASAJEROS_APERTURA.apellido_materno, ";
            nombresColumnas[columnas][1] = "pasajeroAM";
            nombresColumnas[columnas++][0] = "PASAJERO - A MATERNO";
        preconsulta += "PASAJEROS_APERTURA.nacionalidad, ";
            nombresColumnas[columnas][1] = "pasajeroNa";
            nombresColumnas[columnas++][0] = "PASAJERO - NACIONALIDAD";
        preconsulta += "PDFS_APERTURA.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_APERTURA.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM APERTURAS_DE_VUELO\n";
        consulta += "LEFT JOIN PILOTOS_PLANES\n" +
            "ON PILOTOS_PLANES.no_licencia = APERTURAS_DE_VUELO.piloto\n";           
        consulta += "LEFT JOIN COPILOTOS_APERTURA\n" +
            "ON COPILOTOS_APERTURA.fecha = APERTURAS_DE_VUELO.fecha_hora\n" +
            "LEFT JOIN COPILOTOS_PLANES\n" +
            "ON COPILOTOS_APERTURA.copiloto = COPILOTOS_PLANES.no_licencia\n";           
        consulta += "LEFT JOIN AEROPUERTOS_PLANES\n" +
            "ON AEROPUERTOS_PLANES.codigo_oaci = APERTURAS_DE_VUELO.aeropuerto_destino\n";           
        consulta += "LEFT JOIN AERONAVES_PLANES\n" +
            "ON AERONAVES_PLANES.identificacion_aeronave = APERTURAS_DE_VUELO.aeronave\n";           
        consulta += "LEFT JOIN PASAJEROS_APERTURA\n" +
            "ON PASAJEROS_APERTURA.fecha = APERTURAS_DE_VUELO.fecha_hora\n";
        consulta += "LEFT JOIN RELACION_PDF_APERTURAS\n" +
            "ON RELACION_PDF_APERTURAS.fecha = APERTURAS_DE_VUELO.fecha_hora\n" +
            "LEFT JOIN PDFS_APERTURA\n" +
            "ON RELACION_PDF_APERTURAS.pdf = PDFS_APERTURA.ruta_pdf\n"; 
        if (criteriosPlanes != null) {
            consulta += criteriosPlanes;
        }
        consulta += "ORDER BY APERTURAS_DE_VUELO.fecha_hora";
        ConexionMysql conexionConsultaPlan = new ConexionMysql();
        if (conexionConsultaPlan.conectarBD("localhost","root",pw,"baseaeropuerto")) {
            if (!conexionConsultaPlan.mostrarColumnasTablaMysqlCompuesta(jTablePlanes,consulta,nombresColumnas,columnas,1)) {
                JOptionPane.showMessageDialog(this,conexionConsultaPlan.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton12.setEnabled(true);
                botonBuscarPlanes.setEnabled(false);
                botonCriteriosPlanes.setEnabled(false);
                if (jTablePlanes.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this,"SU BUSQUEDA NO HA GENERADO RESULTADOS","",JOptionPane.INFORMATION_MESSAGE);
                } else {
                    botonEPlanes.setEnabled(true);
                    jPanel11.setEnabled(true);
                    jCheckBox67.setEnabled(true);
                    jCheckBox68.setEnabled(true);
                    jCheckBox69.setEnabled(true);
                    jCheckBox70.setEnabled(true);
                    jCheckBox71.setEnabled(true);
                    jCheckBox72.setEnabled(true);
                    jCheckBox73.setEnabled(true);
                    jCheckBox74.setEnabled(true);
                    jCheckBox75.setEnabled(true);
                    jCheckBox76.setEnabled(true);
                    jCheckBox77.setEnabled(true);
                    jCheckBox84.setEnabled(true);
                    jCheckBox85.setEnabled(true);
                    jCheckBox86.setEnabled(true);
                    jCheckBox87.setEnabled(true);
                    jCheckBox88.setEnabled(true);
                    jCheckBox94.setEnabled(true);
                    jCheckBox95.setEnabled(true);
                    jCheckBox96.setEnabled(true);
                    jCheckBox97.setEnabled(true);
                    jCheckBox98.setEnabled(true);
                    jCheckBox99.setEnabled(true);
                    jCheckBox100.setEnabled(true);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaPlan.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonBuscarPlanesActionPerformed

    private void botonCriteriosPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriteriosPlanesActionPerformed
        limpiarCriteriosPlanes();
        BBJDialogBusquedaPlanes cPlanes = new BBJDialogBusquedaPlanes(this,true);
        if (primeraVezPlanes == false) {
            if (rBFechaPlanes != 0) {
                cPlanes.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaPlanes  == 11) {
                    try {
                        cPlanes.jDateChooser3.setDate(formatoFecha.parse(fecha1Planes));
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cPlanes.jRadioButton12.setSelected(true);
                    try {
                        cPlanes.jDateChooser2.setDate(formatoFecha.parse(fecha2Planes));
                        cPlanes.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cPlanes.jDateChooser1.setDate(formatoFecha.parse(fecha3Planes));
                        cPlanes.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (cBPasajeros1Planes != 0 || cBPasajeros2Planes != 0 || cBPasajeros3Planes != 0) {
                cPlanes.jCheckBox1.setSelected(true);
                if (cBPasajeros1Planes == 2) {
                    cPlanes.jCheckBox2.setSelected(true);
                    cPlanes.jTextField7.setText(pasajero1Planes);
                }
                if (cBPasajeros2Planes == 7) {
                    cPlanes.jCheckBox7.setSelected(true);
                    cPlanes.jTextField14.setText(pasajero2Planes);
                }
                if (cBPasajeros3Planes == 8) {
                    cPlanes.jCheckBox8.setSelected(true);
                    cPlanes.jTextField13.setText(pasajero3Planes);
                }
            }
            if (cBPersonal1Planes != 0 || cBPersonal2Planes != 0 || cBPersonal3Planes != 0) {
                cPlanes.jCheckBox12.setSelected(true);
                if (rBPersonalInfoPlanes == 1) {
                    cPlanes.jRadioButton1.setSelected(true); 
                } else {
                    cPlanes.jRadioButton2.setSelected(true); 
                }
                if (cBPersonal1Planes == 9) {
                    cPlanes.jCheckBox9.setSelected(true);
                    cPlanes.jTextField8.setText(personal1Planes);
                }
                if (cBPersonal2Planes == 10) {
                    cPlanes.jCheckBox10.setSelected(true);
                    cPlanes.jTextField18.setText(personal2Planes);
                }
                if (cBPersonal3Planes == 11) {
                    cPlanes.jCheckBox11.setSelected(true);
                    cPlanes.jTextField16.setText(personal3Planes);
                }
            }
            if (rBPersonalPlanes  != 0) {
                cPlanes.jCheckBox6.setSelected(true);
                if (rBPersonalPlanes == 15) {
                    cPlanes.jRadioButton15.setSelected(true);
                    cPlanes.jTextField15.setText(licenciaPlanes);
                } else  {
                    cPlanes.jRadioButton17.setSelected(true);
                    cPlanes.jTextField17.setText(licenciaPlanes);
                }
            }
            if (rBAeronavePlanes != 0) {
                cPlanes.jCheckBox3.setSelected(true);
                if (rBAeronavePlanes == 9) {
                    cPlanes.jRadioButton9.setSelected(true);
                    cPlanes.jTextField11.setText(aeronavePlanes);
                } else  {
                    cPlanes.jRadioButton10.setSelected(true);
                    cPlanes.jTextField12.setText(aeronavePlanes);
                }
            }
            if (rBAeropuertoPlanes != 0) {
                cPlanes.jCheckBox5.setSelected(true);
                if (rBAeropuertoPlanes == 18) {
                    cPlanes.jRadioButton18.setSelected(true);
                    cPlanes.jTextField20.setText(aeropuertoPlanes);
                } else  {
                    cPlanes.jRadioButton19.setSelected(true);
                    cPlanes.jTextField21.setText(aeropuertoPlanes);
                }
            }
        }
        cPlanes.setVisible(true);
    }//GEN-LAST:event_botonCriteriosPlanesActionPerformed

    private void botonCriteriosCierresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriteriosCierresActionPerformed
        limpiarCriteriosCierres();
        BCJDialogBusquedaCierres cCierres = new BCJDialogBusquedaCierres(this,true);
        if (primeraVezCierres == false) {
            if (rBFechaCierres != 0) {
                cCierres.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaCierres  == 11) {
                    try {
                        cCierres.jDateChooser3.setDate(formatoFecha.parse(fecha1Cierres));
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cCierres.jRadioButton12.setSelected(true);
                    try {
                        cCierres.jDateChooser2.setDate(formatoFecha.parse(fecha2Cierres));
                        cCierres.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cCierres.jDateChooser1.setDate(formatoFecha.parse(fecha3Cierres));
                        cCierres.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (cBPasajeros1Cierres != 0 || cBPasajeros2Cierres != 0 || cBPasajeros3Cierres != 0) {
                cCierres.jCheckBox1.setSelected(true);
                if (cBPasajeros1Cierres == 2) {
                    cCierres.jCheckBox2.setSelected(true);
                    cCierres.jTextField7.setText(pasajero1Cierres);
                }
                if (cBPasajeros2Cierres == 7) {
                    cCierres.jCheckBox7.setSelected(true);
                    cCierres.jTextField14.setText(pasajero2Cierres);
                }
                if (cBPasajeros3Cierres == 8) {
                    cCierres.jCheckBox8.setSelected(true);
                    cCierres.jTextField13.setText(pasajero3Cierres);
                }
            }
            if (rBPersonalCierres  != 0) {
                cCierres.jCheckBox6.setSelected(true);
                if (rBPersonalCierres == 15) {
                    cCierres.jRadioButton15.setSelected(true);
                    cCierres.jTextField15.setText(licenciaCierres);
                } else  {
                    cCierres.jRadioButton17.setSelected(true);
                    cCierres.jTextField17.setText(licenciaCierres);
                }
            }
            if (rBAeronaveCierres != 0) {
                cCierres.jCheckBox3.setSelected(true);
                if (rBAeronaveCierres == 9) {
                    cCierres.jRadioButton9.setSelected(true);
                    cCierres.jTextField11.setText(aeronaveCierres);
                } else  {
                    cCierres.jRadioButton10.setSelected(true);
                    cCierres.jTextField12.setText(aeronaveCierres);
                }
            }
            if (rBAeropuertoCierres != 0) {
                cCierres.jCheckBox5.setSelected(true);
                if (rBAeropuertoCierres == 18) {
                    cCierres.jRadioButton18.setSelected(true);
                    cCierres.jTextField20.setText(aeropuertoCierres);
                } else  {
                    cCierres.jRadioButton19.setSelected(true);
                    cCierres.jTextField21.setText(aeropuertoCierres);
                }
            }
        }
        cCierres.setVisible(true);
    }//GEN-LAST:event_botonCriteriosCierresActionPerformed

    private void botonBuscarCierresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarCierresActionPerformed
        jCheckBox45.setSelected(true);
        jCheckBox46.setSelected(true);
        jCheckBox47.setSelected(true);
        jCheckBox48.setSelected(true);
        jCheckBox49.setSelected(true);
        jCheckBox50.setSelected(true);
        jCheckBox51.setSelected(true);
        jCheckBox52.setSelected(true);
        jCheckBox53.setSelected(true);
        jCheckBox54.setSelected(true);
        jCheckBox55.setSelected(true);
        jCheckBox56.setSelected(true);
        jCheckBox57.setSelected(true);
        jCheckBox58.setSelected(true);
        jCheckBox59.setSelected(true);
        jCheckBox60.setSelected(true);
        jCheckBox61.setSelected(true);
        jCheckBox62.setSelected(true);
        jCheckBox63.setSelected(true);
        jCheckBox64.setSelected(true);
        jCheckBox65.setSelected(true);
        jCheckBox66.setSelected(true);
        jCheckBox101.setSelected(true);
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "CIERRES_DE_PLAN.fecha_hora, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
        preconsulta += "PILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - LICENCIA";
        preconsulta += "PILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - NOMBRE(S)";
        preconsulta += "PILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A PATERNO";
        preconsulta += "PILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A MATERNO";
        preconsulta += "PILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - T LICENCIA";
        preconsulta += "COPILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - LICENCIA";
        preconsulta += "COPILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - NOMBRE(S)";
        preconsulta += "COPILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A PATERNO";
        preconsulta += "COPILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A MATERNO";
        preconsulta += "COPILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - T LICENCIA";
        preconsulta += "AEROPUERTOS_PLANES.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_PLANES.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "AERONAVES_PLANES.identificacion_aeronave, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_PLANES.tipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - TIPO";
        preconsulta += "CIERRES_DE_PLAN.observaciones, ";
            nombresColumnas[columnas][1] = "variosRenglones";
            nombresColumnas[columnas++][0] = "OBSERVACIONES";
        preconsulta += "CIERRES_DE_PLAN.no_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "No. PASAJEROS";
        preconsulta += "PASAJEROS_CIERRE.nombre, ";
            nombresColumnas[columnas][1] = "pasajeroN";
            nombresColumnas[columnas++][0] = "PASAJERO - NOMBRE(S)";
        preconsulta += "PASAJEROS_CIERRE.apellido_paterno, ";
            nombresColumnas[columnas][1] = "pasajeroAP";
            nombresColumnas[columnas++][0] = "PASAJERO - A PATERNO";
        preconsulta += "PASAJEROS_CIERRE.apellido_materno, ";
            nombresColumnas[columnas][1] = "pasajeroAM";
            nombresColumnas[columnas++][0] = "PASAJERO - A MATERNO";
        preconsulta += "PASAJEROS_CIERRE.nacionalidad, ";
            nombresColumnas[columnas][1] = "pasajeroNa";
            nombresColumnas[columnas++][0] = "PASAJERO - NACIONALIDAD";
        preconsulta += "PDFS_CIERRE.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_CIERRE.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM CIERRES_DE_PLAN\n";
        consulta += "LEFT JOIN PILOTOS_PLANES\n" +
            "ON PILOTOS_PLANES.no_licencia = CIERRES_DE_PLAN.piloto\n";             
        consulta += "LEFT JOIN COPILOTOS_CIERRE\n" +
            "ON COPILOTOS_CIERRE.fecha = CIERRES_DE_PLAN.fecha_hora\n" +
            "LEFT JOIN COPILOTOS_PLANES\n" +
            "ON COPILOTOS_CIERRE.copiloto = COPILOTOS_PLANES.no_licencia\n";               
        consulta += "LEFT JOIN AEROPUERTOS_PLANES\n" +
            "ON AEROPUERTOS_PLANES.codigo_oaci = CIERRES_DE_PLAN.aeropuerto_origen\n";           
        consulta += "LEFT JOIN AERONAVES_PLANES\n" +
            "ON AERONAVES_PLANES.identificacion_aeronave = CIERRES_DE_PLAN.aeronave\n";           
        consulta += "LEFT JOIN PASAJEROS_CIERRE\n" +
            "ON PASAJEROS_CIERRE.fecha = CIERRES_DE_PLAN.fecha_hora\n";  
        consulta += "LEFT JOIN RELACION_PDF_CIERRES\n" +
            "ON RELACION_PDF_CIERRES.fecha = CIERRES_DE_PLAN.fecha_hora\n" +
            "LEFT JOIN PDFS_CIERRE\n" +
            "ON RELACION_PDF_CIERRES.pdf = PDFS_CIERRE.ruta_pdf\n"; 
        if (criteriosCierres != null) {
            consulta += criteriosCierres;
        }
        consulta += "ORDER BY CIERRES_DE_PLAN.fecha_hora";
        ConexionMysql conexionConsultaCierre = new ConexionMysql();
        if (conexionConsultaCierre.conectarBD("localhost","root",pw,"baseaeropuerto")) {
            if (!conexionConsultaCierre.mostrarColumnasTablaMysqlCompuesta(jTableCierres,consulta,nombresColumnas,columnas,1)) {
                JOptionPane.showMessageDialog(this,conexionConsultaCierre.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton11.setEnabled(true);
                botonBuscarCierres.setEnabled(false);
                botonCriteriosCierres.setEnabled(false);
                if (jTableCierres.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this,"SU BUSQUEDA NO HA GENERADO RESULTADOS","",JOptionPane.INFORMATION_MESSAGE);
                } else {
                    botonECierres.setEnabled(true);
                    jPanel10.setEnabled(true);
                    jCheckBox45.setEnabled(true);
                    jCheckBox46.setEnabled(true);
                    jCheckBox47.setEnabled(true);
                    jCheckBox48.setEnabled(true);
                    jCheckBox49.setEnabled(true);
                    jCheckBox50.setEnabled(true);
                    jCheckBox51.setEnabled(true);
                    jCheckBox52.setEnabled(true);
                    jCheckBox53.setEnabled(true);
                    jCheckBox54.setEnabled(true);
                    jCheckBox55.setEnabled(true);
                    jCheckBox56.setEnabled(true);
                    jCheckBox57.setEnabled(true);
                    jCheckBox58.setEnabled(true);
                    jCheckBox59.setEnabled(true);
                    jCheckBox60.setEnabled(true);
                    jCheckBox61.setEnabled(true);
                    jCheckBox62.setEnabled(true);
                    jCheckBox63.setEnabled(true);
                    jCheckBox64.setEnabled(true);
                    jCheckBox65.setEnabled(true);
                    jCheckBox66.setEnabled(true);
                    jCheckBox101.setEnabled(true);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaCierre.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonBuscarCierresActionPerformed

    private void botonCriteriosMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriteriosMSActionPerformed
        limpiarCriteriosManifiestosSalida();
        BDJDialogBusquedaManifiestos cManifiestosSalida = new BDJDialogBusquedaManifiestos(this,true);
        if (primeraVezMSalida == false) {
            if (rBFechaMSalida != 0) {
                cManifiestosSalida.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaMSalida == 11) {
                    try {
                        cManifiestosSalida.jDateChooser3.setDate(formatoFecha.parse(fecha1MSalida));
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cManifiestosSalida.jRadioButton12.setSelected(true);
                    try {
                        cManifiestosSalida.jDateChooser2.setDate(formatoFecha.parse(fecha2MSalida));
                        cManifiestosSalida.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cManifiestosSalida.jDateChooser1.setDate(formatoFecha.parse(fecha3MSalida));
                        cManifiestosSalida.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (rBPersonalMSalida != 0) {
                cManifiestosSalida.jCheckBox6.setSelected(true);
                if (rBPersonalMSalida == 15) {
                    cManifiestosSalida.jRadioButton15.setSelected(true);
                    cManifiestosSalida.jTextField15.setText(licenciaMSalida);
                } else if (rBPersonalMSalida == 17) {
                    cManifiestosSalida.jRadioButton17.setSelected(true);
                    cManifiestosSalida.jTextField17.setText(licenciaMSalida);
                } else if (rBPersonalMSalida == 16) {
                    cManifiestosSalida.jRadioButton16.setSelected(true);
                    cManifiestosSalida.jTextField16.setText(licenciaMSalida);
                } else {
                    cManifiestosSalida.jRadioButton20.setSelected(true);
                    cManifiestosSalida.jTextField18.setText(licenciaMSalida);
                }
            }
            if (rBAeronaveMSalida != 0) {
                cManifiestosSalida.jCheckBox3.setSelected(true);
                if (rBAeronaveMSalida == 9) {
                    cManifiestosSalida.jRadioButton9.setSelected(true);
                    cManifiestosSalida.jTextField11.setText(aeronaveMSalida);
                } else {
                    cManifiestosSalida.jRadioButton10.setSelected(true);
                    cManifiestosSalida.jTextField12.setText(aeronaveMSalida);
                }
            }
            if (rBDestinoMSalida != 0) {
                cManifiestosSalida.jCheckBox5.setSelected(true);
                if (rBDestinoMSalida == 18) {
                    cManifiestosSalida.jRadioButton18.setSelected(true);
                    cManifiestosSalida.jTextField20.setText(destinoMSalida);
                } else {
                    cManifiestosSalida.jRadioButton19.setSelected(true);
                    cManifiestosSalida.jTextField21.setText(destinoMSalida);
                }
            }
            if (aerolineaMSalida != null) {
                cManifiestosSalida.jCheckBox7.setSelected(true);
                cManifiestosSalida.jTextField1.setText(aerolineaMSalida);
            }
            if (vueloMSalida != null) {
                cManifiestosSalida.jCheckBox8.setSelected(true);
                cManifiestosSalida.jTextField2.setText(vueloMSalida);
            }
        }
        cManifiestosSalida.setVisible(true);
    }//GEN-LAST:event_botonCriteriosMSActionPerformed

    private void botonCriteriosMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriteriosMLActionPerformed
        limpiarCriteriosManifiestosLlegada();
        BEJDialogBusquedaManifiestosLlegada cManifiestosLlegada = new BEJDialogBusquedaManifiestosLlegada(this,true);
        if (primeraVezMLlegada == false) {
            if (rBFechaMLlegada != 0) {
                cManifiestosLlegada.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaMLlegada == 11) {
                    try {
                        cManifiestosLlegada.jDateChooser3.setDate(formatoFecha.parse(fecha1MLlegada));
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cManifiestosLlegada.jRadioButton12.setSelected(true);
                    try {
                        cManifiestosLlegada.jDateChooser2.setDate(formatoFecha.parse(fecha2MLlegada));
                        cManifiestosLlegada.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cManifiestosLlegada.jDateChooser1.setDate(formatoFecha.parse(fecha3MLlegada));
                        cManifiestosLlegada.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (rBPersonalMLlegada != 0) {
                cManifiestosLlegada.jCheckBox6.setSelected(true);
                if (rBPersonalMLlegada == 15) {
                    cManifiestosLlegada.jRadioButton15.setSelected(true);
                    cManifiestosLlegada.jTextField15.setText(licenciaMLlegada);
                } else if (rBPersonalMLlegada == 17) {
                    cManifiestosLlegada.jRadioButton17.setSelected(true);
                    cManifiestosLlegada.jTextField17.setText(licenciaMLlegada);
                } else if (rBPersonalMLlegada == 16) {
                    cManifiestosLlegada.jRadioButton16.setSelected(true);
                    cManifiestosLlegada.jTextField16.setText(licenciaMLlegada);
                } else {
                    cManifiestosLlegada.jRadioButton20.setSelected(true);
                    cManifiestosLlegada.jTextField18.setText(licenciaMLlegada);
                }
            }
            if (rBAeronaveMLlegada != 0) {
                cManifiestosLlegada.jCheckBox3.setSelected(true);
                if (rBAeronaveMLlegada == 9) {
                    cManifiestosLlegada.jRadioButton9.setSelected(true);
                    cManifiestosLlegada.jTextField11.setText(aeronaveMLlegada);
                } else {
                    cManifiestosLlegada.jRadioButton10.setSelected(true);
                    cManifiestosLlegada.jTextField12.setText(aeronaveMLlegada);
                }
            }
            if (rBOrigenMLlegada != 0) {
                cManifiestosLlegada.jCheckBox5.setSelected(true);
                if (rBOrigenMLlegada == 18) {
                    cManifiestosLlegada.jRadioButton18.setSelected(true);
                    cManifiestosLlegada.jTextField20.setText(origenMLlegada);
                } else {
                    cManifiestosLlegada.jRadioButton19.setSelected(true);
                    cManifiestosLlegada.jTextField21.setText(origenMLlegada);
                }
            }
            if (aerolineaMLlegada != null) {
                cManifiestosLlegada.jCheckBox7.setSelected(true);
                cManifiestosLlegada.jTextField1.setText(aerolineaMLlegada);
            }
            if (vueloMLlegada != null) {
                cManifiestosLlegada.jCheckBox8.setSelected(true);
                cManifiestosLlegada.jTextField2.setText(vueloMLlegada);
            }
        }
        cManifiestosLlegada.setVisible(true);
    }//GEN-LAST:event_botonCriteriosMLActionPerformed

    private void botonBuscarMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarMSActionPerformed
        jCheckBox133.setSelected(true);
        jCheckBox135.setSelected(true);
        jCheckBox136.setSelected(true);
        jCheckBox137.setSelected(true);
        jCheckBox138.setSelected(true);
        jCheckBox139.setSelected(true);
        jCheckBox140.setSelected(true);
        jCheckBox141.setSelected(true);
        jCheckBox142.setSelected(true);
        jCheckBox143.setSelected(true);
        jCheckBox144.setSelected(true);
        jCheckBox145.setSelected(true);
        jCheckBox146.setSelected(true);
        jCheckBox147.setSelected(true);
        jCheckBox148.setSelected(true);
        jCheckBox149.setSelected(true);
        jCheckBox150.setSelected(true);
        jCheckBox151.setSelected(true);
        jCheckBox152.setSelected(true);
        jCheckBox153.setSelected(true);
        jCheckBox154.setSelected(true);
        jCheckBox155.setSelected(true);
        jCheckBox156.setSelected(true);
        jCheckBox157.setSelected(true);
        jCheckBox158.setSelected(true);
        jCheckBox159.setSelected(true);
        jCheckBox160.setSelected(true);
        jCheckBox161.setSelected(true);
        jCheckBox162.setSelected(true);
        jCheckBox163.setSelected(true);
        jCheckBox164.setSelected(true);
        jCheckBox165.setSelected(true);
        jCheckBox166.setSelected(true);
        jCheckBox167.setSelected(true);
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "MANIFIESTOS_SALIDA.fecha_hora_itinerario, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
            nombresColumnas[columnas][1] = "hi";
            nombresColumnas[columnas++][0] = "HORA ITINERARIO";
        preconsulta += "MANIFIESTOS_SALIDA.hora_real, ";
            nombresColumnas[columnas][1] = "hr";
            nombresColumnas[columnas++][0] = "HORA REAL";
        preconsulta += "MANIFIESTOS_SALIDA.no_de_vuelo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "NO DE VUELO";
        preconsulta += "COMPANIAS.siglas, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - SIGLAS";
        preconsulta += "COMPANIAS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - NOMBRE";
        preconsulta += "AERONAVES_MANIFIESTOS.matricula, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_MANIFIESTOS.equipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - EQUIPO";
        preconsulta += "COMANDANTE.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - LICENCIA";
        preconsulta += "COMANDANTE.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDATE - NOMBRE(S)";
        preconsulta += "COMANDANTE.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A PATERNO";
        preconsulta += "COMANDANTE.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A MATERNO";
        preconsulta += "COMANDANTE.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - T LICENCIA";
        preconsulta += "PRIMER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - LICENCIA";
        preconsulta += "PRIMER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - NOMBRE(S)";
        preconsulta += "PRIMER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A PATERNO";
        preconsulta += "PRIMER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A MATERNO";
        preconsulta += "PRIMER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - T LICENCIA";    
        preconsulta += "SEGUNDO_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - LICENCIA";
        preconsulta += "SEGUNDO_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - NOMBRE(S)";
        preconsulta += "SEGUNDO_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A PATERNO";
        preconsulta += "SEGUNDO_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A MATERNO";
        preconsulta += "SEGUNDO_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - T LICENCIA";    
        preconsulta += "TERCER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - LICENCIA";
        preconsulta += "TERCER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - NOMBRE(S)";
        preconsulta += "TERCER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A PATERNO";
        preconsulta += "TERCER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A MATERNO";
        preconsulta += "TERCER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - T LICENCIA";    
        preconsulta += "MANIFIESTOS_SALIDA.sobrecargos, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SOBRECARGOS";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "MANIFIESTOS_SALIDA.tramo_interior, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TRAMO INTERIOR";
        preconsulta += "MANIFIESTOS_SALIDA.exentos_nacionales, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "EXENTOS NACIONALES";
        preconsulta += "MANIFIESTOS_SALIDA.internacionales, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "INTERNACIONALES";
        preconsulta += "MANIFIESTOS_SALIDA.exentos_internacionales, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "EXENTOS INTERNACIONALES";
        preconsulta += "MANIFIESTOS_SALIDA.infantes, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "INFANTES";
        preconsulta += "MANIFIESTOS_SALIDA.transito, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TRANSITO";
        preconsulta += "MANIFIESTOS_SALIDA.total, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - PASAJEROS";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_equipaje, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - EQUIPAJE";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_carga, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CARGA";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_correo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CORREO";
        preconsulta += "PDFS_MANIFIESTOS.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM MANIFIESTOS_SALIDA\n";
        consulta += "LEFT JOIN COMPANIAS\n" +
            "ON COMPANIAS.siglas = MANIFIESTOS_SALIDA.empresa\n";
        consulta += "LEFT JOIN AERONAVES_MANIFIESTOS\n" +
            "ON AERONAVES_MANIFIESTOS.matricula = MANIFIESTOS_SALIDA.aeronave\n";
        consulta += "LEFT JOIN COMANDANTE\n" +
            "ON COMANDANTE.no_licencia = MANIFIESTOS_SALIDA.comandante\n";
        consulta += "LEFT JOIN PRIMER_OFICIAL\n" +
            "ON PRIMER_OFICIAL.no_licencia = MANIFIESTOS_SALIDA.primer\n";
        consulta += "LEFT JOIN SEGUNDO_SALIDA\n" +
            "ON SEGUNDO_SALIDA.fecha_ss = MANIFIESTOS_SALIDA.fecha_hora_itinerario\n" +
            "LEFT JOIN SEGUNDO_OFICIAL\n" +
            "ON SEGUNDO_SALIDA.licencia_ss = SEGUNDO_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN TERCERO_SALIDA\n" +
            "ON TERCERO_SALIDA.fecha_ts = MANIFIESTOS_SALIDA.fecha_hora_itinerario\n" +
            "LEFT JOIN TERCER_OFICIAL\n" +
            "ON TERCERO_SALIDA.licencia_ts = TERCER_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN AEROPUERTOS_MANIFIESTOS\n" +
            "ON AEROPUERTOS_MANIFIESTOS.codigo_iata = MANIFIESTOS_SALIDA.destino\n";       
        consulta += "LEFT JOIN PDFS_SALIDA\n" +
            "ON PDFS_SALIDA.fecha = MANIFIESTOS_SALIDA.fecha_hora_itinerario\n" +
            "LEFT JOIN PDFS_MANIFIESTOS\n" +
            "ON PDFS_SALIDA.pdf = PDFS_MANIFIESTOS.ruta_pdf\n"; 
        if (criteriosManifiestosSalida != null) {
            consulta += criteriosManifiestosSalida;
        }
        consulta += "ORDER BY MANIFIESTOS_SALIDA.fecha_hora_itinerario";
        ConexionMysql conexionConsultaMS = new ConexionMysql();
        if (conexionConsultaMS.conectarBD("localhost","root",pw,"baseaeropuerto")) {
            if (!conexionConsultaMS.mostrarColumnasTablaMysqlCompuesta(jTableMS,consulta,nombresColumnas,columnas,1)) {
                JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton14.setEnabled(true);
                botonBuscarMS.setEnabled(false);
                botonCriteriosMS.setEnabled(false);
                if (jTableMS.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this,"SU BUSQUEDA NO HA GENERADO RESULTADOS","",JOptionPane.INFORMATION_MESSAGE);
                } else {
                    botonEMS.setEnabled(true);
                    jPanel19.setEnabled(true);
                    jPanel20.setEnabled(true);
                    jCheckBox133.setEnabled(true);
                    jCheckBox135.setEnabled(true);
                    jCheckBox136.setEnabled(true);
                    jCheckBox137.setEnabled(true);
                    jCheckBox138.setEnabled(true);
                    jCheckBox139.setEnabled(true);
                    jCheckBox140.setEnabled(true);
                    jCheckBox141.setEnabled(true);
                    jCheckBox142.setEnabled(true);
                    jCheckBox143.setEnabled(true);
                    jCheckBox144.setEnabled(true);
                    jCheckBox145.setEnabled(true);
                    jCheckBox146.setEnabled(true);
                    jCheckBox147.setEnabled(true);
                    jCheckBox148.setEnabled(true);
                    jCheckBox149.setEnabled(true);
                    jCheckBox150.setEnabled(true);
                    jCheckBox151.setEnabled(true);
                    jCheckBox152.setEnabled(true);
                    jCheckBox153.setEnabled(true);
                    jCheckBox154.setEnabled(true);
                    jCheckBox155.setEnabled(true);
                    jCheckBox156.setEnabled(true);
                    jCheckBox157.setEnabled(true);
                    jCheckBox158.setEnabled(true);
                    jCheckBox159.setEnabled(true);
                    jCheckBox160.setEnabled(true);
                    jCheckBox161.setEnabled(true);
                    jCheckBox162.setEnabled(true);
                    jCheckBox163.setEnabled(true);
                    jCheckBox164.setEnabled(true);
                    jCheckBox165.setEnabled(true);
                    jCheckBox166.setEnabled(true);
                    jCheckBox167.setEnabled(true);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonBuscarMSActionPerformed

    private void jCheckBox67ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox67ItemStateChanged
        if (jCheckBox67.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,1);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,1);
        }
    }//GEN-LAST:event_jCheckBox67ItemStateChanged

    private void jCheckBox68ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox68ItemStateChanged
        if (jCheckBox68.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,2);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,2);
        }
    }//GEN-LAST:event_jCheckBox68ItemStateChanged

    private void jCheckBox69ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox69ItemStateChanged
        if (jCheckBox69.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,3);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,3);
        }
    }//GEN-LAST:event_jCheckBox69ItemStateChanged

    private void jCheckBox70ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox70ItemStateChanged
        if (jCheckBox70.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,4);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,4);
        }
    }//GEN-LAST:event_jCheckBox70ItemStateChanged

    private void jCheckBox71ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox71ItemStateChanged
        if (jCheckBox71.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,5);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,5);
        }
    }//GEN-LAST:event_jCheckBox71ItemStateChanged

    private void jCheckBox72ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox72ItemStateChanged
        if (jCheckBox72.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,6);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,6);
        }
    }//GEN-LAST:event_jCheckBox72ItemStateChanged

    private void jCheckBox73ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox73ItemStateChanged
        if (jCheckBox73.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,7);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,7);
        }
    }//GEN-LAST:event_jCheckBox73ItemStateChanged

    private void jCheckBox74ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox74ItemStateChanged
        if (jCheckBox74.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,8);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,8);
        }
    }//GEN-LAST:event_jCheckBox74ItemStateChanged

    private void jCheckBox75ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox75ItemStateChanged
        if (jCheckBox75.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,9);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,9);
        }
    }//GEN-LAST:event_jCheckBox75ItemStateChanged

    private void jCheckBox76ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox76ItemStateChanged
        if (jCheckBox76.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,10);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,10);
        }
    }//GEN-LAST:event_jCheckBox76ItemStateChanged

    private void jCheckBox77ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox77ItemStateChanged
        if (jCheckBox77.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,11);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,11);
        }
    }//GEN-LAST:event_jCheckBox77ItemStateChanged

    private void jCheckBox84ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox84ItemStateChanged
        if (jCheckBox84.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,17);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,17);
        }
    }//GEN-LAST:event_jCheckBox84ItemStateChanged

    private void jCheckBox85ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox85ItemStateChanged
        if (jCheckBox85.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,12);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,12);
        }
    }//GEN-LAST:event_jCheckBox85ItemStateChanged

    private void jCheckBox86ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox86ItemStateChanged
        if (jCheckBox86.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,13);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,13);
        }
    }//GEN-LAST:event_jCheckBox86ItemStateChanged

    private void jCheckBox87ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox87ItemStateChanged
        if (jCheckBox87.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,14);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,14);
        }
    }//GEN-LAST:event_jCheckBox87ItemStateChanged

    private void jCheckBox88ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox88ItemStateChanged
        if (jCheckBox88.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,15);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,15);
        }
    }//GEN-LAST:event_jCheckBox88ItemStateChanged

    private void jCheckBox94ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox94ItemStateChanged
        if (jCheckBox94.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,16);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,16);
        }
    }//GEN-LAST:event_jCheckBox94ItemStateChanged

    private void jCheckBox95ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox95ItemStateChanged
        if (jCheckBox95.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,18);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,18);
        }
    }//GEN-LAST:event_jCheckBox95ItemStateChanged

    private void jCheckBox96ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox96ItemStateChanged
        if (jCheckBox96.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,19);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,19);
        }
    }//GEN-LAST:event_jCheckBox96ItemStateChanged

    private void jCheckBox97ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox97ItemStateChanged
        if (jCheckBox97.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,20);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,20);
        }
    }//GEN-LAST:event_jCheckBox97ItemStateChanged

    private void jCheckBox98ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox98ItemStateChanged
        if (jCheckBox98.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,21);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,21);
        }
    }//GEN-LAST:event_jCheckBox98ItemStateChanged

    private void jCheckBox99ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox99ItemStateChanged
        if (jCheckBox99.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,22);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,22);
        }
    }//GEN-LAST:event_jCheckBox99ItemStateChanged

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        jCheckBox67.setSelected(true);
        jCheckBox68.setSelected(true);
        jCheckBox69.setSelected(true);
        jCheckBox70.setSelected(true);
        jCheckBox71.setSelected(true);
        jCheckBox72.setSelected(true);
        jCheckBox73.setSelected(true);
        jCheckBox74.setSelected(true);
        jCheckBox75.setSelected(true);
        jCheckBox76.setSelected(true);
        jCheckBox77.setSelected(true);
        jCheckBox84.setSelected(true);
        jCheckBox85.setSelected(true);
        jCheckBox86.setSelected(true);
        jCheckBox87.setSelected(true);
        jCheckBox88.setSelected(true);
        jCheckBox94.setSelected(true);
        jCheckBox95.setSelected(true);
        jCheckBox96.setSelected(true);
        jCheckBox97.setSelected(true);
        jCheckBox98.setSelected(true);
        jCheckBox99.setSelected(true);
        jCheckBox100.setSelected(true);
        FuncionesGenerales.limpiarTablaCompletamente(jTablePlanes);
        jPanel11.setEnabled(false);
        jCheckBox67.setEnabled(false);
        jCheckBox68.setEnabled(false);
        jCheckBox69.setEnabled(false);
        jCheckBox70.setEnabled(false);
        jCheckBox71.setEnabled(false);
        jCheckBox72.setEnabled(false);
        jCheckBox73.setEnabled(false);
        jCheckBox74.setEnabled(false);
        jCheckBox75.setEnabled(false);
        jCheckBox76.setEnabled(false);
        jCheckBox77.setEnabled(false);
        jCheckBox84.setEnabled(false);
        jCheckBox85.setEnabled(false);
        jCheckBox86.setEnabled(false);
        jCheckBox87.setEnabled(false);
        jCheckBox88.setEnabled(false);
        jCheckBox94.setEnabled(false);
        jCheckBox95.setEnabled(false);
        jCheckBox96.setEnabled(false);
        jCheckBox97.setEnabled(false);
        jCheckBox98.setEnabled(false);
        jCheckBox99.setEnabled(false);
        jCheckBox100.setEnabled(false);
        limpiarCriteriosPlanes();
        rBFechaPlanes = 0;
        fecha1Planes = null;
        fecha2Planes = null;
        fecha3Planes = null;
        cBPasajeros1Planes = 0;
        pasajero1Planes = null;
        cBPasajeros2Planes = 0;
        pasajero2Planes = null;
        cBPasajeros3Planes = 0;
        pasajero3Planes = null;
        cBPersonal1Planes = 0;
        personal1Planes = null;
        cBPersonal2Planes = 0;
        personal2Planes = null;
        cBPersonal3Planes = 0;
        personal3Planes = null;
        rBPersonalInfoPlanes = 0;
        rBPersonalPlanes = 0;
        licenciaPlanes = null;
        rBAeronavePlanes = 0;
        aeronavePlanes = null;
        rBAeropuertoPlanes = 0;
        aeropuertoPlanes = null;
        primeraVezPlanes = true;
        botonBuscarPlanes.setEnabled(true);
        botonCriteriosPlanes.setEnabled(true);
        botonEPlanes.setEnabled(false);
        jButton12.setEnabled(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        jCheckBox45.setSelected(true);
        jCheckBox46.setSelected(true);
        jCheckBox47.setSelected(true);
        jCheckBox48.setSelected(true);
        jCheckBox49.setSelected(true);
        jCheckBox50.setSelected(true);
        jCheckBox51.setSelected(true);
        jCheckBox52.setSelected(true);
        jCheckBox53.setSelected(true);
        jCheckBox54.setSelected(true);
        jCheckBox55.setSelected(true);
        jCheckBox56.setSelected(true);
        jCheckBox57.setSelected(true);
        jCheckBox58.setSelected(true);
        jCheckBox59.setSelected(true);
        jCheckBox60.setSelected(true);
        jCheckBox61.setSelected(true);
        jCheckBox62.setSelected(true);
        jCheckBox63.setSelected(true);
        jCheckBox64.setSelected(true);
        jCheckBox65.setSelected(true);
        jCheckBox66.setSelected(true);
        jCheckBox101.setSelected(true);
        FuncionesGenerales.limpiarTablaCompletamente(jTableCierres);
        jPanel10.setEnabled(false);
        jCheckBox45.setEnabled(false);
        jCheckBox46.setEnabled(false);
        jCheckBox47.setEnabled(false);
        jCheckBox48.setEnabled(false);
        jCheckBox49.setEnabled(false);
        jCheckBox50.setEnabled(false);
        jCheckBox51.setEnabled(false);
        jCheckBox52.setEnabled(false);
        jCheckBox53.setEnabled(false);
        jCheckBox54.setEnabled(false);
        jCheckBox55.setEnabled(false);
        jCheckBox56.setEnabled(false);
        jCheckBox57.setEnabled(false);
        jCheckBox58.setEnabled(false);
        jCheckBox59.setEnabled(false);
        jCheckBox60.setEnabled(false);
        jCheckBox61.setEnabled(false);
        jCheckBox62.setEnabled(false);
        jCheckBox63.setEnabled(false);
        jCheckBox64.setEnabled(false);
        jCheckBox65.setEnabled(false);
        jCheckBox66.setEnabled(false);
        jCheckBox101.setEnabled(false);
        limpiarCriteriosCierres();
        rBFechaCierres = 0;
        fecha1Cierres = null;
        fecha2Cierres = null;
        fecha3Cierres = null;
        cBPasajeros1Cierres = 0;
        pasajero1Cierres = null;
        cBPasajeros2Cierres = 0;
        pasajero2Cierres = null;
        cBPasajeros3Cierres = 0;
        pasajero3Cierres = null;
        cBPersonal1Cierres = 0;
        personal1Cierres = null;
        cBPersonal2Cierres = 0;
        personal2Cierres = null;
        cBPersonal3Cierres = 0;
        personal3Cierres = null;
        rBPersonalInfoCierres = 0;
        rBPersonalCierres = 0;
        licenciaCierres = null;
        rBAeronaveCierres = 0;
        aeronaveCierres = null;
        rBAeropuertoCierres = 0;
        aeropuertoCierres = null;
        primeraVezCierres = true;
        botonBuscarCierres.setEnabled(true);
        botonCriteriosCierres.setEnabled(true);
        botonECierres.setEnabled(false);
        jButton11.setEnabled(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jCheckBox45ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox45ItemStateChanged
        if (jCheckBox45.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,1);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,1);
        }
    }//GEN-LAST:event_jCheckBox45ItemStateChanged

    private void jCheckBox46ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox46ItemStateChanged
       if (jCheckBox46.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,2);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,2);
        }
    }//GEN-LAST:event_jCheckBox46ItemStateChanged

    private void jCheckBox47ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox47ItemStateChanged
        if (jCheckBox47.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,3);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,3);
        }
    }//GEN-LAST:event_jCheckBox47ItemStateChanged

    private void jCheckBox48ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox48ItemStateChanged
        if (jCheckBox48.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,4);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,4);
        }
    }//GEN-LAST:event_jCheckBox48ItemStateChanged

    private void jCheckBox49ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox49ItemStateChanged
        if (jCheckBox49.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,5);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,5);
        }
    }//GEN-LAST:event_jCheckBox49ItemStateChanged

    private void jCheckBox50ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox50ItemStateChanged
        if (jCheckBox50.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,6);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,6);
        }
    }//GEN-LAST:event_jCheckBox50ItemStateChanged

    private void jCheckBox62ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox62ItemStateChanged
        if (jCheckBox62.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,7);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,7);
        }
    }//GEN-LAST:event_jCheckBox62ItemStateChanged

    private void jCheckBox63ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox63ItemStateChanged
        if (jCheckBox63.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,8);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,8);
        }
    }//GEN-LAST:event_jCheckBox63ItemStateChanged

    private void jCheckBox64ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox64ItemStateChanged
        if (jCheckBox64.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,9);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,9);
        }
    }//GEN-LAST:event_jCheckBox64ItemStateChanged

    private void jCheckBox65ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox65ItemStateChanged
        if (jCheckBox65.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,10);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,10);
        }
    }//GEN-LAST:event_jCheckBox65ItemStateChanged

    private void jCheckBox66ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox66ItemStateChanged
        if (jCheckBox66.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,11);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,11);
        }
    }//GEN-LAST:event_jCheckBox66ItemStateChanged

    private void jCheckBox56ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox56ItemStateChanged
        if (jCheckBox56.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,17);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,17);
        }
    }//GEN-LAST:event_jCheckBox56ItemStateChanged

    private void jCheckBox51ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox51ItemStateChanged
        if (jCheckBox51.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,12);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,12);
        }
    }//GEN-LAST:event_jCheckBox51ItemStateChanged

    private void jCheckBox52ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox52ItemStateChanged
        if (jCheckBox52.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,13);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,13);
        }
    }//GEN-LAST:event_jCheckBox52ItemStateChanged

    private void jCheckBox53ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox53ItemStateChanged
        if (jCheckBox53.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,14);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,14);
        }
    }//GEN-LAST:event_jCheckBox53ItemStateChanged

    private void jCheckBox54ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox54ItemStateChanged
        if (jCheckBox54.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,15);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,15);
        }
    }//GEN-LAST:event_jCheckBox54ItemStateChanged

    private void jCheckBox55ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox55ItemStateChanged
        if (jCheckBox55.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,16);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,16);
        }
    }//GEN-LAST:event_jCheckBox55ItemStateChanged

    private void jCheckBox57ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox57ItemStateChanged
        if (jCheckBox57.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,18);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,18);
        }
    }//GEN-LAST:event_jCheckBox57ItemStateChanged

    private void jCheckBox58ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox58ItemStateChanged
        if (jCheckBox58.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,19);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,19);
        }
    }//GEN-LAST:event_jCheckBox58ItemStateChanged

    private void jCheckBox59ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox59ItemStateChanged
        if (jCheckBox59.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,20);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,20);
        }
    }//GEN-LAST:event_jCheckBox59ItemStateChanged

    private void jCheckBox60ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox60ItemStateChanged
        if (jCheckBox60.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,21);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,21);
        }
    }//GEN-LAST:event_jCheckBox60ItemStateChanged

    private void jCheckBox61ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox61ItemStateChanged
        if (jCheckBox61.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,22);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,22);
        }
    }//GEN-LAST:event_jCheckBox61ItemStateChanged

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        jCheckBox133.setSelected(true);
        jCheckBox135.setSelected(true);
        jCheckBox136.setSelected(true);
        jCheckBox137.setSelected(true);
        jCheckBox138.setSelected(true);
        jCheckBox139.setSelected(true);
        jCheckBox140.setSelected(true);
        jCheckBox141.setSelected(true);
        jCheckBox142.setSelected(true);
        jCheckBox143.setSelected(true);
        jCheckBox144.setSelected(true);
        jCheckBox145.setSelected(true);
        jCheckBox146.setSelected(true);
        jCheckBox147.setSelected(true);
        jCheckBox148.setSelected(true);
        jCheckBox149.setSelected(true);
        jCheckBox150.setSelected(true);
        jCheckBox151.setSelected(true);
        jCheckBox152.setSelected(true);
        jCheckBox153.setSelected(true);
        jCheckBox154.setSelected(true);
        jCheckBox155.setSelected(true);
        jCheckBox156.setSelected(true);
        jCheckBox157.setSelected(true);
        jCheckBox158.setSelected(true);
        jCheckBox159.setSelected(true);
        jCheckBox160.setSelected(true);
        jCheckBox161.setSelected(true);
        jCheckBox162.setSelected(true);
        jCheckBox163.setSelected(true);
        jCheckBox164.setSelected(true);
        jCheckBox165.setSelected(true);
        jCheckBox166.setSelected(true);
        jCheckBox167.setSelected(true);
        FuncionesGenerales.limpiarTablaCompletamente(jTableMS);
        jPanel19.setEnabled(false);
        jPanel20.setEnabled(false);
        jCheckBox133.setEnabled(false);
        jCheckBox135.setEnabled(false);
        jCheckBox136.setEnabled(false);
        jCheckBox137.setEnabled(false);
        jCheckBox138.setEnabled(false);
        jCheckBox139.setEnabled(false);
        jCheckBox140.setEnabled(false);
        jCheckBox141.setEnabled(false);
        jCheckBox142.setEnabled(false);
        jCheckBox143.setEnabled(false);
        jCheckBox144.setEnabled(false);
        jCheckBox145.setEnabled(false);
        jCheckBox146.setEnabled(false);
        jCheckBox147.setEnabled(false);
        jCheckBox148.setEnabled(false);
        jCheckBox149.setEnabled(false);
        jCheckBox150.setEnabled(false);
        jCheckBox151.setEnabled(false);
        jCheckBox152.setEnabled(false);
        jCheckBox153.setEnabled(false);
        jCheckBox154.setEnabled(false);
        jCheckBox155.setEnabled(false);
        jCheckBox156.setEnabled(false);
        jCheckBox157.setEnabled(false);
        jCheckBox158.setEnabled(false);
        jCheckBox159.setEnabled(false);
        jCheckBox160.setEnabled(false);
        jCheckBox161.setEnabled(false);
        jCheckBox162.setEnabled(false);
        jCheckBox163.setEnabled(false);
        jCheckBox164.setEnabled(false);
        jCheckBox165.setEnabled(false);
        jCheckBox166.setEnabled(false);
        jCheckBox167.setEnabled(false);
        limpiarCriteriosManifiestosSalida();
        rBFechaMSalida = 0;
        fecha1MSalida = null;
        fecha2MSalida = null;
        fecha3MSalida = null;
        rBPersonalMSalida = 0;
        licenciaMSalida = null;
        rBAeronaveMSalida = 0;
        aeronaveMSalida = null;
        rBDestinoMSalida = 0;
        destinoMSalida = null;
        aerolineaMSalida = null;
        vueloMSalida = null;
        primeraVezMSalida = true;
        botonBuscarMS.setEnabled(true);
        botonCriteriosMS.setEnabled(true);
        botonEMS.setEnabled(false);
        jButton14.setEnabled(false);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jCheckBox133ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox133ItemStateChanged
        if (jCheckBox133.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,1);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,1);
        }
    }//GEN-LAST:event_jCheckBox133ItemStateChanged

    private void jCheckBox135ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox135ItemStateChanged
        if (jCheckBox135.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,2);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,2);
        }
    }//GEN-LAST:event_jCheckBox135ItemStateChanged

    private void jCheckBox136ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox136ItemStateChanged
        if (jCheckBox136.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,3);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,3);
        }
    }//GEN-LAST:event_jCheckBox136ItemStateChanged

    private void jCheckBox137ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox137ItemStateChanged
        if (jCheckBox137.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,4);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,4);
        }
    }//GEN-LAST:event_jCheckBox137ItemStateChanged

    private void jCheckBox138ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox138ItemStateChanged
        if (jCheckBox138.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,5);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,5);
        }
    }//GEN-LAST:event_jCheckBox138ItemStateChanged

    private void jCheckBox139ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox139ItemStateChanged
        if (jCheckBox139.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,6);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,6);
        }
    }//GEN-LAST:event_jCheckBox139ItemStateChanged

    private void jCheckBox140ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox140ItemStateChanged
        if (jCheckBox140.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,30);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,30);
        }
    }//GEN-LAST:event_jCheckBox140ItemStateChanged

    private void jCheckBox141ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox141ItemStateChanged
        if (jCheckBox141.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,31);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,31);
        }
    }//GEN-LAST:event_jCheckBox141ItemStateChanged

    private void jCheckBox142ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox142ItemStateChanged
        if (jCheckBox142.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,32);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,32);
        }
    }//GEN-LAST:event_jCheckBox142ItemStateChanged

    private void jCheckBox143ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox143ItemStateChanged
        if (jCheckBox143.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,7);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,7);
        }
    }//GEN-LAST:event_jCheckBox143ItemStateChanged

    private void jCheckBox144ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox144ItemStateChanged
        if (jCheckBox144.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,8);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,8);
        }
    }//GEN-LAST:event_jCheckBox144ItemStateChanged

    private void jCheckBox145ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox145ItemStateChanged
        if (jCheckBox145.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,29);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,29);
        }
    }//GEN-LAST:event_jCheckBox145ItemStateChanged

    private void jCheckBox147ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox147ItemStateChanged
        if (jCheckBox147.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,9);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,9);
        }
    }//GEN-LAST:event_jCheckBox147ItemStateChanged

    private void jCheckBox148ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox148ItemStateChanged
        if (jCheckBox148.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,10);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,10);
        }
    }//GEN-LAST:event_jCheckBox148ItemStateChanged

    private void jCheckBox149ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox149ItemStateChanged
        if (jCheckBox149.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,11);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,11);
        }
    }//GEN-LAST:event_jCheckBox149ItemStateChanged

    private void jCheckBox150ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox150ItemStateChanged
        if (jCheckBox150.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,12);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,12);
        }
    }//GEN-LAST:event_jCheckBox150ItemStateChanged

    private void jCheckBox151ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox151ItemStateChanged
        if (jCheckBox151.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,13);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,13);
        }
    }//GEN-LAST:event_jCheckBox151ItemStateChanged

    private void jCheckBox152ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox152ItemStateChanged
        if (jCheckBox152.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,18);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,18);
        }
    }//GEN-LAST:event_jCheckBox152ItemStateChanged

    private void jCheckBox153ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox153ItemStateChanged
        if (jCheckBox153.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,14);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,14);
        }
    }//GEN-LAST:event_jCheckBox153ItemStateChanged

    private void jCheckBox154ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox154ItemStateChanged
        if (jCheckBox154.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,15);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,15);
        }
    }//GEN-LAST:event_jCheckBox154ItemStateChanged

    private void jCheckBox155ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox155ItemStateChanged
        if (jCheckBox155.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,16);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,16);
        }
    }//GEN-LAST:event_jCheckBox155ItemStateChanged

    private void jCheckBox156ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox156ItemStateChanged
        if (jCheckBox156.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,17);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,17);
        }
    }//GEN-LAST:event_jCheckBox156ItemStateChanged

    private void jCheckBox157ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox157ItemStateChanged
        if (jCheckBox157.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,19);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,19);
        }
    }//GEN-LAST:event_jCheckBox157ItemStateChanged

    private void jCheckBox158ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox158ItemStateChanged
        if (jCheckBox158.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,20);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,20);
        }
    }//GEN-LAST:event_jCheckBox158ItemStateChanged

    private void jCheckBox159ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox159ItemStateChanged
        if (jCheckBox159.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,21);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,21);
        }
    }//GEN-LAST:event_jCheckBox159ItemStateChanged

    private void jCheckBox160ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox160ItemStateChanged
        if (jCheckBox160.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,22);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,22);
        }
    }//GEN-LAST:event_jCheckBox160ItemStateChanged

    private void jCheckBox161ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox161ItemStateChanged
        if (jCheckBox161.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,23);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,23);
        }
    }//GEN-LAST:event_jCheckBox161ItemStateChanged

    private void jCheckBox162ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox162ItemStateChanged
        if (jCheckBox162.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,24);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,24);
        }
    }//GEN-LAST:event_jCheckBox162ItemStateChanged

    private void jCheckBox163ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox163ItemStateChanged
        if (jCheckBox163.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,25);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,25);
        }
    }//GEN-LAST:event_jCheckBox163ItemStateChanged

    private void jCheckBox164ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox164ItemStateChanged
        if (jCheckBox164.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,26);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,26);
        }
    }//GEN-LAST:event_jCheckBox164ItemStateChanged

    private void jCheckBox165ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox165ItemStateChanged
        if (jCheckBox165.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,27);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,27);
        }
    }//GEN-LAST:event_jCheckBox165ItemStateChanged

    private void jCheckBox166ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox166ItemStateChanged
        if (jCheckBox166.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,28);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,28);
        }
    }//GEN-LAST:event_jCheckBox166ItemStateChanged

    private void jCheckBox146ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox146ItemStateChanged
        if (jCheckBox146.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,33);
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,34);
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,35);
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,36);
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,37);
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,38);
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,39);
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,40);
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,41);
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,42);
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,43);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,33);
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,34);
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,35);
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,36);
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,37);
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,38);
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,39);
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,40);
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,41);
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,42);
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,43);
        }
    }//GEN-LAST:event_jCheckBox146ItemStateChanged

    private void botonBuscarMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarMLActionPerformed
        jCheckBox78.setSelected(true);
        jCheckBox79.setSelected(true);
        jCheckBox80.setSelected(true);
        jCheckBox81.setSelected(true);
        jCheckBox82.setSelected(true);
        jCheckBox83.setSelected(true);
        jCheckBox89.setSelected(true);
        jCheckBox90.setSelected(true);
        jCheckBox91.setSelected(true);
        jCheckBox92.setSelected(true);
        jCheckBox93.setSelected(true);
        jCheckBox112.setSelected(true);
        jCheckBox113.setSelected(true);
        jCheckBox114.setSelected(true);
        jCheckBox115.setSelected(true);
        jCheckBox116.setSelected(true);
        jCheckBox117.setSelected(true);
        jCheckBox118.setSelected(true);
        jCheckBox119.setSelected(true);
        jCheckBox120.setSelected(true);
        jCheckBox121.setSelected(true);
        jCheckBox122.setSelected(true);
        jCheckBox123.setSelected(true);
        jCheckBox124.setSelected(true);
        jCheckBox125.setSelected(true);
        jCheckBox126.setSelected(true);
        jCheckBox127.setSelected(true);
        jCheckBox128.setSelected(true);
        jCheckBox129.setSelected(true);
        jCheckBox130.setSelected(true);
        jCheckBox131.setSelected(true);
        jCheckBox132.setSelected(true);
        jCheckBox134.setSelected(true);
        jCheckBox102.setSelected(true);
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "MANIFIESTOS_LLEGADA.fecha_hora_itinerario, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
            nombresColumnas[columnas][1] = "hi";
            nombresColumnas[columnas++][0] = "HORA ITINERARIO";
        preconsulta += "MANIFIESTOS_LLEGADA.hora_real, ";
            nombresColumnas[columnas][1] = "hr";
            nombresColumnas[columnas++][0] = "HORA REAL";
        preconsulta += "MANIFIESTOS_LLEGADA.no_de_vuelo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "NO DE VUELO";
        preconsulta += "COMPANIAS.siglas, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - SIGLAS";
        preconsulta += "COMPANIAS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - NOMBRE";
        preconsulta += "AERONAVES_MANIFIESTOS.matricula, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_MANIFIESTOS.equipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - EQUIPO";
        preconsulta += "COMANDANTE.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - LICENCIA";
        preconsulta += "COMANDANTE.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDATE - NOMBRE(S)";
        preconsulta += "COMANDANTE.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A PATERNO";
        preconsulta += "COMANDANTE.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A MATERNO";
        preconsulta += "COMANDANTE.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - T LICENCIA";
        preconsulta += "PRIMER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - LICENCIA";
        preconsulta += "PRIMER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - NOMBRE(S)";
        preconsulta += "PRIMER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A PATERNO";
        preconsulta += "PRIMER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A MATERNO";
        preconsulta += "PRIMER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - T LICENCIA";    
        preconsulta += "SEGUNDO_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - LICENCIA";
        preconsulta += "SEGUNDO_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - NOMBRE(S)";
        preconsulta += "SEGUNDO_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A PATERNO";
        preconsulta += "SEGUNDO_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A MATERNO";
        preconsulta += "SEGUNDO_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - T LICENCIA";    
        preconsulta += "TERCER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - LICENCIA";
        preconsulta += "TERCER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - NOMBRE(S)";
        preconsulta += "TERCER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A PATERNO";
        preconsulta += "TERCER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A MATERNO";
        preconsulta += "TERCER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - T LICENCIA";    
        preconsulta += "MANIFIESTOS_LLEGADA.sobrecargos, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SOBRECARGOS";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "MANIFIESTOS_LLEGADA.total_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL PASAJEROS";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - PASAJEROS";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_equipaje, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - EQUIPAJE";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_carga, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CARGA";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_correo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CORREO";
        preconsulta += "PDFS_MANIFIESTOS.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM MANIFIESTOS_LLEGADA\n";
        consulta += "LEFT JOIN COMPANIAS\n" +
            "ON COMPANIAS.siglas = MANIFIESTOS_LLEGADA.empresa\n";
        consulta += "LEFT JOIN AERONAVES_MANIFIESTOS\n" +
            "ON AERONAVES_MANIFIESTOS.matricula = MANIFIESTOS_LLEGADA.aeronave\n";
        consulta += "LEFT JOIN COMANDANTE\n" +
            "ON COMANDANTE.no_licencia = MANIFIESTOS_LLEGADA.comandante\n";
        consulta += "LEFT JOIN PRIMER_OFICIAL\n" +
            "ON PRIMER_OFICIAL.no_licencia = MANIFIESTOS_LLEGADA.primer\n";
        consulta += "LEFT JOIN SEGUNDO_LLEGADA\n" +
            "ON SEGUNDO_LLEGADA.fecha_sl = MANIFIESTOS_LLEGADA.fecha_hora_itinerario\n" +
            "LEFT JOIN SEGUNDO_OFICIAL\n" +
            "ON SEGUNDO_LLEGADA.licencia_sl = SEGUNDO_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN TERCERO_LLEGADA\n" +
            "ON TERCERO_LLEGADA.fecha_tl = MANIFIESTOS_LLEGADA.fecha_hora_itinerario\n" +
            "LEFT JOIN TERCER_OFICIAL\n" +
            "ON TERCERO_LLEGADA.licencia_tl = TERCER_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN AEROPUERTOS_MANIFIESTOS\n" +
            "ON AEROPUERTOS_MANIFIESTOS.codigo_iata = MANIFIESTOS_LLEGADA.origen\n";
        consulta += "LEFT JOIN PDFS_LLEGADA\n" +
            "ON PDFS_LLEGADA.fecha = MANIFIESTOS_LLEGADA.fecha_hora_itinerario\n" +
            "LEFT JOIN PDFS_MANIFIESTOS\n" +
            "ON PDFS_LLEGADA.pdf = PDFS_MANIFIESTOS.ruta_pdf\n"; 
        if (criteriosManifiestosLlegada != null) {
            consulta += criteriosManifiestosLlegada;
        }
        consulta += "ORDER BY MANIFIESTOS_LLEGADA.fecha_hora_itinerario";
        ConexionMysql conexionConsultaMS = new ConexionMysql();
        if (conexionConsultaMS.conectarBD("localhost","root",pw,"baseaeropuerto")) {
            if (!conexionConsultaMS.mostrarColumnasTablaMysqlCompuesta(jTableML,consulta,nombresColumnas,columnas,1)) {
                JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton16.setEnabled(true);
                botonBuscarML.setEnabled(false);
                botonCriteriosML.setEnabled(false);
                if (jTableML.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this,"SU BUSQUEDA NO HA GENERADO RESULTADOS","",JOptionPane.INFORMATION_MESSAGE);
                } else {
                    botonEML.setEnabled(true);
                    jPanel12.setEnabled(true);
                    jPanel18.setEnabled(true);
                    jCheckBox78.setEnabled(true);
                    jCheckBox79.setEnabled(true);
                    jCheckBox80.setEnabled(true);
                    jCheckBox81.setEnabled(true);
                    jCheckBox82.setEnabled(true);
                    jCheckBox83.setEnabled(true);
                    jCheckBox89.setEnabled(true);
                    jCheckBox90.setEnabled(true);
                    jCheckBox91.setEnabled(true);
                    jCheckBox92.setEnabled(true);
                    jCheckBox93.setEnabled(true);
                    jCheckBox112.setEnabled(true);
                    jCheckBox113.setEnabled(true);
                    jCheckBox114.setEnabled(true);
                    jCheckBox115.setEnabled(true);
                    jCheckBox116.setEnabled(true);
                    jCheckBox117.setEnabled(true);
                    jCheckBox118.setEnabled(true);
                    jCheckBox119.setEnabled(true);
                    jCheckBox120.setEnabled(true);
                    jCheckBox121.setEnabled(true);
                    jCheckBox122.setEnabled(true);
                    jCheckBox123.setEnabled(true);
                    jCheckBox124.setEnabled(true);
                    jCheckBox125.setEnabled(true);
                    jCheckBox126.setEnabled(true);
                    jCheckBox127.setEnabled(true);
                    jCheckBox128.setEnabled(true);
                    jCheckBox129.setEnabled(true);
                    jCheckBox130.setEnabled(true);
                    jCheckBox131.setEnabled(true);
                    jCheckBox132.setEnabled(true);
                    jCheckBox134.setEnabled(true);
                    jCheckBox102.setEnabled(true);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonBuscarMLActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        jCheckBox78.setSelected(true);
        jCheckBox79.setSelected(true);
        jCheckBox80.setSelected(true);
        jCheckBox81.setSelected(true);
        jCheckBox82.setSelected(true);
        jCheckBox83.setSelected(true);
        jCheckBox89.setSelected(true);
        jCheckBox90.setSelected(true);
        jCheckBox91.setSelected(true);
        jCheckBox92.setSelected(true);
        jCheckBox93.setSelected(true);
        jCheckBox112.setSelected(true);
        jCheckBox113.setSelected(true);
        jCheckBox114.setSelected(true);
        jCheckBox115.setSelected(true);
        jCheckBox116.setSelected(true);
        jCheckBox117.setSelected(true);
        jCheckBox118.setSelected(true);
        jCheckBox119.setSelected(true);
        jCheckBox120.setSelected(true);
        jCheckBox121.setSelected(true);
        jCheckBox122.setSelected(true);
        jCheckBox123.setSelected(true);
        jCheckBox124.setSelected(true);
        jCheckBox125.setSelected(true);
        jCheckBox126.setSelected(true);
        jCheckBox127.setSelected(true);
        jCheckBox128.setSelected(true);
        jCheckBox129.setSelected(true);
        jCheckBox130.setSelected(true);
        jCheckBox131.setSelected(true);
        jCheckBox132.setSelected(true);
        jCheckBox134.setSelected(true);
        jCheckBox102.setSelected(true);
        FuncionesGenerales.limpiarTablaCompletamente(jTableML);
        jPanel12.setEnabled(false);
        jPanel18.setEnabled(false);
        jCheckBox78.setEnabled(false);
        jCheckBox79.setEnabled(false);
        jCheckBox80.setEnabled(false);
        jCheckBox81.setEnabled(false);
        jCheckBox82.setEnabled(false);
        jCheckBox83.setEnabled(false);
        jCheckBox89.setEnabled(false);
        jCheckBox90.setEnabled(false);
        jCheckBox91.setEnabled(false);
        jCheckBox92.setEnabled(false);
        jCheckBox93.setEnabled(false);
        jCheckBox112.setEnabled(false);
        jCheckBox113.setEnabled(false);
        jCheckBox114.setEnabled(false);
        jCheckBox115.setEnabled(false);
        jCheckBox116.setEnabled(false);
        jCheckBox117.setEnabled(false);
        jCheckBox118.setEnabled(false);
        jCheckBox119.setEnabled(false);
        jCheckBox120.setEnabled(false);
        jCheckBox121.setEnabled(false);
        jCheckBox122.setEnabled(false);
        jCheckBox123.setEnabled(false);
        jCheckBox124.setEnabled(false);
        jCheckBox125.setEnabled(false);
        jCheckBox126.setEnabled(false);
        jCheckBox127.setEnabled(false);
        jCheckBox128.setEnabled(false);
        jCheckBox129.setEnabled(false);
        jCheckBox130.setEnabled(false);
        jCheckBox131.setEnabled(false);
        jCheckBox132.setEnabled(false);
        jCheckBox134.setEnabled(false);
        jCheckBox102.setEnabled(false);
        limpiarCriteriosManifiestosLlegada();
        rBFechaMLlegada = 0;
        fecha1MLlegada = null;
        fecha2MLlegada = null;
        fecha3MLlegada = null;
        rBPersonalMLlegada = 0;
        licenciaMLlegada = null;
        rBAeronaveMLlegada = 0;
        aeronaveMLlegada = null;
        rBOrigenMLlegada = 0;
        origenMLlegada = null;
        aerolineaMLlegada = null;
        vueloMLlegada = null;
        primeraVezMLlegada = true;
        botonBuscarML.setEnabled(true);
        botonCriteriosML.setEnabled(true);
        botonEML.setEnabled(false);
        jButton16.setEnabled(false);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jCheckBox78ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox78ItemStateChanged
        if (jCheckBox78.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,1);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,1);
        }
    }//GEN-LAST:event_jCheckBox78ItemStateChanged

    private void jCheckBox79ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox79ItemStateChanged
        if (jCheckBox79.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,2);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,2);
        }
    }//GEN-LAST:event_jCheckBox79ItemStateChanged

    private void jCheckBox80ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox80ItemStateChanged
        if (jCheckBox80.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,3);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,3);
        }
    }//GEN-LAST:event_jCheckBox80ItemStateChanged

    private void jCheckBox81ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox81ItemStateChanged
        if (jCheckBox81.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,4);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,4);
        }
    }//GEN-LAST:event_jCheckBox81ItemStateChanged

    private void jCheckBox82ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox82ItemStateChanged
        if (jCheckBox82.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,5);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,5);
        }
    }//GEN-LAST:event_jCheckBox82ItemStateChanged

    private void jCheckBox83ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox83ItemStateChanged
        if (jCheckBox83.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,6);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,6);
        }
    }//GEN-LAST:event_jCheckBox83ItemStateChanged

    private void jCheckBox89ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox89ItemStateChanged
        if (jCheckBox89.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,30);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,30);
        }
    }//GEN-LAST:event_jCheckBox89ItemStateChanged

    private void jCheckBox90ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox90ItemStateChanged
        if (jCheckBox90.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,31);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,31);
        }
    }//GEN-LAST:event_jCheckBox90ItemStateChanged

    private void jCheckBox91ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox91ItemStateChanged
        if (jCheckBox91.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,32);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,32);
        }
    }//GEN-LAST:event_jCheckBox91ItemStateChanged

    private void jCheckBox92ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox92ItemStateChanged
        if (jCheckBox92.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,7);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,7);
        }
    }//GEN-LAST:event_jCheckBox92ItemStateChanged

    private void jCheckBox93ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox93ItemStateChanged
        if (jCheckBox93.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,8);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,8);
        }
    }//GEN-LAST:event_jCheckBox93ItemStateChanged

    private void jCheckBox132ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox132ItemStateChanged
        if (jCheckBox132.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,29);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,29);
        }
    }//GEN-LAST:event_jCheckBox132ItemStateChanged

    private void jCheckBox134ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox134ItemStateChanged
        if (jCheckBox134.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,33);
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,34);
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,35);
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,36);
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,37);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,33);
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,34);
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,35);
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,36);
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,37);
        }
    }//GEN-LAST:event_jCheckBox134ItemStateChanged

    private void jCheckBox112ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox112ItemStateChanged
        if (jCheckBox112.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,9);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,9);
        }
    }//GEN-LAST:event_jCheckBox112ItemStateChanged

    private void jCheckBox113ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox113ItemStateChanged
        if (jCheckBox113.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,10);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,10);
        }
    }//GEN-LAST:event_jCheckBox113ItemStateChanged

    private void jCheckBox114ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox114ItemStateChanged
        if (jCheckBox114.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,11);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,11);
        }
    }//GEN-LAST:event_jCheckBox114ItemStateChanged

    private void jCheckBox115ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox115ItemStateChanged
        if (jCheckBox115.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,12);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,12);
        }
    }//GEN-LAST:event_jCheckBox115ItemStateChanged

    private void jCheckBox116ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox116ItemStateChanged
        if (jCheckBox116.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,13);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,13);
        }
    }//GEN-LAST:event_jCheckBox116ItemStateChanged

    private void jCheckBox118ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox118ItemStateChanged
        if (jCheckBox118.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,18);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,18);
        }
    }//GEN-LAST:event_jCheckBox118ItemStateChanged

    private void jCheckBox119ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox119ItemStateChanged
        if (jCheckBox119.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,14);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,14);
        }
    }//GEN-LAST:event_jCheckBox119ItemStateChanged

    private void jCheckBox120ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox120ItemStateChanged
        if (jCheckBox120.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,15);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,15);
        }
    }//GEN-LAST:event_jCheckBox120ItemStateChanged

    private void jCheckBox121ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox121ItemStateChanged
        if (jCheckBox121.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,16);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,16);
        }
    }//GEN-LAST:event_jCheckBox121ItemStateChanged

    private void jCheckBox117ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox117ItemStateChanged
        if (jCheckBox117.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,17);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,17);
        }
    }//GEN-LAST:event_jCheckBox117ItemStateChanged

    private void jCheckBox124ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox124ItemStateChanged
        if (jCheckBox124.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,19);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,19);
        }
    }//GEN-LAST:event_jCheckBox124ItemStateChanged

    private void jCheckBox125ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox125ItemStateChanged
        if (jCheckBox125.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,20);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,20);
        }
    }//GEN-LAST:event_jCheckBox125ItemStateChanged

    private void jCheckBox126ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox126ItemStateChanged
        if (jCheckBox126.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,21);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,21);
        }
    }//GEN-LAST:event_jCheckBox126ItemStateChanged

    private void jCheckBox122ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox122ItemStateChanged
        if (jCheckBox122.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,22);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,22);
        }
    }//GEN-LAST:event_jCheckBox122ItemStateChanged

    private void jCheckBox123ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox123ItemStateChanged
        if (jCheckBox123.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,23);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,23);
        }
    }//GEN-LAST:event_jCheckBox123ItemStateChanged

    private void jCheckBox129ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox129ItemStateChanged
        if (jCheckBox129.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,24);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,24);
        }
    }//GEN-LAST:event_jCheckBox129ItemStateChanged

    private void jCheckBox130ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox130ItemStateChanged
        if (jCheckBox130.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,25);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,25);
        }
    }//GEN-LAST:event_jCheckBox130ItemStateChanged

    private void jCheckBox131ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox131ItemStateChanged
        if (jCheckBox131.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,26);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,26);
        }
    }//GEN-LAST:event_jCheckBox131ItemStateChanged

    private void jCheckBox127ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox127ItemStateChanged
        if (jCheckBox127.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,27);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,27);
        }
    }//GEN-LAST:event_jCheckBox127ItemStateChanged

    private void jCheckBox128ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox128ItemStateChanged
        if (jCheckBox128.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,28);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,28);
        }
    }//GEN-LAST:event_jCheckBox128ItemStateChanged

    private void jTablePlanesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePlanesMouseClicked
        if(!evt.isMetaDown() && jTablePlanes.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTablePlanes,0);
            jTablePlanes.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTablePlanesMouseClicked

    private void jTablePlanesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePlanesMousePressed
        if(!evt.isMetaDown()){
            int fila = jTablePlanes.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTablePlanes,fila);
            jTablePlanes.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
            if (FuncionesGenerales.celdaPDFSeleccionada(jTablePlanes, "PDF - NOMBRE")) {
                int columna = jTablePlanes.getSelectedColumn();
                String mensaje = FuncionesGenerales.abrirPDFSeleccionada(jTablePlanes,"PDF - RUTA", fila, columna);
                if (mensaje.contains("ERROR")) {
                    JOptionPane.showMessageDialog(this,"NO SE PUEDE CARGAR EL DOCUMENTO","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jTablePlanesMousePressed

    private void jTableCierresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCierresMouseClicked
        if(!evt.isMetaDown() && jTableCierres.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableCierres,0);
            jTableCierres.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableCierresMouseClicked

    private void jTableCierresMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCierresMousePressed
        if(!evt.isMetaDown()){
            int fila = jTableCierres.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableCierres,fila);
            jTableCierres.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
            if (FuncionesGenerales.celdaPDFSeleccionada(jTableCierres, "PDF - NOMBRE")) {
                int columna = jTableCierres.getSelectedColumn();
                String mensaje = FuncionesGenerales.abrirPDFSeleccionada(jTableCierres,"PDF - RUTA", fila, columna);
                if (mensaje.contains("ERROR")) {
                    JOptionPane.showMessageDialog(this,"NO SE PUEDE CARGAR EL DOCUMENTO","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jTableCierresMousePressed

    private void jTableMSMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMSMousePressed
        if(!evt.isMetaDown()){
            int fila = jTableMS.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableMS,fila);
            jTableMS.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
            if (FuncionesGenerales.celdaPDFSeleccionada(jTableMS, "PDF - NOMBRE")) {
                int columna = jTableMS.getSelectedColumn();
                String mensaje = FuncionesGenerales.abrirPDFSeleccionada(jTableMS,"PDF - RUTA", fila, columna);
                if (mensaje.contains("ERROR")) {
                    JOptionPane.showMessageDialog(this,"NO SE PUEDE CARGAR EL DOCUMENTO","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jTableMSMousePressed

    private void jTableMLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMLMousePressed
        if(!evt.isMetaDown()){
            int fila = jTableML.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableML,fila);
            jTableML.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
            if (FuncionesGenerales.celdaPDFSeleccionada(jTableML, "PDF - NOMBRE")) {
                int columna = jTableML.getSelectedColumn();
                String mensaje = FuncionesGenerales.abrirPDFSeleccionada(jTableML,"PDF - RUTA", fila, columna);
                if (mensaje.contains("ERROR")) {
                    JOptionPane.showMessageDialog(this,"NO SE PUEDE CARGAR EL DOCUMENTO","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jTableMLMousePressed

    private void jTableMSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMSMouseClicked
        if(!evt.isMetaDown() && jTableMS.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableMS,0);
            jTableMS.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableMSMouseClicked

    private void jTableMLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMLMouseClicked
        if(!evt.isMetaDown() && jTableML.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableML,0);
            jTableML.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableMLMouseClicked

    private void jCheckBox100ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox100ItemStateChanged
        if (jCheckBox100.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTablePlanes,24);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTablePlanes,24);
        }
    }//GEN-LAST:event_jCheckBox100ItemStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        volverAlInicio();
    }//GEN-LAST:event_formWindowClosing

    private void jCheckBox101ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox101ItemStateChanged
        if (jCheckBox101.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableCierres,24);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableCierres,24);
        }
    }//GEN-LAST:event_jCheckBox101ItemStateChanged

    private void jCheckBox167ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox167ItemStateChanged
        if (jCheckBox167.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableMS,45);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableMS,45);
        }
    }//GEN-LAST:event_jCheckBox167ItemStateChanged

    private void jCheckBox102ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox102ItemStateChanged
        if (jCheckBox102.isSelected()) {
            FuncionesGenerales.mostrarColumnaEliminada(jTableML,39);
        } else {
            FuncionesGenerales.eliminarColumnaTemporal(jTableML,39);
        }
    }//GEN-LAST:event_jCheckBox102ItemStateChanged

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        volverAlInicio();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void botonEPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEPlanesActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("EXPORTAR LA CONSULTA A DOCUMENTO DE EXCEL");
        fc.setMultiSelectionEnabled(false);
        fc.showSaveDialog(this);
        File sinExtension = fc.getSelectedFile();
        ExportarAExcel exel = new ExportarAExcel();
        File conExtension = new File(sinExtension + ".xls");
        if (exel.fillData(jTablePlanes,conExtension)) {
            JOptionPane.showMessageDialog(this,"SE HA EXPORTADO LA INFORMACIÓN DE LA TABLA EXITOSAMENTE","",JOptionPane.INFORMATION_MESSAGE,bienExcel);
        } else {
            JOptionPane.showMessageDialog(this,"NO SE PUDO EXPORTAR LA INFORMACIÓN DE LA TABLA","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonEPlanesActionPerformed

    private void botonECierresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonECierresActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("EXPORTAR LA CONSULTA A DOCUMENTO DE EXCEL");
        fc.setMultiSelectionEnabled(false);
        fc.showSaveDialog(this);
        File sinExtension = fc.getSelectedFile();
        ExportarAExcel exel = new ExportarAExcel();
        File conExtension = new File(sinExtension + ".xls");
        if (exel.fillData(jTableCierres,conExtension)) {
            JOptionPane.showMessageDialog(this,"SE HA EXPORTADO LA INFORMACIÓN DE LA TABLA EXITOSAMENTE","",JOptionPane.INFORMATION_MESSAGE,bienExcel);
        } else {
            JOptionPane.showMessageDialog(this,"NO SE PUDO EXPORTAR LA INFORMACIÓN DE LA TABLA","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonECierresActionPerformed

    private void botonEMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEMSActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("EXPORTAR LA CONSULTA A DOCUMENTO DE EXCEL");
        fc.setMultiSelectionEnabled(false);
        fc.showSaveDialog(this);
        File sinExtension = fc.getSelectedFile();
        ExportarAExcel exel = new ExportarAExcel();
        File conExtension = new File(sinExtension + ".xls");
        if (exel.fillData(jTableMS,conExtension)) {
            JOptionPane.showMessageDialog(this,"SE HA EXPORTADO LA INFORMACIÓN DE LA TABLA EXITOSAMENTE","",JOptionPane.INFORMATION_MESSAGE,bienExcel);
        } else {
            JOptionPane.showMessageDialog(this,"NO SE PUDO EXPORTAR LA INFORMACIÓN DE LA TABLA","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonEMSActionPerformed

    private void botonEMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEMLActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("EXPORTAR LA CONSULTA A DOCUMENTO DE EXCEL");
        fc.setMultiSelectionEnabled(false);
        fc.showSaveDialog(this);
        File sinExtension = fc.getSelectedFile();
        ExportarAExcel exel = new ExportarAExcel();
        File conExtension = new File(sinExtension + ".xls");
        if (exel.fillData(jTableML,conExtension)) {
            JOptionPane.showMessageDialog(this,"SE HA EXPORTADO LA INFORMACIÓN DE LA TABLA EXITOSAMENTE","",JOptionPane.INFORMATION_MESSAGE,bienExcel);
        } else {
            JOptionPane.showMessageDialog(this,"NO SE PUDO EXPORTAR LA INFORMACIÓN DE LA TABLA","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonEMLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BAJFrameVentanaConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BAJFrameVentanaConsultas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscarCierres;
    private javax.swing.JButton botonBuscarML;
    private javax.swing.JButton botonBuscarMS;
    private javax.swing.JButton botonBuscarPlanes;
    private javax.swing.JButton botonCriteriosCierres;
    private javax.swing.JButton botonCriteriosML;
    private javax.swing.JButton botonCriteriosMS;
    private javax.swing.JButton botonCriteriosPlanes;
    private javax.swing.JButton botonECierres;
    private javax.swing.JButton botonEML;
    private javax.swing.JButton botonEMS;
    private javax.swing.JButton botonEPlanes;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton16;
    private javax.swing.JCheckBox jCheckBox100;
    private javax.swing.JCheckBox jCheckBox101;
    private javax.swing.JCheckBox jCheckBox102;
    private javax.swing.JCheckBox jCheckBox112;
    private javax.swing.JCheckBox jCheckBox113;
    private javax.swing.JCheckBox jCheckBox114;
    private javax.swing.JCheckBox jCheckBox115;
    private javax.swing.JCheckBox jCheckBox116;
    private javax.swing.JCheckBox jCheckBox117;
    private javax.swing.JCheckBox jCheckBox118;
    private javax.swing.JCheckBox jCheckBox119;
    private javax.swing.JCheckBox jCheckBox120;
    private javax.swing.JCheckBox jCheckBox121;
    private javax.swing.JCheckBox jCheckBox122;
    private javax.swing.JCheckBox jCheckBox123;
    private javax.swing.JCheckBox jCheckBox124;
    private javax.swing.JCheckBox jCheckBox125;
    private javax.swing.JCheckBox jCheckBox126;
    private javax.swing.JCheckBox jCheckBox127;
    private javax.swing.JCheckBox jCheckBox128;
    private javax.swing.JCheckBox jCheckBox129;
    private javax.swing.JCheckBox jCheckBox130;
    private javax.swing.JCheckBox jCheckBox131;
    private javax.swing.JCheckBox jCheckBox132;
    private javax.swing.JCheckBox jCheckBox133;
    private javax.swing.JCheckBox jCheckBox134;
    private javax.swing.JCheckBox jCheckBox135;
    private javax.swing.JCheckBox jCheckBox136;
    private javax.swing.JCheckBox jCheckBox137;
    private javax.swing.JCheckBox jCheckBox138;
    private javax.swing.JCheckBox jCheckBox139;
    private javax.swing.JCheckBox jCheckBox140;
    private javax.swing.JCheckBox jCheckBox141;
    private javax.swing.JCheckBox jCheckBox142;
    private javax.swing.JCheckBox jCheckBox143;
    private javax.swing.JCheckBox jCheckBox144;
    private javax.swing.JCheckBox jCheckBox145;
    private javax.swing.JCheckBox jCheckBox146;
    private javax.swing.JCheckBox jCheckBox147;
    private javax.swing.JCheckBox jCheckBox148;
    private javax.swing.JCheckBox jCheckBox149;
    private javax.swing.JCheckBox jCheckBox150;
    private javax.swing.JCheckBox jCheckBox151;
    private javax.swing.JCheckBox jCheckBox152;
    private javax.swing.JCheckBox jCheckBox153;
    private javax.swing.JCheckBox jCheckBox154;
    private javax.swing.JCheckBox jCheckBox155;
    private javax.swing.JCheckBox jCheckBox156;
    private javax.swing.JCheckBox jCheckBox157;
    private javax.swing.JCheckBox jCheckBox158;
    private javax.swing.JCheckBox jCheckBox159;
    private javax.swing.JCheckBox jCheckBox160;
    private javax.swing.JCheckBox jCheckBox161;
    private javax.swing.JCheckBox jCheckBox162;
    private javax.swing.JCheckBox jCheckBox163;
    private javax.swing.JCheckBox jCheckBox164;
    private javax.swing.JCheckBox jCheckBox165;
    private javax.swing.JCheckBox jCheckBox166;
    private javax.swing.JCheckBox jCheckBox167;
    private javax.swing.JCheckBox jCheckBox45;
    private javax.swing.JCheckBox jCheckBox46;
    private javax.swing.JCheckBox jCheckBox47;
    private javax.swing.JCheckBox jCheckBox48;
    private javax.swing.JCheckBox jCheckBox49;
    private javax.swing.JCheckBox jCheckBox50;
    private javax.swing.JCheckBox jCheckBox51;
    private javax.swing.JCheckBox jCheckBox52;
    private javax.swing.JCheckBox jCheckBox53;
    private javax.swing.JCheckBox jCheckBox54;
    private javax.swing.JCheckBox jCheckBox55;
    private javax.swing.JCheckBox jCheckBox56;
    private javax.swing.JCheckBox jCheckBox57;
    private javax.swing.JCheckBox jCheckBox58;
    private javax.swing.JCheckBox jCheckBox59;
    private javax.swing.JCheckBox jCheckBox60;
    private javax.swing.JCheckBox jCheckBox61;
    private javax.swing.JCheckBox jCheckBox62;
    private javax.swing.JCheckBox jCheckBox63;
    private javax.swing.JCheckBox jCheckBox64;
    private javax.swing.JCheckBox jCheckBox65;
    private javax.swing.JCheckBox jCheckBox66;
    private javax.swing.JCheckBox jCheckBox67;
    private javax.swing.JCheckBox jCheckBox68;
    private javax.swing.JCheckBox jCheckBox69;
    private javax.swing.JCheckBox jCheckBox70;
    private javax.swing.JCheckBox jCheckBox71;
    private javax.swing.JCheckBox jCheckBox72;
    private javax.swing.JCheckBox jCheckBox73;
    private javax.swing.JCheckBox jCheckBox74;
    private javax.swing.JCheckBox jCheckBox75;
    private javax.swing.JCheckBox jCheckBox76;
    private javax.swing.JCheckBox jCheckBox77;
    private javax.swing.JCheckBox jCheckBox78;
    private javax.swing.JCheckBox jCheckBox79;
    private javax.swing.JCheckBox jCheckBox80;
    private javax.swing.JCheckBox jCheckBox81;
    private javax.swing.JCheckBox jCheckBox82;
    private javax.swing.JCheckBox jCheckBox83;
    private javax.swing.JCheckBox jCheckBox84;
    private javax.swing.JCheckBox jCheckBox85;
    private javax.swing.JCheckBox jCheckBox86;
    private javax.swing.JCheckBox jCheckBox87;
    private javax.swing.JCheckBox jCheckBox88;
    private javax.swing.JCheckBox jCheckBox89;
    private javax.swing.JCheckBox jCheckBox90;
    private javax.swing.JCheckBox jCheckBox91;
    private javax.swing.JCheckBox jCheckBox92;
    private javax.swing.JCheckBox jCheckBox93;
    private javax.swing.JCheckBox jCheckBox94;
    private javax.swing.JCheckBox jCheckBox95;
    private javax.swing.JCheckBox jCheckBox96;
    private javax.swing.JCheckBox jCheckBox97;
    private javax.swing.JCheckBox jCheckBox98;
    private javax.swing.JCheckBox jCheckBox99;
    public static javax.swing.JLabel jLabel21;
    public static javax.swing.JLabel jLabel22;
    public static javax.swing.JLabel jLabel23;
    public static javax.swing.JLabel jLabel24;
    public static javax.swing.JLabel jLabel25;
    public static javax.swing.JLabel jLabel26;
    public static javax.swing.JLabel jLabel27;
    public static javax.swing.JLabel jLabel28;
    public static javax.swing.JLabel jLabel29;
    public static javax.swing.JLabel jLabel30;
    public static javax.swing.JLabel jLabel31;
    public static javax.swing.JLabel jLabel32;
    public static javax.swing.JLabel jLabel33;
    public static javax.swing.JLabel jLabel34;
    public static javax.swing.JLabel jLabel35;
    public static javax.swing.JLabel jLabel36;
    public static javax.swing.JLabel jLabel37;
    public static javax.swing.JLabel jLabel38;
    public static javax.swing.JLabel jLabel39;
    public static javax.swing.JLabel jLabel40;
    public static javax.swing.JLabel jLabel41;
    public static javax.swing.JLabel jLabel42;
    public static javax.swing.JLabel jLabel43;
    public static javax.swing.JLabel jLabel44;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableCierres;
    private javax.swing.JTable jTableML;
    private javax.swing.JTable jTableMS;
    private javax.swing.JTable jTablePlanes;
    // End of variables declaration//GEN-END:variables
    
    private String pw;
    
    static String criteriosPlanes = null;
    static String criteriosCierres = null;
    static String criteriosManifiestosSalida = null;
    static String criteriosManifiestosLlegada = null;
    
    Icon bienExcel = new ImageIcon(getClass().getResource("/Necesarios/iconoExcel.png"));
    
    static int rBFechaMSalida = 0;
    static String fecha1MSalida = null;
    static String fecha2MSalida = null;
    static String fecha3MSalida = null;
    static int rBPersonalMSalida = 0;
    static String licenciaMSalida = null;
    static int rBAeronaveMSalida = 0;
    static String aeronaveMSalida = null;
    static int rBDestinoMSalida = 0;
    static String destinoMSalida = null;
    static String aerolineaMSalida = null;
    static String vueloMSalida = null;
    static boolean primeraVezMSalida = true;
    
    private void limpiarCriteriosManifiestosSalida () {
        jLabel31.setText("FECHA");
        jLabel31.setEnabled(false);
        jLabel32.setText("PERSONAL DE VUELO");
        jLabel32.setEnabled(false);
        jLabel33.setText("COMPAÑÍA");
        jLabel33.setEnabled(false);
        jLabel34.setText("AERONAVE");
        jLabel34.setEnabled(false);
        jLabel35.setText("DESTINO");
        jLabel35.setEnabled(false);
        jLabel36.setText("NO. DE VUELO");
        jLabel36.setEnabled(false);
        criteriosManifiestosSalida = null;
    }
    
    static int rBFechaMLlegada = 0;
    static String fecha1MLlegada = null;
    static String fecha2MLlegada = null;
    static String fecha3MLlegada = null;
    static int rBPersonalMLlegada = 0;
    static String licenciaMLlegada = null;
    static int rBAeronaveMLlegada = 0;
    static String aeronaveMLlegada = null;
    static int rBOrigenMLlegada = 0;
    static String origenMLlegada = null;
    static String aerolineaMLlegada = null;
    static String vueloMLlegada = null;
    static boolean primeraVezMLlegada = true;
    
    private void limpiarCriteriosManifiestosLlegada () {
        jLabel37.setText("FECHA");
        jLabel37.setEnabled(false);
        jLabel38.setText("PERSONAL DE VUELO");
        jLabel38.setEnabled(false);
        jLabel39.setText("COMPAÑÍA");
        jLabel39.setEnabled(false);
        jLabel40.setText("AERONAVE");
        jLabel40.setEnabled(false);
        jLabel41.setText("ORIGEN");
        jLabel41.setEnabled(false);
        jLabel42.setText("NO. DE VUELO");
        jLabel42.setEnabled(false);
        criteriosManifiestosLlegada = null;
    }
    
    static int rBFechaPlanes = 0;
    static String fecha1Planes = null;
    static String fecha2Planes = null;
    static String fecha3Planes = null;
    static int cBPasajeros1Planes = 0;
    static String pasajero1Planes = null;
    static int cBPasajeros2Planes = 0;
    static String pasajero2Planes = null;
    static int cBPasajeros3Planes = 0;
    static String pasajero3Planes = null;
    static int rBPersonalPlanes = 0;
    
    static int cBPersonal1Planes = 0;
    static String personal1Planes = null;
    static int cBPersonal2Planes = 0;
    static String personal2Planes = null;
    static int cBPersonal3Planes = 0;
    static String personal3Planes = null;
    static int rBPersonalInfoPlanes = 0;
    
    static String licenciaPlanes = null;
    static int rBAeronavePlanes = 0;
    static String aeronavePlanes = null;
    static int rBAeropuertoPlanes = 0;
    static String aeropuertoPlanes = null;
    static boolean primeraVezPlanes = true;
    
    private void limpiarCriteriosPlanes () {
        jLabel21.setText("FECHA");
        jLabel21.setEnabled(false);
        jLabel22.setText("PERSONAL DE VUELO");
        jLabel22.setEnabled(false);
        jLabel23.setText("PASAJERO");
        jLabel23.setEnabled(false);
        jLabel24.setText("AERONAVE");
        jLabel24.setEnabled(false);
        jLabel25.setText("AEROPUERTO/AERÓDROMO DE LLEGADA");
        jLabel25.setEnabled(false);
        jLabel43.setText("PERSONAL DE VUELO (NOMBRE)");
        jLabel43.setEnabled(false);
        criteriosPlanes = null;
    }
    
    static int rBFechaCierres = 0;
    static String fecha1Cierres = null;
    static String fecha2Cierres = null;
    static String fecha3Cierres = null;
    static int cBPasajeros1Cierres = 0;
    static String pasajero1Cierres = null;
    static int cBPasajeros2Cierres = 0;
    static String pasajero2Cierres = null;
    static int cBPasajeros3Cierres = 0;
    static String pasajero3Cierres = null;
    static int rBPersonalCierres = 0;
    
    static int cBPersonal1Cierres = 0;
    static String personal1Cierres = null;
    static int cBPersonal2Cierres = 0;
    static String personal2Cierres = null;
    static int cBPersonal3Cierres = 0;
    static String personal3Cierres = null;
    static int rBPersonalInfoCierres = 0;
    
    static String licenciaCierres = null;
    static int rBAeronaveCierres = 0;
    static String aeronaveCierres = null;
    static int rBAeropuertoCierres = 0;
    static String aeropuertoCierres = null;
    static boolean primeraVezCierres = true;
    
    private void limpiarCriteriosCierres () {
        jLabel26.setText("FECHA");
        jLabel26.setEnabled(false);
        jLabel27.setText("PERSONAL DE VUELO");
        jLabel27.setEnabled(false);
        jLabel28.setText("PASAJERO");
        jLabel28.setEnabled(false);
        jLabel29.setText("AERONAVE");
        jLabel29.setEnabled(false);
        jLabel30.setText("AEROPUERTO/AERÓDROMO DE SALIDA");
        jLabel30.setEnabled(false);
        jLabel44.setText("PERSONAL DE VUELO (NOMBRE)");
        jLabel44.setEnabled(false);
        criteriosCierres = null;
    }
    
    public void volverAlInicio() {
        this.setVisible(false);
        try {
            Thread.sleep (500);
        } catch (Exception e) {
        }
        AAJFrameVentanaInicio ventanaInicio = new AAJFrameVentanaInicio();
        ventanaInicio.setVisible(true);
        this.dispose();
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
        getImage(ClassLoader.getSystemResource("Necesarios/iconoP.png"));
        return retValue;
    }
    
    public void setP(String ll) {
        pw = ll;
    }
    
}
