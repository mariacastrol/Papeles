/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.ConexionMysql;
import Clases.FormatoFilasTabla;
import Clases.FuncionesGenerales;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ADOLFO
 */
public class UJFrameVentanaModificaciones extends javax.swing.JFrame {

    /**
     * Creates new form JFrameVentanaConsultas
     */
    public UJFrameVentanaModificaciones() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePlanes = new javax.swing.JTable();
        botonBuscarPlanes = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        botonCriteriosPlanes = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCierres = new javax.swing.JTable();
        botonBuscarCierres = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        botonCriteriosCierres = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableMS = new javax.swing.JTable();
        botonBuscarMS = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        botonCriteriosMS = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableML = new javax.swing.JTable();
        botonBuscarML = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        botonCriteriosML = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem3.setText("MODIFICAR REGISTRO");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MODIFICACIONES");
        setIconImage(getIconImage());
        setIconImages(getIconImages());
        setMinimumSize(new java.awt.Dimension(1000, 650));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(null);

        jTablePlanes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTablePlanes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTablePlanes.setComponentPopupMenu(jPopupMenu1);
        jTablePlanes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePlanesMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTablePlanesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePlanes);

        jPanel5.add(jScrollPane1);
        jScrollPane1.setBounds(12, 126, 1043, 380);

        botonBuscarPlanes.setText("BUSCAR");
        botonBuscarPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarPlanesActionPerformed(evt);
            }
        });
        jPanel5.add(botonBuscarPlanes);
        botonBuscarPlanes.setBounds(982, 524, 73, 23);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        botonCriteriosPlanes.setText("ESTABLECER");
        botonCriteriosPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriteriosPlanesActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel21.setText("FECHA");
        jLabel21.setEnabled(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel22.setText("PERSONAL DE VUELO");
        jLabel22.setEnabled(false);

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel43.setText("PERSONAL DE VUELO (NOMBRE)");
        jLabel43.setEnabled(false);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel23.setText("PASAJERO");
        jLabel23.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel24.setText("AERONAVE");
        jLabel24.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel25.setText("AEROPUERTO/AERÓDROMO DE LLEGADA");
        jLabel25.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCriteriosPlanes)
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(120, 120, 120))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonCriteriosPlanes)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(jLabel24)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel43)
                    .addComponent(jLabel23))
                .addGap(11, 11, 11))
        );

        jPanel5.add(jPanel13);
        jPanel13.setBounds(12, 17, 1043, 91);

        jButton12.setText("LIMPIAR");
        jButton12.setEnabled(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton12);
        jButton12.setBounds(891, 524, 73, 23);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("PLANES", jPanel1);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(null);

        jTableCierres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableCierres.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableCierres.setComponentPopupMenu(jPopupMenu1);
        jTableCierres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCierresMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableCierresMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCierres);

        jPanel6.add(jScrollPane2);
        jScrollPane2.setBounds(12, 126, 1043, 380);

        botonBuscarCierres.setText("BUSCAR");
        botonBuscarCierres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarCierresActionPerformed(evt);
            }
        });
        jPanel6.add(botonBuscarCierres);
        botonBuscarCierres.setBounds(982, 524, 73, 23);

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        botonCriteriosCierres.setText("ESTABLECER");
        botonCriteriosCierres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriteriosCierresActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel26.setText("FECHA");
        jLabel26.setEnabled(false);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel27.setText("PERSONAL DE VUELO");
        jLabel27.setEnabled(false);

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel44.setText("PERSONAL DE VUELO (NOMBRE)");
        jLabel44.setEnabled(false);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel28.setText("PASAJERO");
        jLabel28.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel29.setText("AERONAVE");
        jLabel29.setEnabled(false);

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel30.setText("AEROPUERTO/AERÓDROMO DE SALIDA");
        jLabel30.setEnabled(false);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCriteriosCierres)
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(120, 120, 120))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonCriteriosCierres)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel26)
                        .addComponent(jLabel29)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGap(11, 11, 11))
        );

        jPanel6.add(jPanel15);
        jPanel15.setBounds(12, 17, 1043, 91);

        jButton11.setText("LIMPIAR");
        jButton11.setEnabled(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton11);
        jButton11.setBounds(891, 524, 73, 23);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("CIERRES DE PLANES", jPanel2);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setLayout(null);

        jTableMS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableMS.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableMS.setComponentPopupMenu(jPopupMenu1);
        jTableMS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMSMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableMSMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTableMS);

        jPanel7.add(jScrollPane3);
        jScrollPane3.setBounds(12, 126, 1043, 380);

        botonBuscarMS.setText("BUSCAR");
        botonBuscarMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarMSActionPerformed(evt);
            }
        });
        jPanel7.add(botonBuscarMS);
        botonBuscarMS.setBounds(982, 524, 73, 23);

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        botonCriteriosMS.setText("ESTABLECER");
        botonCriteriosMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriteriosMSActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel31.setText("FECHA");
        jLabel31.setEnabled(false);

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel32.setText("PERSONAL DE VUELO");
        jLabel32.setEnabled(false);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel33.setText("COMPAÑÍA");
        jLabel33.setEnabled(false);

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel34.setText("AERONAVE");
        jLabel34.setEnabled(false);

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel35.setText("DESTINO");
        jLabel35.setEnabled(false);

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel36.setText("NO. DE VUELO");
        jLabel36.setEnabled(false);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCriteriosMS)
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(120, 120, 120))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonCriteriosMS)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel31)
                        .addComponent(jLabel34)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel35))
                .addGap(11, 11, 11))
        );

        jPanel7.add(jPanel16);
        jPanel16.setBounds(12, 17, 1043, 91);

        jButton14.setText("LIMPIAR");
        jButton14.setEnabled(false);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton14);
        jButton14.setBounds(891, 524, 73, 23);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("MANIFIESTOS DE SALIDA", jPanel3);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setLayout(null);

        jTableML.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableML.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableML.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMLMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableMLMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTableML);

        jPanel8.add(jScrollPane4);
        jScrollPane4.setBounds(12, 126, 1043, 380);

        botonBuscarML.setText("BUSCAR");
        botonBuscarML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarMLActionPerformed(evt);
            }
        });
        jPanel8.add(botonBuscarML);
        botonBuscarML.setBounds(982, 524, 73, 23);

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        botonCriteriosML.setText("ESTABLECER");
        botonCriteriosML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriteriosMLActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel37.setText("FECHA");
        jLabel37.setEnabled(false);

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel38.setText("PERSONAL DE VUELO");
        jLabel38.setEnabled(false);

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel39.setText("COMPAÑÍA");
        jLabel39.setEnabled(false);

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel40.setText("AERONAVE");
        jLabel40.setEnabled(false);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel41.setText("ORIGEN");
        jLabel41.setEnabled(false);

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel42.setText("NO. DE VUELO");
        jLabel42.setEnabled(false);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCriteriosML)
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(120, 120, 120))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonCriteriosML)
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel37)
                        .addComponent(jLabel40)
                        .addComponent(jLabel42)))
                .addGap(10, 10, 10)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(jLabel41))
                .addContainerGap())
        );

        jPanel8.add(jPanel17);
        jPanel17.setBounds(12, 17, 1043, 91);

        jButton16.setText("LIMPIAR");
        jButton16.setEnabled(false);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton16);
        jButton16.setBounds(891, 524, 73, 23);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("MANIFIESTOS DE LLEGADA", jPanel4);

        jMenu1.setText("ARCHIVO");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("VOLVER A LA VENTANA DE INICIO");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("SALIR DE LA APLICACIÓN");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1092, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonBuscarPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarPlanesActionPerformed
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "APERTURAS_DE_VUELO.fecha_hora, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
        preconsulta += "PILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - LICENCIA";
        preconsulta += "PILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - NOMBRE(S)";
        preconsulta += "PILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A PATERNO";
        preconsulta += "PILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A MATERNO";
        preconsulta += "PILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - T LICENCIA";
        preconsulta += "COPILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - LICENCIA";
        preconsulta += "COPILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - NOMBRE(S)";
        preconsulta += "COPILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A PATERNO";
        preconsulta += "COPILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A MATERNO";
        preconsulta += "COPILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - T LICENCIA";
        preconsulta += "AEROPUERTOS_PLANES.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_PLANES.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "AERONAVES_PLANES.identificacion_aeronave, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_PLANES.tipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - TIPO";
        preconsulta += "APERTURAS_DE_VUELO.otros_datos, ";
            nombresColumnas[columnas][1] = "variosRenglones";
            nombresColumnas[columnas++][0] = "OTROS DATOS";
        preconsulta += "APERTURAS_DE_VUELO.no_personas_a_bordo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PERSONAS A BORDO";
        preconsulta += "PASAJEROS_APERTURA.id_pasajero, ";
            nombresColumnas[columnas][1] = "pasajeroID";
            nombresColumnas[columnas++][0] = "PASAJERO - ID";
        preconsulta += "PASAJEROS_APERTURA.nombre, ";
            nombresColumnas[columnas][1] = "pasajeroN";
            nombresColumnas[columnas++][0] = "PASAJERO - NOMBRE(S)";
        preconsulta += "PASAJEROS_APERTURA.apellido_paterno, ";
            nombresColumnas[columnas][1] = "pasajeroAP";
            nombresColumnas[columnas++][0] = "PASAJERO - A PATERNO";
        preconsulta += "PASAJEROS_APERTURA.apellido_materno, ";
            nombresColumnas[columnas][1] = "pasajeroAM";
            nombresColumnas[columnas++][0] = "PASAJERO - A MATERNO";
        preconsulta += "PASAJEROS_APERTURA.nacionalidad, ";
            nombresColumnas[columnas][1] = "pasajeroNa";
            nombresColumnas[columnas++][0] = "PASAJERO - NACIONALIDAD";
        preconsulta += "PDFS_APERTURA.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_APERTURA.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM APERTURAS_DE_VUELO\n";
        consulta += "LEFT JOIN PILOTOS_PLANES\n" +
            "ON PILOTOS_PLANES.no_licencia = APERTURAS_DE_VUELO.piloto\n";           
        consulta += "LEFT JOIN COPILOTOS_APERTURA\n" +
            "ON COPILOTOS_APERTURA.fecha = APERTURAS_DE_VUELO.fecha_hora\n" +
            "LEFT JOIN COPILOTOS_PLANES\n" +
            "ON COPILOTOS_APERTURA.copiloto = COPILOTOS_PLANES.no_licencia\n";           
        consulta += "LEFT JOIN AEROPUERTOS_PLANES\n" +
            "ON AEROPUERTOS_PLANES.codigo_oaci = APERTURAS_DE_VUELO.aeropuerto_destino\n";           
        consulta += "LEFT JOIN AERONAVES_PLANES\n" +
            "ON AERONAVES_PLANES.identificacion_aeronave = APERTURAS_DE_VUELO.aeronave\n";           
        consulta += "LEFT JOIN PASAJEROS_APERTURA\n" +
            "ON PASAJEROS_APERTURA.fecha = APERTURAS_DE_VUELO.fecha_hora\n";
        consulta += "LEFT JOIN RELACION_PDF_APERTURAS\n" +
            "ON RELACION_PDF_APERTURAS.fecha = APERTURAS_DE_VUELO.fecha_hora\n" +
            "LEFT JOIN PDFS_APERTURA\n" +
            "ON RELACION_PDF_APERTURAS.pdf = PDFS_APERTURA.ruta_pdf\n"; 
        if (criteriosPlanes != null) {
            consulta += criteriosPlanes;
        }
        consulta += "ORDER BY APERTURAS_DE_VUELO.fecha_hora,PASAJEROS_APERTURA.id_pasajero";
        System.out.println(consulta);
        ConexionMysql conexionConsultaPlan = new ConexionMysql();
        if (conexionConsultaPlan.conectarBD("localhost","root",pw,"baseaeropuerto")) {
            if (!conexionConsultaPlan.mostrarColumnasTablaMysqlCompuesta(jTablePlanes,consulta,nombresColumnas,columnas,2)) {
                JOptionPane.showMessageDialog(this,conexionConsultaPlan.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton12.setEnabled(true);
                if (jTablePlanes.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this,"SU BUSQUEDA NO HA GENERADO RESULTADOS","",JOptionPane.INFORMATION_MESSAGE);
                }
                botonCriteriosPlanes.setEnabled(false);
                botonBuscarPlanes.setEnabled(false);
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaPlan.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonBuscarPlanesActionPerformed

    private void botonCriteriosPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriteriosPlanesActionPerformed
        limpiarCriteriosPlanes();
        VBBJDialogBusquedaPlanes cPlanes = new VBBJDialogBusquedaPlanes(this,true);
        if (primeraVezPlanes == false) {
            if (rBFechaPlanes != 0) {
                cPlanes.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaPlanes  == 11) {
                    try {
                        cPlanes.jDateChooser3.setDate(formatoFecha.parse(fecha1Planes));
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cPlanes.jRadioButton12.setSelected(true);
                    try {
                        cPlanes.jDateChooser2.setDate(formatoFecha.parse(fecha2Planes));
                        cPlanes.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cPlanes.jDateChooser1.setDate(formatoFecha.parse(fecha3Planes));
                        cPlanes.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (cBPasajeros1Planes != 0 || cBPasajeros2Planes != 0 || cBPasajeros3Planes != 0) {
                cPlanes.jCheckBox1.setSelected(true);
                if (cBPasajeros1Planes == 2) {
                    cPlanes.jCheckBox2.setSelected(true);
                    cPlanes.jTextField7.setText(pasajero1Planes);
                }
                if (cBPasajeros2Planes == 7) {
                    cPlanes.jCheckBox7.setSelected(true);
                    cPlanes.jTextField14.setText(pasajero2Planes);
                }
                if (cBPasajeros3Planes == 8) {
                    cPlanes.jCheckBox8.setSelected(true);
                    cPlanes.jTextField13.setText(pasajero3Planes);
                }
            }
            ///////////////////
            if (cBPersonal1Planes != 0 || cBPersonal2Planes != 0 || cBPersonal3Planes != 0) {
                cPlanes.jCheckBox12.setSelected(true);
                if (rBPersonalInfoPlanes == 1) {
                    cPlanes.jRadioButton1.setSelected(true); 
                } else {
                    cPlanes.jRadioButton2.setSelected(true); 
                }
                if (cBPersonal1Planes == 9) {
                    cPlanes.jCheckBox9.setSelected(true);
                    cPlanes.jTextField8.setText(personal1Planes);
                }
                if (cBPersonal2Planes == 10) {
                    cPlanes.jCheckBox10.setSelected(true);
                    cPlanes.jTextField18.setText(personal2Planes);
                }
                if (cBPersonal3Planes == 11) {
                    cPlanes.jCheckBox11.setSelected(true);
                    cPlanes.jTextField16.setText(personal3Planes);
                }
            }
            ///////////////////
            if (rBPersonalPlanes  != 0) {
                cPlanes.jCheckBox6.setSelected(true);
                if (rBPersonalPlanes == 15) {
                    cPlanes.jRadioButton15.setSelected(true);
                    cPlanes.jTextField15.setText(licenciaPlanes);
                } else  {
                    cPlanes.jRadioButton17.setSelected(true);
                    cPlanes.jTextField17.setText(licenciaPlanes);
                }
            }
            if (rBAeronavePlanes != 0) {
                cPlanes.jCheckBox3.setSelected(true);
                if (rBAeronavePlanes == 9) {
                    cPlanes.jRadioButton9.setSelected(true);
                    cPlanes.jTextField11.setText(aeronavePlanes);
                } else  {
                    cPlanes.jRadioButton10.setSelected(true);
                    cPlanes.jTextField12.setText(aeronavePlanes);
                }
            }
            if (rBAeropuertoPlanes != 0) {
                cPlanes.jCheckBox5.setSelected(true);
                if (rBAeropuertoPlanes == 18) {
                    cPlanes.jRadioButton18.setSelected(true);
                    cPlanes.jTextField20.setText(aeropuertoPlanes);
                } else  {
                    cPlanes.jRadioButton19.setSelected(true);
                    cPlanes.jTextField21.setText(aeropuertoPlanes);
                }
            }
        }
        cPlanes.setVisible(true);
    }//GEN-LAST:event_botonCriteriosPlanesActionPerformed

    private void botonCriteriosCierresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriteriosCierresActionPerformed
        limpiarCriteriosCierres();
        VBCJDialogBusquedaCierres cCierres = new VBCJDialogBusquedaCierres(this,true);
        if (primeraVezCierres == false) {
            if (rBFechaCierres != 0) {
                cCierres.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaCierres  == 11) {
                    try {
                        cCierres.jDateChooser3.setDate(formatoFecha.parse(fecha1Cierres));
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cCierres.jRadioButton12.setSelected(true);
                    try {
                        cCierres.jDateChooser2.setDate(formatoFecha.parse(fecha2Cierres));
                        cCierres.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cCierres.jDateChooser1.setDate(formatoFecha.parse(fecha3Cierres));
                        cCierres.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (cBPasajeros1Cierres != 0 || cBPasajeros2Cierres != 0 || cBPasajeros3Cierres != 0) {
                cCierres.jCheckBox1.setSelected(true);
                if (cBPasajeros1Cierres == 2) {
                    cCierres.jCheckBox2.setSelected(true);
                    cCierres.jTextField7.setText(pasajero1Cierres);
                }
                if (cBPasajeros2Cierres == 7) {
                    cCierres.jCheckBox7.setSelected(true);
                    cCierres.jTextField14.setText(pasajero2Cierres);
                }
                if (cBPasajeros3Cierres == 8) {
                    cCierres.jCheckBox8.setSelected(true);
                    cCierres.jTextField13.setText(pasajero3Cierres);
                }
            }
            if (rBPersonalCierres  != 0) {
                cCierres.jCheckBox6.setSelected(true);
                if (rBPersonalCierres == 15) {
                    cCierres.jRadioButton15.setSelected(true);
                    cCierres.jTextField15.setText(licenciaCierres);
                } else  {
                    cCierres.jRadioButton17.setSelected(true);
                    cCierres.jTextField17.setText(licenciaCierres);
                }
            }
            if (rBAeronaveCierres != 0) {
                cCierres.jCheckBox3.setSelected(true);
                if (rBAeronaveCierres == 9) {
                    cCierres.jRadioButton9.setSelected(true);
                    cCierres.jTextField11.setText(aeronaveCierres);
                } else  {
                    cCierres.jRadioButton10.setSelected(true);
                    cCierres.jTextField12.setText(aeronaveCierres);
                }
            }
            if (rBAeropuertoCierres != 0) {
                cCierres.jCheckBox5.setSelected(true);
                if (rBAeropuertoCierres == 18) {
                    cCierres.jRadioButton18.setSelected(true);
                    cCierres.jTextField20.setText(aeropuertoCierres);
                } else  {
                    cCierres.jRadioButton19.setSelected(true);
                    cCierres.jTextField21.setText(aeropuertoCierres);
                }
            }
        }
        cCierres.setVisible(true);
    }//GEN-LAST:event_botonCriteriosCierresActionPerformed

    private void botonBuscarCierresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarCierresActionPerformed
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "CIERRES_DE_PLAN.fecha_hora, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
        preconsulta += "PILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - LICENCIA";
        preconsulta += "PILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - NOMBRE(S)";
        preconsulta += "PILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A PATERNO";
        preconsulta += "PILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A MATERNO";
        preconsulta += "PILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - T LICENCIA";
        preconsulta += "COPILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - LICENCIA";
        preconsulta += "COPILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - NOMBRE(S)";
        preconsulta += "COPILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A PATERNO";
        preconsulta += "COPILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A MATERNO";
        preconsulta += "COPILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - T LICENCIA";
        preconsulta += "AEROPUERTOS_PLANES.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_PLANES.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "AERONAVES_PLANES.identificacion_aeronave, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_PLANES.tipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - TIPO";
        preconsulta += "CIERRES_DE_PLAN.observaciones, ";
            nombresColumnas[columnas][1] = "variosRenglones";
            nombresColumnas[columnas++][0] = "OBSERVACIONES";
        preconsulta += "CIERRES_DE_PLAN.no_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "No. PASAJEROS";
        preconsulta += "PASAJEROS_CIERRE.id_pasajero, ";
            nombresColumnas[columnas][1] = "pasajeroID";
            nombresColumnas[columnas++][0] = "PASAJERO - ID";
        preconsulta += "PASAJEROS_CIERRE.nombre, ";
            nombresColumnas[columnas][1] = "pasajeroN";
            nombresColumnas[columnas++][0] = "PASAJERO - NOMBRE(S)";
        preconsulta += "PASAJEROS_CIERRE.apellido_paterno, ";
            nombresColumnas[columnas][1] = "pasajeroAP";
            nombresColumnas[columnas++][0] = "PASAJERO - A PATERNO";
        preconsulta += "PASAJEROS_CIERRE.apellido_materno, ";
            nombresColumnas[columnas][1] = "pasajeroAM";
            nombresColumnas[columnas++][0] = "PASAJERO - A MATERNO";
        preconsulta += "PASAJEROS_CIERRE.nacionalidad, ";
            nombresColumnas[columnas][1] = "pasajeroNa";
            nombresColumnas[columnas++][0] = "PASAJERO - NACIONALIDAD";
        preconsulta += "PDFS_CIERRE.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_CIERRE.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM CIERRES_DE_PLAN\n";
        consulta += "LEFT JOIN PILOTOS_PLANES\n" +
            "ON PILOTOS_PLANES.no_licencia = CIERRES_DE_PLAN.piloto\n";             
        consulta += "LEFT JOIN COPILOTOS_CIERRE\n" +
            "ON COPILOTOS_CIERRE.fecha = CIERRES_DE_PLAN.fecha_hora\n" +
            "LEFT JOIN COPILOTOS_PLANES\n" +
            "ON COPILOTOS_CIERRE.copiloto = COPILOTOS_PLANES.no_licencia\n";               
        consulta += "LEFT JOIN AEROPUERTOS_PLANES\n" +
            "ON AEROPUERTOS_PLANES.codigo_oaci = CIERRES_DE_PLAN.aeropuerto_origen\n";           
        consulta += "LEFT JOIN AERONAVES_PLANES\n" +
            "ON AERONAVES_PLANES.identificacion_aeronave = CIERRES_DE_PLAN.aeronave\n";           
        consulta += "LEFT JOIN PASAJEROS_CIERRE\n" +
            "ON PASAJEROS_CIERRE.fecha = CIERRES_DE_PLAN.fecha_hora\n";  
        consulta += "LEFT JOIN RELACION_PDF_CIERRES\n" +
            "ON RELACION_PDF_CIERRES.fecha = CIERRES_DE_PLAN.fecha_hora\n" +
            "LEFT JOIN PDFS_CIERRE\n" +
            "ON RELACION_PDF_CIERRES.pdf = PDFS_CIERRE.ruta_pdf\n"; 
        if (criteriosCierres != null) {
            consulta += criteriosCierres;
        }
        consulta += "ORDER BY CIERRES_DE_PLAN.fecha_hora,PASAJEROS_CIERRE.id_pasajero";
        System.out.println(consulta);
        ConexionMysql conexionConsultaCierre = new ConexionMysql();
        if (conexionConsultaCierre.conectarBD("localhost","root",pw,"baseaeropuerto")) {
            if (!conexionConsultaCierre.mostrarColumnasTablaMysqlCompuesta(jTableCierres,consulta,nombresColumnas,columnas,2)) {
                JOptionPane.showMessageDialog(this,conexionConsultaCierre.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton11.setEnabled(true);
                if (jTableCierres.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this,"SU BUSQUEDA NO HA GENERADO RESULTADOS","",JOptionPane.INFORMATION_MESSAGE);
                }
                botonBuscarCierres.setEnabled(false);
                botonCriteriosCierres.setEnabled(false);
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaCierre.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonBuscarCierresActionPerformed

    private void botonCriteriosMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriteriosMSActionPerformed
        limpiarCriteriosManifiestosSalida();
        VBDJDialogBusquedaManifiestos cManifiestosSalida = new VBDJDialogBusquedaManifiestos(this,true);
        if (primeraVezMSalida == false) {
            if (rBFechaMSalida != 0) {
                cManifiestosSalida.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaMSalida == 11) {
                    try {
                        cManifiestosSalida.jDateChooser3.setDate(formatoFecha.parse(fecha1MSalida));
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cManifiestosSalida.jRadioButton12.setSelected(true);
                    try {
                        cManifiestosSalida.jDateChooser2.setDate(formatoFecha.parse(fecha2MSalida));
                        cManifiestosSalida.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cManifiestosSalida.jDateChooser1.setDate(formatoFecha.parse(fecha3MSalida));
                        cManifiestosSalida.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (rBPersonalMSalida != 0) {
                cManifiestosSalida.jCheckBox6.setSelected(true);
                if (rBPersonalMSalida == 15) {
                    cManifiestosSalida.jRadioButton15.setSelected(true);
                    cManifiestosSalida.jTextField15.setText(licenciaMSalida);
                } else if (rBPersonalMSalida == 17) {
                    cManifiestosSalida.jRadioButton17.setSelected(true);
                    cManifiestosSalida.jTextField17.setText(licenciaMSalida);
                } else if (rBPersonalMSalida == 16) {
                    cManifiestosSalida.jRadioButton16.setSelected(true);
                    cManifiestosSalida.jTextField16.setText(licenciaMSalida);
                } else {
                    cManifiestosSalida.jRadioButton20.setSelected(true);
                    cManifiestosSalida.jTextField18.setText(licenciaMSalida);
                }
            }
            if (rBAeronaveMSalida != 0) {
                cManifiestosSalida.jCheckBox3.setSelected(true);
                if (rBAeronaveMSalida == 9) {
                    cManifiestosSalida.jRadioButton9.setSelected(true);
                    cManifiestosSalida.jTextField11.setText(aeronaveMSalida);
                } else {
                    cManifiestosSalida.jRadioButton10.setSelected(true);
                    cManifiestosSalida.jTextField12.setText(aeronaveMSalida);
                }
            }
            if (rBDestinoMSalida != 0) {
                cManifiestosSalida.jCheckBox5.setSelected(true);
                if (rBDestinoMSalida == 18) {
                    cManifiestosSalida.jRadioButton18.setSelected(true);
                    cManifiestosSalida.jTextField20.setText(destinoMSalida);
                } else {
                    cManifiestosSalida.jRadioButton19.setSelected(true);
                    cManifiestosSalida.jTextField21.setText(destinoMSalida);
                }
            }
            if (aerolineaMSalida != null) {
                cManifiestosSalida.jCheckBox7.setSelected(true);
                cManifiestosSalida.jTextField1.setText(aerolineaMSalida);
            }
            if (vueloMSalida != null) {
                cManifiestosSalida.jCheckBox8.setSelected(true);
                cManifiestosSalida.jTextField2.setText(vueloMSalida);
            }
        }
        cManifiestosSalida.setVisible(true);
    }//GEN-LAST:event_botonCriteriosMSActionPerformed

    private void botonCriteriosMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriteriosMLActionPerformed
        limpiarCriteriosManifiestosLlegada();
        VBEJDialogBusquedaManifiestosLlegada cManifiestosLlegada = new VBEJDialogBusquedaManifiestosLlegada(this,true);
        if (primeraVezMLlegada == false) {
            if (rBFechaMLlegada != 0) {
                cManifiestosLlegada.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaMLlegada == 11) {
                    try {
                        cManifiestosLlegada.jDateChooser3.setDate(formatoFecha.parse(fecha1MLlegada));
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cManifiestosLlegada.jRadioButton12.setSelected(true);
                    try {
                        cManifiestosLlegada.jDateChooser2.setDate(formatoFecha.parse(fecha2MLlegada));
                        cManifiestosLlegada.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cManifiestosLlegada.jDateChooser1.setDate(formatoFecha.parse(fecha3MLlegada));
                        cManifiestosLlegada.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (rBPersonalMLlegada != 0) {
                cManifiestosLlegada.jCheckBox6.setSelected(true);
                if (rBPersonalMLlegada == 15) {
                    cManifiestosLlegada.jRadioButton15.setSelected(true);
                    cManifiestosLlegada.jTextField15.setText(licenciaMLlegada);
                } else if (rBPersonalMLlegada == 17) {
                    cManifiestosLlegada.jRadioButton17.setSelected(true);
                    cManifiestosLlegada.jTextField17.setText(licenciaMLlegada);
                } else if (rBPersonalMLlegada == 16) {
                    cManifiestosLlegada.jRadioButton16.setSelected(true);
                    cManifiestosLlegada.jTextField16.setText(licenciaMLlegada);
                } else {
                    cManifiestosLlegada.jRadioButton20.setSelected(true);
                    cManifiestosLlegada.jTextField18.setText(licenciaMLlegada);
                }
            }
            if (rBAeronaveMLlegada != 0) {
                cManifiestosLlegada.jCheckBox3.setSelected(true);
                if (rBAeronaveMLlegada == 9) {
                    cManifiestosLlegada.jRadioButton9.setSelected(true);
                    cManifiestosLlegada.jTextField11.setText(aeronaveMLlegada);
                } else {
                    cManifiestosLlegada.jRadioButton10.setSelected(true);
                    cManifiestosLlegada.jTextField12.setText(aeronaveMLlegada);
                }
            }
            if (rBOrigenMLlegada != 0) {
                cManifiestosLlegada.jCheckBox5.setSelected(true);
                if (rBOrigenMLlegada == 18) {
                    cManifiestosLlegada.jRadioButton18.setSelected(true);
                    cManifiestosLlegada.jTextField20.setText(origenMLlegada);
                } else {
                    cManifiestosLlegada.jRadioButton19.setSelected(true);
                    cManifiestosLlegada.jTextField21.setText(origenMLlegada);
                }
            }
            if (aerolineaMLlegada != null) {
                cManifiestosLlegada.jCheckBox7.setSelected(true);
                cManifiestosLlegada.jTextField1.setText(aerolineaMLlegada);
            }
            if (vueloMLlegada != null) {
                cManifiestosLlegada.jCheckBox8.setSelected(true);
                cManifiestosLlegada.jTextField2.setText(vueloMLlegada);
            }
        }
        cManifiestosLlegada.setVisible(true);
    }//GEN-LAST:event_botonCriteriosMLActionPerformed

    private void botonBuscarMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarMSActionPerformed
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "MANIFIESTOS_SALIDA.fecha_hora_itinerario, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
        ///****-------------------------------------------
        nombresColumnas[columnas][1] = "hi";
        nombresColumnas[columnas++][0] = "HORA ITINERARIO";
        ///****----------------------------------------
        preconsulta += "MANIFIESTOS_SALIDA.hora_real, ";
            nombresColumnas[columnas][1] = "hr";
            nombresColumnas[columnas++][0] = "HORA REAL";
        preconsulta += "MANIFIESTOS_SALIDA.no_de_vuelo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "NO DE VUELO";
        preconsulta += "COMPANIAS.siglas, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - SIGLAS";
        preconsulta += "COMPANIAS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - NOMBRE";
        preconsulta += "AERONAVES_MANIFIESTOS.matricula, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_MANIFIESTOS.equipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - EQUIPO";
        preconsulta += "COMANDANTE.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - LICENCIA";
        preconsulta += "COMANDANTE.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDATE - NOMBRE(S)";
        preconsulta += "COMANDANTE.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A PATERNO";
        preconsulta += "COMANDANTE.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A MATERNO";
        preconsulta += "COMANDANTE.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - T LICENCIA";
        preconsulta += "PRIMER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - LICENCIA";
        preconsulta += "PRIMER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - NOMBRE(S)";
        preconsulta += "PRIMER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A PATERNO";
        preconsulta += "PRIMER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A MATERNO";
        preconsulta += "PRIMER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - T LICENCIA";    
        preconsulta += "SEGUNDO_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - LICENCIA";
        preconsulta += "SEGUNDO_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - NOMBRE(S)";
        preconsulta += "SEGUNDO_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A PATERNO";
        preconsulta += "SEGUNDO_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A MATERNO";
        preconsulta += "SEGUNDO_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - T LICENCIA";    
        preconsulta += "TERCER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - LICENCIA";
        preconsulta += "TERCER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - NOMBRE(S)";
        preconsulta += "TERCER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A PATERNO";
        preconsulta += "TERCER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A MATERNO";
        preconsulta += "TERCER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - T LICENCIA";    
        preconsulta += "MANIFIESTOS_SALIDA.sobrecargos, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SOBRECARGOS";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "MANIFIESTOS_SALIDA.tramo_interior, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TRAMO INTERIOR";
        preconsulta += "MANIFIESTOS_SALIDA.exentos_nacionales, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "EXENTOS NACIONALES";
        preconsulta += "MANIFIESTOS_SALIDA.internacionales, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "INTERNACIONALES";
        preconsulta += "MANIFIESTOS_SALIDA.exentos_internacionales, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "EXENTOS INTERNACIONALES";
        preconsulta += "MANIFIESTOS_SALIDA.infantes, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "INFANTES";
        preconsulta += "MANIFIESTOS_SALIDA.transito, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TRANSITO";
        preconsulta += "MANIFIESTOS_SALIDA.total, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - PASAJEROS";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_equipaje, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - EQUIPAJE";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_carga, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CARGA";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_correo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CORREO";
        preconsulta += "PDFS_MANIFIESTOS.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM MANIFIESTOS_SALIDA\n";
        consulta += "LEFT JOIN COMPANIAS\n" +
            "ON COMPANIAS.siglas = MANIFIESTOS_SALIDA.empresa\n";
        consulta += "LEFT JOIN AERONAVES_MANIFIESTOS\n" +
            "ON AERONAVES_MANIFIESTOS.matricula = MANIFIESTOS_SALIDA.aeronave\n";
        consulta += "LEFT JOIN COMANDANTE\n" +
            "ON COMANDANTE.no_licencia = MANIFIESTOS_SALIDA.comandante\n";
        consulta += "LEFT JOIN PRIMER_OFICIAL\n" +
            "ON PRIMER_OFICIAL.no_licencia = MANIFIESTOS_SALIDA.primer\n";
        consulta += "LEFT JOIN SEGUNDO_SALIDA\n" +
            "ON SEGUNDO_SALIDA.fecha_ss = MANIFIESTOS_SALIDA.fecha_hora_itinerario\n" +
            "LEFT JOIN SEGUNDO_OFICIAL\n" +
            "ON SEGUNDO_SALIDA.licencia_ss = SEGUNDO_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN TERCERO_SALIDA\n" +
            "ON TERCERO_SALIDA.fecha_ts = MANIFIESTOS_SALIDA.fecha_hora_itinerario\n" +
            "LEFT JOIN TERCER_OFICIAL\n" +
            "ON TERCERO_SALIDA.licencia_ts = TERCER_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN AEROPUERTOS_MANIFIESTOS\n" +
            "ON AEROPUERTOS_MANIFIESTOS.codigo_iata = MANIFIESTOS_SALIDA.destino\n";       
        consulta += "LEFT JOIN PDFS_SALIDA\n" +
            "ON PDFS_SALIDA.fecha = MANIFIESTOS_SALIDA.fecha_hora_itinerario\n" +
            "LEFT JOIN PDFS_MANIFIESTOS\n" +
            "ON PDFS_SALIDA.pdf = PDFS_MANIFIESTOS.ruta_pdf\n"; 
        if (criteriosManifiestosSalida != null) {
            consulta += criteriosManifiestosSalida;
        }
        consulta += "ORDER BY MANIFIESTOS_SALIDA.fecha_hora_itinerario";
        System.out.println(consulta);
        ConexionMysql conexionConsultaMS = new ConexionMysql();
        if (conexionConsultaMS.conectarBD("localhost","root",pw,"baseaeropuerto")) {
            if (!conexionConsultaMS.mostrarColumnasTablaMysqlCompuesta(jTableMS,consulta,nombresColumnas,columnas,2)) {
                JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton14.setEnabled(true);
                if (jTableMS.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this,"SU BUSQUEDA NO HA GENERADO RESULTADOS","",JOptionPane.INFORMATION_MESSAGE);
                }
                botonBuscarMS.setEnabled(false);
                botonCriteriosMS.setEnabled(false);
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonBuscarMSActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        FuncionesGenerales.limpiarTablaCompletamente(jTablePlanes);
        limpiarCriteriosPlanes();
        rBFechaPlanes = 0;
        fecha1Planes = null;
        fecha2Planes = null;
        fecha3Planes = null;
        cBPasajeros1Planes = 0;
        pasajero1Planes = null;
        cBPasajeros2Planes = 0;
        pasajero2Planes = null;
        cBPasajeros3Planes = 0;
        pasajero3Planes = null;
        cBPersonal1Planes = 0;
        personal1Planes = null;
        cBPersonal2Planes = 0;
        personal2Planes = null;
        cBPersonal3Planes = 0;
        personal3Planes = null;
        rBPersonalInfoPlanes = 0;
        rBPersonalPlanes = 0;
        licenciaPlanes = null;
        rBAeronavePlanes = 0;
        aeronavePlanes = null;
        rBAeropuertoPlanes = 0;
        aeropuertoPlanes = null;
        primeraVezPlanes = true;
        botonBuscarPlanes.setEnabled(true);
        botonCriteriosPlanes.setEnabled(true);
        jButton12.setEnabled(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        FuncionesGenerales.limpiarTablaCompletamente(jTableCierres);
        limpiarCriteriosCierres();
        rBFechaCierres = 0;
        fecha1Cierres = null;
        fecha2Cierres = null;
        fecha3Cierres = null;
        cBPasajeros1Cierres = 0;
        pasajero1Cierres = null;
        cBPasajeros2Cierres = 0;
        pasajero2Cierres = null;
        cBPasajeros3Cierres = 0;
        pasajero3Cierres = null;
        cBPersonal1Cierres = 0;
        personal1Cierres = null;
        cBPersonal2Cierres = 0;
        String personal2Cierres = null;
        cBPersonal3Cierres = 0;
        personal3Cierres = null;
        rBPersonalInfoCierres = 0;
        rBPersonalCierres = 0;
        licenciaCierres = null;
        rBAeronaveCierres = 0;
        aeronaveCierres = null;
        rBAeropuertoCierres = 0;
        aeropuertoCierres = null;
        primeraVezCierres = true;
        botonBuscarCierres.setEnabled(true);
        botonCriteriosCierres.setEnabled(true);
        jButton11.setEnabled(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        //
        FuncionesGenerales.limpiarTablaCompletamente(jTableMS);
        //
        limpiarCriteriosManifiestosSalida();
        rBFechaMSalida = 0;
        fecha1MSalida = null;
        fecha2MSalida = null;
        fecha3MSalida = null;
        rBPersonalMSalida = 0;
        licenciaMSalida = null;
        rBAeronaveMSalida = 0;
        aeronaveMSalida = null;
        rBDestinoMSalida = 0;
        destinoMSalida = null;
        aerolineaMSalida = null;
        vueloMSalida = null;
        primeraVezMSalida = true;
        botonBuscarMS.setEnabled(true);
        botonCriteriosMS.setEnabled(true);
        jButton14.setEnabled(false);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void botonBuscarMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarMLActionPerformed
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "MANIFIESTOS_LLEGADA.fecha_hora_itinerario, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
        ///****-------------------------------------------
        nombresColumnas[columnas][1] = "hi";
        nombresColumnas[columnas++][0] = "HORA ITINERARIO";
        ///****----------------------------------------
        preconsulta += "MANIFIESTOS_LLEGADA.hora_real, ";
            nombresColumnas[columnas][1] = "hr";
            nombresColumnas[columnas++][0] = "HORA REAL";
        preconsulta += "MANIFIESTOS_LLEGADA.no_de_vuelo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "NO DE VUELO";
        preconsulta += "COMPANIAS.siglas, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - SIGLAS";
        preconsulta += "COMPANIAS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - NOMBRE";
        preconsulta += "AERONAVES_MANIFIESTOS.matricula, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_MANIFIESTOS.equipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - EQUIPO";
        preconsulta += "COMANDANTE.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - LICENCIA";
        preconsulta += "COMANDANTE.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDATE - NOMBRE(S)";
        preconsulta += "COMANDANTE.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A PATERNO";
        preconsulta += "COMANDANTE.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A MATERNO";
        preconsulta += "COMANDANTE.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - T LICENCIA";
        preconsulta += "PRIMER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - LICENCIA";
        preconsulta += "PRIMER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - NOMBRE(S)";
        preconsulta += "PRIMER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A PATERNO";
        preconsulta += "PRIMER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A MATERNO";
        preconsulta += "PRIMER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - T LICENCIA";    
        preconsulta += "SEGUNDO_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - LICENCIA";
        preconsulta += "SEGUNDO_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - NOMBRE(S)";
        preconsulta += "SEGUNDO_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A PATERNO";
        preconsulta += "SEGUNDO_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A MATERNO";
        preconsulta += "SEGUNDO_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - T LICENCIA";    
        preconsulta += "TERCER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - LICENCIA";
        preconsulta += "TERCER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - NOMBRE(S)";
        preconsulta += "TERCER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A PATERNO";
        preconsulta += "TERCER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A MATERNO";
        preconsulta += "TERCER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - T LICENCIA";    
        preconsulta += "MANIFIESTOS_LLEGADA.sobrecargos, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SOBRECARGOS";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "MANIFIESTOS_LLEGADA.total_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL PASAJEROS";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - PASAJEROS";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_equipaje, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - EQUIPAJE";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_carga, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CARGA";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_correo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CORREO";
        preconsulta += "PDFS_MANIFIESTOS.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM MANIFIESTOS_LLEGADA\n";
        consulta += "LEFT JOIN COMPANIAS\n" +
            "ON COMPANIAS.siglas = MANIFIESTOS_LLEGADA.empresa\n";
        consulta += "LEFT JOIN AERONAVES_MANIFIESTOS\n" +
            "ON AERONAVES_MANIFIESTOS.matricula = MANIFIESTOS_LLEGADA.aeronave\n";
        consulta += "LEFT JOIN COMANDANTE\n" +
            "ON COMANDANTE.no_licencia = MANIFIESTOS_LLEGADA.comandante\n";
        consulta += "LEFT JOIN PRIMER_OFICIAL\n" +
            "ON PRIMER_OFICIAL.no_licencia = MANIFIESTOS_LLEGADA.primer\n";
        consulta += "LEFT JOIN SEGUNDO_LLEGADA\n" +
            "ON SEGUNDO_LLEGADA.fecha_sl = MANIFIESTOS_LLEGADA.fecha_hora_itinerario\n" +
            "LEFT JOIN SEGUNDO_OFICIAL\n" +
            "ON SEGUNDO_LLEGADA.licencia_sl = SEGUNDO_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN TERCERO_LLEGADA\n" +
            "ON TERCERO_LLEGADA.fecha_tl = MANIFIESTOS_LLEGADA.fecha_hora_itinerario\n" +
            "LEFT JOIN TERCER_OFICIAL\n" +
            "ON TERCERO_LLEGADA.licencia_tl = TERCER_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN AEROPUERTOS_MANIFIESTOS\n" +
            "ON AEROPUERTOS_MANIFIESTOS.codigo_iata = MANIFIESTOS_LLEGADA.origen\n";
        consulta += "LEFT JOIN PDFS_LLEGADA\n" +
            "ON PDFS_LLEGADA.fecha = MANIFIESTOS_LLEGADA.fecha_hora_itinerario\n" +
            "LEFT JOIN PDFS_MANIFIESTOS\n" +
            "ON PDFS_LLEGADA.pdf = PDFS_MANIFIESTOS.ruta_pdf\n"; 
        if (criteriosManifiestosLlegada != null) {
            consulta += criteriosManifiestosLlegada;
        }
        consulta += "ORDER BY MANIFIESTOS_LLEGADA.fecha_hora_itinerario";
        System.out.println(consulta);
        ConexionMysql conexionConsultaMS = new ConexionMysql();
        if (conexionConsultaMS.conectarBD("localhost","root",pw,"baseaeropuerto")) {
            if (!conexionConsultaMS.mostrarColumnasTablaMysqlCompuesta(jTableML,consulta,nombresColumnas,columnas,2)) {
                JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton16.setEnabled(true);
                if (jTableML.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(this,"SU BUSQUEDA NO HA GENERADO RESULTADOS","",JOptionPane.INFORMATION_MESSAGE);
                }
                botonBuscarML.setEnabled(false);
                botonCriteriosML.setEnabled(false);
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
        
        //
    }//GEN-LAST:event_botonBuscarMLActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        //
        FuncionesGenerales.limpiarTablaCompletamente(jTableML);
        //
        limpiarCriteriosManifiestosLlegada();
        rBFechaMLlegada = 0;
        fecha1MLlegada = null;
        fecha2MLlegada = null;
        fecha3MLlegada = null;
        rBPersonalMLlegada = 0;
        licenciaMLlegada = null;
        rBAeronaveMLlegada = 0;
        aeronaveMLlegada = null;
        rBOrigenMLlegada = 0;
        origenMLlegada = null;
        aerolineaMLlegada = null;
        vueloMLlegada = null;
        primeraVezMLlegada = true;
        botonBuscarML.setEnabled(true);
        botonCriteriosML.setEnabled(true);
        jButton16.setEnabled(false);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jTablePlanesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePlanesMouseClicked
        if(!evt.isMetaDown() && jTablePlanes.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTablePlanes,0);
            jTablePlanes.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTablePlanesMouseClicked

    private void jTablePlanesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePlanesMousePressed
        if(!evt.isMetaDown()){
            int fila = jTablePlanes.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTablePlanes,fila);
            jTablePlanes.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTablePlanesMousePressed

    private void jTableCierresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCierresMouseClicked
        if(!evt.isMetaDown() && jTableCierres.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableCierres,0);
            jTableCierres.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableCierresMouseClicked

    private void jTableCierresMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCierresMousePressed
        if(!evt.isMetaDown()){
            int fila = jTableCierres.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableCierres,fila);
            jTableCierres.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableCierresMousePressed

    private void jTableMSMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMSMousePressed
        if(!evt.isMetaDown()){
            int fila = jTableMS.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableMS,fila);
            jTableMS.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableMSMousePressed

    private void jTableMLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMLMousePressed
        if(!evt.isMetaDown()){
            int fila = jTableML.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableML,fila);
            jTableML.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableMLMousePressed

    private void jTableMSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMSMouseClicked
        if(!evt.isMetaDown() && jTableMS.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableMS,0);
            jTableMS.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableMSMouseClicked

    private void jTableMLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMLMouseClicked
        if(!evt.isMetaDown() && jTableML.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableML,0);
            jTableML.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableMLMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        volverAlInicio();
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        volverAlInicio();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        VJFrameVentanaCapturarModificaciones captura = new VJFrameVentanaCapturarModificaciones();
        captura.setP(pw);
        if (jTabbedPane1.getSelectedIndex() == 0) {
            if (jTablePlanes.getSelectedRow() != -1) {
                captura.jTabbedPane1.setEnabledAt(0,true);
                captura.jTabbedPane1.setEnabledAt(1,false);
                captura.jTabbedPane1.setSelectedIndex(0);
                captura.jComboBoxOperacionPlanes.setSelectedIndex(0);
                captura.jComboBoxOperacionPlanes.setEnabled(false);
                filaActual = jTablePlanes.getSelectedRow();
                filasSeleccionadas = jTablePlanes.getSelectedRowCount();
                VJFrameVentanaCapturarModificaciones.aeropuertoPlanesOriginal = jTablePlanes.getValueAt(filaActual,12).toString();
                VJFrameVentanaCapturarModificaciones.jTextField1.setText(jTablePlanes.getValueAt(filaActual,12).toString()); // AEROPUERTO - OACIO
                VJFrameVentanaCapturarModificaciones.jTextField2.setText(jTablePlanes.getValueAt(filaActual,13).toString()); // AEROPUERTO - IATA
                VJFrameVentanaCapturarModificaciones.jTextField3.setText(jTablePlanes.getValueAt(filaActual,14).toString()); // AEROPUERTO - NOMBRE
                VJFrameVentanaCapturarModificaciones.aeronavePlanesOriginal = jTablePlanes.getValueAt(filaActual,15).toString();
                VJFrameVentanaCapturarModificaciones.jTextField4.setText(jTablePlanes.getValueAt(filaActual,15).toString()); // AERONAVE - MATRICULA
                VJFrameVentanaCapturarModificaciones.jTextField5.setText(jTablePlanes.getValueAt(filaActual,16).toString()); // AERONAVE - TIPO
                VJFrameVentanaCapturarModificaciones.pilotoPlanesOriginal = jTablePlanes.getValueAt(filaActual,2).toString();
                VJFrameVentanaCapturarModificaciones.jTextField7.setText(jTablePlanes.getValueAt(filaActual,2).toString()); // PILOTO - LICENCIA
                String nombre = jTablePlanes.getValueAt(filaActual,3).toString();
                String aPaterno = jTablePlanes.getValueAt(filaActual,4).toString();
                String aMaterno = jTablePlanes.getValueAt(filaActual,5).toString();
                VJFrameVentanaCapturarModificaciones.jTextField6.setText(nombre + " " + aPaterno + " " + aMaterno); // PILOTO - NOMBRE COMPLETO
                VJFrameVentanaCapturarModificaciones.jLabel14.setText(jTablePlanes.getValueAt(filaActual,6).toString()); // PILOTO - TIPO LICENCIA
                String copiloto = (String) jTablePlanes.getValueAt(filaActual,7); // COPILOTO - LICENCIA
                VJFrameVentanaCapturarModificaciones.copilotoPlanesOriginal = null;
                if (copiloto != null) {
                    if (!copiloto.equals("")) {
                        VJFrameVentanaCapturarModificaciones.copilotoPlanesOriginal = copiloto;
                        VJFrameVentanaCapturarModificaciones.jTextField9.setText(copiloto); // COPILOTO - LICENCIA
                        String nombreC = jTablePlanes.getValueAt(filaActual,8).toString();
                        String aPaternoC = jTablePlanes.getValueAt(filaActual,9).toString();
                        String aMaternoC = jTablePlanes.getValueAt(filaActual,10).toString();
                        VJFrameVentanaCapturarModificaciones.jTextField8.setText(nombreC + " " + aPaternoC + " " + aMaternoC); // COPILOTO - NOMBRE COMPLETO
                        VJFrameVentanaCapturarModificaciones.jLabel38.setText(jTablePlanes.getValueAt(filaActual,11).toString()); // COPILOTO - TIPO LICENCIA
                        VJFrameVentanaCapturarModificaciones.botonBorrar.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.copilotoPlanesOriginal = null;
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.copilotoPlanesOriginal = null;
                }
                captura.jTextFieldPersonasPasajeros.setText(jTablePlanes.getValueAt(filaActual,18).toString()); // TOTAL PERSONAS A BORDO
                VJFrameVentanaCapturarModificaciones.numeroPPOriginal = jTablePlanes.getValueAt(filaActual,18).toString();
                String fechaYHora = jTablePlanes.getValueAt(filaActual,1).toString(); // FECHA CON HORA
                VJFrameVentanaCapturarModificaciones.fechaCompletaPlanesOriginal = fechaYHora + ":00";
                String fechaFormatoBarras = fechaYHora.substring(0,10);
                String fechaFormatoDiagonal = fechaFormatoBarras.replace("-","/");
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy/MM/dd");
                try {
                    captura.jDateFecha.setDate(formatoFecha.parse(fechaFormatoDiagonal)); // FECHA
                    VJFrameVentanaCapturarModificaciones.fechaPlanesOriginal = fechaFormatoDiagonal;
                    captura.jLabel2.setForeground(Color.BLACK);
                } catch (Exception e) {}
                String horaMinutos [] = fechaYHora.substring(12).split(":");
                captura.jSpinnerHorasUTC.setValue(Integer.parseInt(horaMinutos[0]));
                captura.jSpinnerMinutosUTC.setValue(Integer.parseInt(horaMinutos[1]));
                VJFrameVentanaCapturarModificaciones.horasPlanesOriginal = horaMinutos[0];
                VJFrameVentanaCapturarModificaciones.minutosPlanesOriginal = horaMinutos[1];    
                String multiplesRenglones = "";
                for (int i = filaActual; i < filaActual + filasSeleccionadas; i++) {
                    String renglon = (String) jTablePlanes.getValueAt(i,17);
                    if (renglon != null && !renglon.equals("")) {
                        multiplesRenglones += renglon;
                    }
                    if (i != filaActual + filasSeleccionadas - 1 && renglon != null && !renglon.equals("")) {
                       multiplesRenglones += "\n";
                    }
                }
                captura.jTextArea1.setText(multiplesRenglones); // OTROS DATOS
                VJFrameVentanaCapturarModificaciones.multiplesRenglonesOriginal = multiplesRenglones;
                int totalPasajeros = 0;
                int filaDondeInicia = filaActual;
                String idPasajero = (String) jTablePlanes.getValueAt(filaDondeInicia,19);
                while (idPasajero != null && !idPasajero.equals("") && filaDondeInicia < filaActual + filasSeleccionadas) {
                    idPasajero = (String) jTablePlanes.getValueAt(filaDondeInicia,19);
                    totalPasajeros++;
                    filaDondeInicia++;
                }
                if (0 < totalPasajeros) {
                    String listaOriginalPasajeros [][] = new String [totalPasajeros][6];
                    String numeroPasajeros [][] = new String [totalPasajeros][6];
                    for (int i = 0; i < totalPasajeros; i++) {
                        for (int j = 0; j < 6; j++) {
                            if (j != 5) {
                                listaOriginalPasajeros[i][j] = jTablePlanes.getValueAt(filaActual + i,19 + j).toString();
                                numeroPasajeros[i][j] = jTablePlanes.getValueAt(filaActual + i,19 + j).toString();
                            } else {
                                listaOriginalPasajeros[i][j] = "";
                                numeroPasajeros[i][j] = "";
                            }
                        }
                    }
                    for (int k = 0; k < totalPasajeros; k++) {
                        numeroPasajeros[k][0] = numeroPasajeros[k][0].substring(12);
                    }
                    VJFrameVentanaCapturarModificaciones.listaPasajerosOriginal = listaOriginalPasajeros;
                    VJFrameVentanaCapturarModificaciones.numeracionPasajerosOriginal = numeroPasajeros;
                    VJFrameVentanaCapturarModificaciones.listaPasajeros = numeroPasajeros; // LISTA DE PASAJEROS
                    VJFrameVentanaCapturarModificaciones.jLabel19.setEnabled(true);
                } else {
                    VJFrameVentanaCapturarModificaciones.listaPasajerosOriginal = null;
                    VJFrameVentanaCapturarModificaciones.numeracionPasajerosOriginal = null;
                    VJFrameVentanaCapturarModificaciones.listaPasajeros = null; // LISTA DE PASAJEROS
                    VJFrameVentanaCapturarModificaciones.jLabel19.setEnabled(false);
                }

                String rutaPDF = (String) jTablePlanes.getValueAt(filaActual,24);
                if (rutaPDF != null) {
                    if (!rutaPDF.equals("")) {
                        VJFrameVentanaCapturarModificaciones.rutaPDFPlanesOriginal = rutaPDF;
                        VJFrameVentanaCapturarModificaciones.jLabel4.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.rutaPDFPlanesOriginal = null;
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.rutaPDFPlanesOriginal = null;
                }
                captura.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this,mensajeNoSeleccionado,"SELECCIÓN",JOptionPane.INFORMATION_MESSAGE);
            }
        } else if (jTabbedPane1.getSelectedIndex() == 1) {
            if (jTableCierres.getSelectedRow() != -1) {
                captura.jTabbedPane1.setEnabledAt(0,true);
                captura.jTabbedPane1.setEnabledAt(1,false);
                captura.jTabbedPane1.setSelectedIndex(0);
                captura.jComboBoxOperacionPlanes.setSelectedIndex(1);
                captura.jComboBoxOperacionPlanes.setEnabled(false);
                filaActual = jTableCierres.getSelectedRow();
                filasSeleccionadas = jTableCierres.getSelectedRowCount();
                VJFrameVentanaCapturarModificaciones.aeropuertoPlanesOriginal = jTableCierres.getValueAt(filaActual,12).toString();
                VJFrameVentanaCapturarModificaciones.jTextField1.setText(jTableCierres.getValueAt(filaActual,12).toString()); // AEROPUERTO - OACIO
                VJFrameVentanaCapturarModificaciones.jTextField2.setText(jTableCierres.getValueAt(filaActual,13).toString()); // AEROPUERTO - IATA
                VJFrameVentanaCapturarModificaciones.jTextField3.setText(jTableCierres.getValueAt(filaActual,14).toString()); // AEROPUERTO - NOMBRE
                VJFrameVentanaCapturarModificaciones.aeronavePlanesOriginal = jTableCierres.getValueAt(filaActual,15).toString();
                VJFrameVentanaCapturarModificaciones.jTextField4.setText(jTableCierres.getValueAt(filaActual,15).toString()); // AERONAVE - MATRICULA
                VJFrameVentanaCapturarModificaciones.jTextField5.setText(jTableCierres.getValueAt(filaActual,16).toString()); // AERONAVE - TIPO
                VJFrameVentanaCapturarModificaciones.pilotoPlanesOriginal = jTableCierres.getValueAt(filaActual,2).toString();
                VJFrameVentanaCapturarModificaciones.jTextField7.setText(jTableCierres.getValueAt(filaActual,2).toString()); // PILOTO - LICENCIA
                String nombre = jTableCierres.getValueAt(filaActual,3).toString();
                String aPaterno = jTableCierres.getValueAt(filaActual,4).toString();
                String aMaterno = jTableCierres.getValueAt(filaActual,5).toString();
                VJFrameVentanaCapturarModificaciones.jTextField6.setText(nombre + " " + aPaterno + " " + aMaterno); // PILOTO - NOMBRE COMPLETO
                VJFrameVentanaCapturarModificaciones.jLabel14.setText(jTableCierres.getValueAt(filaActual,6).toString()); // PILOTO - TIPO LICENCIA
                String copiloto = (String) jTableCierres.getValueAt(filaActual,7); // COPILOTO - LICENCIA
                VJFrameVentanaCapturarModificaciones.copilotoPlanesOriginal = null;
                if (copiloto != null) {
                    if (!copiloto.equals("")) {
                        VJFrameVentanaCapturarModificaciones.copilotoPlanesOriginal = copiloto;
                        VJFrameVentanaCapturarModificaciones.jTextField9.setText(copiloto); // COPILOTO - LICENCIA
                        String nombreC = jTableCierres.getValueAt(filaActual,8).toString();
                        String aPaternoC = jTableCierres.getValueAt(filaActual,9).toString();
                        String aMaternoC = jTableCierres.getValueAt(filaActual,10).toString();
                        VJFrameVentanaCapturarModificaciones.jTextField8.setText(nombreC + " " + aPaternoC + " " + aMaternoC); // COPILOTO - NOMBRE COMPLETO
                        VJFrameVentanaCapturarModificaciones.jLabel38.setText(jTableCierres.getValueAt(filaActual,11).toString()); // COPILOTO - TIPO LICENCIA
                        VJFrameVentanaCapturarModificaciones.botonBorrar.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.copilotoPlanesOriginal = null;
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.copilotoPlanesOriginal = null;
                }
                captura.jTextFieldPersonasPasajeros.setText(jTableCierres.getValueAt(filaActual,18).toString()); // TOTAL PERSONAS A BORDO
                VJFrameVentanaCapturarModificaciones.numeroPPOriginal = jTableCierres.getValueAt(filaActual,18).toString();
                String fechaYHora = jTableCierres.getValueAt(filaActual,1).toString(); // FECHA CON HORA
                VJFrameVentanaCapturarModificaciones.fechaCompletaPlanesOriginal = fechaYHora + ":00";
                String fechaFormatoBarras = fechaYHora.substring(0,10);
                String fechaFormatoDiagonal = fechaFormatoBarras.replace("-","/");
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy/MM/dd");
                try {
                    captura.jDateFecha.setDate(formatoFecha.parse(fechaFormatoDiagonal)); // FECHA
                    VJFrameVentanaCapturarModificaciones.fechaPlanesOriginal = fechaFormatoDiagonal;
                    captura.jLabel2.setForeground(Color.BLACK);
                } catch (Exception e) {}
                String horaMinutos [] = fechaYHora.substring(12).split(":");
                captura.jSpinnerHorasUTC.setValue(Integer.parseInt(horaMinutos[0]));
                captura.jSpinnerMinutosUTC.setValue(Integer.parseInt(horaMinutos[1]));
                VJFrameVentanaCapturarModificaciones.horasPlanesOriginal = horaMinutos[0];
                VJFrameVentanaCapturarModificaciones.minutosPlanesOriginal = horaMinutos[1];    
                String multiplesRenglones = "";
                for (int i = filaActual; i < filaActual + filasSeleccionadas; i++) {
                    String renglon = (String) jTableCierres.getValueAt(i,17);
                    if (renglon != null && !renglon.equals("")) {
                        multiplesRenglones += renglon;
                    }
                    if (i != filaActual + filasSeleccionadas - 1 && renglon != null && !renglon.equals("")) {
                       multiplesRenglones += "\n";
                    }
                }
                captura.jTextArea1.setText(multiplesRenglones); // OTROS DATOS
                VJFrameVentanaCapturarModificaciones.multiplesRenglonesOriginal = multiplesRenglones;
                int totalPasajeros = 0;
                int filaDondeInicia = filaActual;
                String idPasajero = (String) jTableCierres.getValueAt(filaDondeInicia,19);
                while (idPasajero != null && !idPasajero.equals("") && filaDondeInicia < filaActual + filasSeleccionadas) {
                    idPasajero = (String) jTableCierres.getValueAt(filaDondeInicia,19);
                    totalPasajeros++;
                    filaDondeInicia++;
                }
                if (0 < totalPasajeros) {
                    String listaOriginalPasajeros [][] = new String [totalPasajeros][6];
                    String numeroPasajeros [][] = new String [totalPasajeros][6];
                    for (int i = 0; i < totalPasajeros; i++) {
                        for (int j = 0; j < 6; j++) {
                            if (j != 5) {
                                listaOriginalPasajeros[i][j] = jTableCierres.getValueAt(filaActual + i,19 + j).toString();
                                numeroPasajeros[i][j] = jTableCierres.getValueAt(filaActual + i,19 + j).toString();
                            } else {
                                listaOriginalPasajeros[i][j] = "";
                                numeroPasajeros[i][j] = "";
                            }
                        }
                    }
                    for (int k = 0; k < totalPasajeros; k++) {
                        numeroPasajeros[k][0] = numeroPasajeros[k][0].substring(12);
                    }
                    VJFrameVentanaCapturarModificaciones.listaPasajerosOriginal = listaOriginalPasajeros;
                    VJFrameVentanaCapturarModificaciones.numeracionPasajerosOriginal = numeroPasajeros;
                    VJFrameVentanaCapturarModificaciones.listaPasajeros = numeroPasajeros; // LISTA DE PASAJEROS
                    VJFrameVentanaCapturarModificaciones.jLabel19.setEnabled(true);
                } else {
                    VJFrameVentanaCapturarModificaciones.listaPasajerosOriginal = null;
                    VJFrameVentanaCapturarModificaciones.numeracionPasajerosOriginal = null;
                    VJFrameVentanaCapturarModificaciones.listaPasajeros = null; // LISTA DE PASAJEROS
                    VJFrameVentanaCapturarModificaciones.jLabel19.setEnabled(false);
                }

                String rutaPDF = (String) jTableCierres.getValueAt(filaActual,24);
                if (rutaPDF != null) {
                    if (!rutaPDF.equals("")) {
                        VJFrameVentanaCapturarModificaciones.rutaPDFPlanesOriginal = rutaPDF;
                        VJFrameVentanaCapturarModificaciones.jLabel4.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.rutaPDFPlanesOriginal = null;
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.rutaPDFPlanesOriginal = null;
                }
                captura.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this,mensajeNoSeleccionado,"SELECCIÓN",JOptionPane.INFORMATION_MESSAGE);
            }
        } else if (jTabbedPane1.getSelectedIndex() == 2) {
            if (jTableMS.getSelectedRow() != -1) {
                captura.jTabbedPane1.setEnabledAt(0,false);
                captura.jTabbedPane1.setEnabledAt(1,true);
                captura.jTabbedPane1.setSelectedIndex(1);
                captura.jComboBoxOperacionManifiestos.setSelectedIndex(0);
                captura.jComboBoxOperacionManifiestos.setEnabled(false);
                filaActual = jTableMS.getSelectedRow();
                filasSeleccionadas = jTablePlanes.getSelectedRowCount();
                VJFrameVentanaCapturarModificaciones.companiaMOriginal = jTableMS.getValueAt(filaActual,5).toString();
                VJFrameVentanaCapturarModificaciones.jTextField11.setText(jTableMS.getValueAt(filaActual,6).toString()); // COMPAÑIA - NOMBRE
                VJFrameVentanaCapturarModificaciones.jTextField12.setText(jTableMS.getValueAt(filaActual,5).toString()); // COMPAÑIA - SIGLAS  
                VJFrameVentanaCapturarModificaciones.aeronaveMOriginal = jTableMS.getValueAt(filaActual,7).toString();
                VJFrameVentanaCapturarModificaciones.jTextField13.setText(jTableMS.getValueAt(filaActual,8).toString()); // AERONAVE - EQUIPO
                VJFrameVentanaCapturarModificaciones.jTextField14.setText(jTableMS.getValueAt(filaActual,7).toString()); // AERONAVE - MATRICULA
                VJFrameVentanaCapturarModificaciones.noVueloMOriginal = jTableMS.getValueAt(filaActual,4).toString();
                captura.jTextField15.setText(jTableMS.getValueAt(filaActual,4).toString()); // NUMERO DE VUELO
                VJFrameVentanaCapturarModificaciones.aeropuertoMOriginal = jTableMS.getValueAt(filaActual,30).toString();
                VJFrameVentanaCapturarModificaciones.jTextField16.setText(jTableMS.getValueAt(filaActual,32).toString()); // AEROPUERTO - NOMBRE
                VJFrameVentanaCapturarModificaciones.jTextField18.setText(jTableMS.getValueAt(filaActual,30).toString()); // AEROPUERTO - IATA
                VJFrameVentanaCapturarModificaciones.comandanteMOriginal = jTableMS.getValueAt(filaActual,9).toString();
                VJFrameVentanaCapturarModificaciones.jTextField19.setText(jTableMS.getValueAt(filaActual,9).toString()); // COMANDANTE - LICENCIA
                String nombreC = jTableMS.getValueAt(filaActual,10).toString();
                String aPaternoC = jTableMS.getValueAt(filaActual,11).toString();
                String aMaternoC = jTableMS.getValueAt(filaActual,12).toString();
                VJFrameVentanaCapturarModificaciones.jTextField17.setText(nombreC + " " + aPaternoC + " " + aMaternoC); // COMANDANTE - NOMBRE COMPLETO
                VJFrameVentanaCapturarModificaciones.jLabel18.setText(jTableMS.getValueAt(filaActual,13).toString()); // COMANDANTE - TIPO LICENCIA
                VJFrameVentanaCapturarModificaciones.primerMOriginal = jTableMS.getValueAt(filaActual,14).toString();
                VJFrameVentanaCapturarModificaciones.jTextField20.setText(jTableMS.getValueAt(filaActual,14).toString()); // PRIMER OFICIAL - LICENCIA
                String nombreP = jTableMS.getValueAt(filaActual,15).toString();
                String aPaternoP = jTableMS.getValueAt(filaActual,16).toString();
                String aMaternoP = jTableMS.getValueAt(filaActual,17).toString();
                VJFrameVentanaCapturarModificaciones.jTextField21.setText(nombreP + " " + aPaternoP + " " + aMaternoP); // PRIMER OFICIAL - NOMBRE COMPLETO
                VJFrameVentanaCapturarModificaciones.jLabel53.setText(jTableMS.getValueAt(filaActual,18).toString()); // PRIMER OFICIAL - TIPO LICENCIA
                String segundo = (String) jTableMS.getValueAt(filaActual,19); // SEGUNDO OFICIAL - LICENCIA
                if (segundo != null) {
                    if (!segundo.equals("")) {
                        VJFrameVentanaCapturarModificaciones.segundoMOriginal = segundo;
                        VJFrameVentanaCapturarModificaciones.jTextField23.setText(segundo); // SEGUNDO OFICIAL - LICENCIA
                        String nombreS = jTableMS.getValueAt(filaActual,20).toString();
                        String aPaternoS = jTableMS.getValueAt(filaActual,21).toString();
                        String aMaternoS = jTableMS.getValueAt(filaActual,22).toString();
                        VJFrameVentanaCapturarModificaciones.jTextField22.setText(nombreS + " " + aPaternoS + " " + aMaternoS); // SEGUNDO OFICIAL - NOMBRE COMPLETO
                        VJFrameVentanaCapturarModificaciones.jLabel51.setText(jTableMS.getValueAt(filaActual,23).toString()); // SEGUNDO OFICIAL - TIPO LICENCIA
                        VJFrameVentanaCapturarModificaciones.botonBorrarSegundo.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.segundoMOriginal = null;
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.segundoMOriginal = null;
                }
                String tercero = (String) jTableMS.getValueAt(filaActual,24); // TERCER OFICIAL - LICENCIA
                if (tercero != null) {
                    if (!tercero.equals("")) {
                        VJFrameVentanaCapturarModificaciones.terceroMOriginal = tercero;
                        VJFrameVentanaCapturarModificaciones.jTextField25.setText(tercero); // TERCER OFICIAL - LICENCIA
                        String nombreS = jTableMS.getValueAt(filaActual,25).toString();
                        String aPaternoS = jTableMS.getValueAt(filaActual,26).toString();
                        String aMaternoS = jTableMS.getValueAt(filaActual,27).toString();
                        VJFrameVentanaCapturarModificaciones.jTextField24.setText(nombreS + " " + aPaternoS + " " + aMaternoS); // TERCER OFICIAL - NOMBRE COMPLETO
                        VJFrameVentanaCapturarModificaciones.jLabel52.setText(jTableMS.getValueAt(filaActual,28).toString()); // TERCER OFICIAL - TIPO LICENCIA
                        VJFrameVentanaCapturarModificaciones.botonBorrarTercero.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.terceroMOriginal = null;
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.terceroMOriginal = null;
                }
                String sobrecargos = (String) jTableMS.getValueAt(filaActual,29); // LISTA SOBRECARGOS
                if (sobrecargos != null) {
                    if (!sobrecargos.equals("")) {
                        VJFrameVentanaCapturarModificaciones.listaSobrecargosOriginal = sobrecargos;
                        VJFrameVentanaCapturarModificaciones.listaSobrecargos = sobrecargos;
                        VJFrameVentanaCapturarModificaciones.jLabel48.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.listaSobrecargosOriginal = null;
                        VJFrameVentanaCapturarModificaciones.listaSobrecargos = null;
                        VJFrameVentanaCapturarModificaciones.jLabel48.setEnabled(false);
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.listaSobrecargosOriginal = null;
                    VJFrameVentanaCapturarModificaciones.listaSobrecargos = null;
                    VJFrameVentanaCapturarModificaciones.jLabel48.setEnabled(false);
                }
                String [] embarque = {
                    (String) jTableMS.getValueAt(filaActual,33),
                    (String) jTableMS.getValueAt(filaActual,34),
                    (String) jTableMS.getValueAt(filaActual,35),
                    (String) jTableMS.getValueAt(filaActual,36),
                    (String) jTableMS.getValueAt(filaActual,37),
                    (String) jTableMS.getValueAt(filaActual,38),
                    (String) jTableMS.getValueAt(filaActual,39),
                    (String) jTableMS.getValueAt(filaActual,40),
                    (String) jTableMS.getValueAt(filaActual,41),
                    (String) jTableMS.getValueAt(filaActual,42),
                    (String) jTableMS.getValueAt(filaActual,43)
                };
                VJFrameVentanaCapturarModificaciones.embarqueOriginal = embarque;
                VJFrameVentanaCapturarModificaciones.embarque = embarque;
                VJFrameVentanaCapturarModificaciones.jLabel40.setEnabled(true);
                String rutaPDF = (String) jTableMS.getValueAt(filaActual,44);
                if (rutaPDF != null) {
                    if (!rutaPDF.equals("")) {
                        VJFrameVentanaCapturarModificaciones.rutaPDFMOriginal = rutaPDF; // PDF - RUTA
                        VJFrameVentanaCapturarModificaciones.jLabel39.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.rutaPDFMOriginal = null;
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.rutaPDFMOriginal = null;
                }
                String fecha = jTableMS.getValueAt(filaActual,1).toString(); // FECHA
                String horaItinerario = jTableMS.getValueAt(filaActual,2).toString(); // HORA ITINERARIO
                String horaReal = jTableMS.getValueAt(filaActual,3).toString(); // HORA REAL
                VJFrameVentanaCapturarModificaciones.fechaHoraMOriginal = fecha + " " + horaItinerario + ":00";
                String fechaFormatoDiagonal = fecha.replace("-","/");
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy/MM/dd");
                try {
                    captura.jDateChooser2.setDate(formatoFecha.parse(fechaFormatoDiagonal)); // FECHA
                    VJFrameVentanaCapturarModificaciones.fechaMOriginal = fechaFormatoDiagonal;
                    captura.jLabel21.setForeground(Color.BLACK);
                } catch (Exception e) {}
                String horaMinutos [] = horaItinerario.split(":");
                captura.jSpinnerHoraItinerario.setValue(Integer.parseInt(horaMinutos[0]));
                captura.jSpinnerMinutosItinerario.setValue(Integer.parseInt(horaMinutos[1]));
                VJFrameVentanaCapturarModificaciones.horaItinerarioMOriginal = horaMinutos[0];
                VJFrameVentanaCapturarModificaciones.minutosItinerarioMOriginal = horaMinutos[1];
                String horaMinutosReal [] = horaReal.split(":");
                captura.jSpinnerHoraReal.setValue(Integer.parseInt(horaMinutosReal[0]));
                captura.jSpinnerMinutosReal.setValue(Integer.parseInt(horaMinutosReal[1]));
                VJFrameVentanaCapturarModificaciones.horaRealMOriginal = horaMinutosReal[0];
                VJFrameVentanaCapturarModificaciones.minutosRealMOriginal = horaMinutosReal[1];
                captura.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this,mensajeNoSeleccionado,"SELECCIÓN",JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            if (jTableML.getSelectedRow() != -1) {
                captura.jTabbedPane1.setEnabledAt(0,false);
                captura.jTabbedPane1.setEnabledAt(1,true);
                captura.jTabbedPane1.setSelectedIndex(1);
                captura.jComboBoxOperacionManifiestos.setSelectedIndex(1);
                captura.jComboBoxOperacionManifiestos.setEnabled(false);
                filaActual = jTableML.getSelectedRow();
                filasSeleccionadas = jTablePlanes.getSelectedRowCount();
                VJFrameVentanaCapturarModificaciones.companiaMOriginal = jTableML.getValueAt(filaActual,5).toString();
                VJFrameVentanaCapturarModificaciones.jTextField11.setText(jTableML.getValueAt(filaActual,6).toString()); // COMPAÑIA - NOMBRE
                VJFrameVentanaCapturarModificaciones.jTextField12.setText(jTableML.getValueAt(filaActual,5).toString()); // COMPAÑIA - SIGLAS  
                VJFrameVentanaCapturarModificaciones.aeronaveMOriginal = jTableML.getValueAt(filaActual,7).toString();
                VJFrameVentanaCapturarModificaciones.jTextField13.setText(jTableML.getValueAt(filaActual,8).toString()); // AERONAVE - EQUIPO
                VJFrameVentanaCapturarModificaciones.jTextField14.setText(jTableML.getValueAt(filaActual,7).toString()); // AERONAVE - MATRICULA
                VJFrameVentanaCapturarModificaciones.noVueloMOriginal = jTableML.getValueAt(filaActual,4).toString();
                captura.jTextField15.setText(jTableML.getValueAt(filaActual,4).toString()); // NUMERO DE VUELO
                VJFrameVentanaCapturarModificaciones.aeropuertoMOriginal = jTableML.getValueAt(filaActual,30).toString();
                VJFrameVentanaCapturarModificaciones.jTextField16.setText(jTableML.getValueAt(filaActual,32).toString()); // AEROPUERTO - NOMBRE
                VJFrameVentanaCapturarModificaciones.jTextField18.setText(jTableML.getValueAt(filaActual,30).toString()); // AEROPUERTO - IATA
                VJFrameVentanaCapturarModificaciones.comandanteMOriginal = jTableML.getValueAt(filaActual,9).toString();
                VJFrameVentanaCapturarModificaciones.jTextField19.setText(jTableML.getValueAt(filaActual,9).toString()); // COMANDANTE - LICENCIA
                String nombreC = jTableML.getValueAt(filaActual,10).toString();
                String aPaternoC = jTableML.getValueAt(filaActual,11).toString();
                String aMaternoC = jTableML.getValueAt(filaActual,12).toString();
                VJFrameVentanaCapturarModificaciones.jTextField17.setText(nombreC + " " + aPaternoC + " " + aMaternoC); // COMANDANTE - NOMBRE COMPLETO
                VJFrameVentanaCapturarModificaciones.jLabel18.setText(jTableML.getValueAt(filaActual,13).toString()); // COMANDANTE - TIPO LICENCIA
                VJFrameVentanaCapturarModificaciones.primerMOriginal = jTableML.getValueAt(filaActual,14).toString();
                VJFrameVentanaCapturarModificaciones.jTextField20.setText(jTableML.getValueAt(filaActual,14).toString()); // PRIMER OFICIAL - LICENCIA
                String nombreP = jTableML.getValueAt(filaActual,15).toString();
                String aPaternoP = jTableML.getValueAt(filaActual,16).toString();
                String aMaternoP = jTableML.getValueAt(filaActual,17).toString();
                VJFrameVentanaCapturarModificaciones.jTextField21.setText(nombreP + " " + aPaternoP + " " + aMaternoP); // PRIMER OFICIAL - NOMBRE COMPLETO
                VJFrameVentanaCapturarModificaciones.jLabel53.setText(jTableML.getValueAt(filaActual,18).toString()); // PRIMER OFICIAL - TIPO LICENCIA
                String segundo = (String) jTableML.getValueAt(filaActual,19); // SEGUNDO OFICIAL - LICENCIA
                if (segundo != null) {
                    if (!segundo.equals("")) {
                        VJFrameVentanaCapturarModificaciones.segundoMOriginal = segundo;
                        VJFrameVentanaCapturarModificaciones.jTextField23.setText(segundo); // SEGUNDO OFICIAL - LICENCIA
                        String nombreS = jTableML.getValueAt(filaActual,20).toString();
                        String aPaternoS = jTableML.getValueAt(filaActual,21).toString();
                        String aMaternoS = jTableML.getValueAt(filaActual,22).toString();
                        VJFrameVentanaCapturarModificaciones.jTextField22.setText(nombreS + " " + aPaternoS + " " + aMaternoS); // SEGUNDO OFICIAL - NOMBRE COMPLETO
                        VJFrameVentanaCapturarModificaciones.jLabel51.setText(jTableML.getValueAt(filaActual,23).toString()); // SEGUNDO OFICIAL - TIPO LICENCIA
                        VJFrameVentanaCapturarModificaciones.botonBorrarSegundo.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.segundoMOriginal = null;
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.segundoMOriginal = null;
                }
                String tercero = (String) jTableML.getValueAt(filaActual,24); // TERCER OFICIAL - LICENCIA
                if (tercero != null) {
                    if (!tercero.equals("")) {
                        VJFrameVentanaCapturarModificaciones.terceroMOriginal = tercero;
                        VJFrameVentanaCapturarModificaciones.jTextField25.setText(tercero); // TERCER OFICIAL - LICENCIA
                        String nombreS = jTableML.getValueAt(filaActual,25).toString();
                        String aPaternoS = jTableML.getValueAt(filaActual,26).toString();
                        String aMaternoS = jTableML.getValueAt(filaActual,27).toString();
                        VJFrameVentanaCapturarModificaciones.jTextField24.setText(nombreS + " " + aPaternoS + " " + aMaternoS); // TERCER OFICIAL - NOMBRE COMPLETO
                        VJFrameVentanaCapturarModificaciones.jLabel52.setText(jTableML.getValueAt(filaActual,28).toString()); // TERCER OFICIAL - TIPO LICENCIA
                        VJFrameVentanaCapturarModificaciones.botonBorrarTercero.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.terceroMOriginal = null;
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.terceroMOriginal = null;
                }
                String sobrecargos = (String) jTableML.getValueAt(filaActual,29); // LISTA SOBRECARGOS
                if (sobrecargos != null) {
                    if (!sobrecargos.equals("")) {
                        VJFrameVentanaCapturarModificaciones.listaSobrecargosOriginal = sobrecargos;
                        VJFrameVentanaCapturarModificaciones.listaSobrecargos = sobrecargos;
                        VJFrameVentanaCapturarModificaciones.jLabel48.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.listaSobrecargosOriginal = null;
                        VJFrameVentanaCapturarModificaciones.listaSobrecargos = null;
                        VJFrameVentanaCapturarModificaciones.jLabel48.setEnabled(false);
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.listaSobrecargosOriginal = null;
                    VJFrameVentanaCapturarModificaciones.listaSobrecargos = null;
                    VJFrameVentanaCapturarModificaciones.jLabel48.setEnabled(false);
                }
                String [] desembarque = {
                    (String) jTableML.getValueAt(filaActual,33),
                    (String) jTableML.getValueAt(filaActual,34),
                    (String) jTableML.getValueAt(filaActual,35),
                    (String) jTableML.getValueAt(filaActual,36),
                    (String) jTableML.getValueAt(filaActual,37)
                };
                VJFrameVentanaCapturarModificaciones.desembarqueOriginal = desembarque;
                VJFrameVentanaCapturarModificaciones.desembarque = desembarque;
                VJFrameVentanaCapturarModificaciones.jLabel40.setEnabled(true);
                String rutaPDF = (String) jTableML.getValueAt(filaActual,38);
                if (rutaPDF != null) {
                    if (!rutaPDF.equals("")) {
                        VJFrameVentanaCapturarModificaciones.rutaPDFMOriginal = rutaPDF; // PDF - RUTA
                        VJFrameVentanaCapturarModificaciones.jLabel39.setEnabled(true);
                    } else {
                        VJFrameVentanaCapturarModificaciones.rutaPDFMOriginal = null;
                    }
                } else {
                    VJFrameVentanaCapturarModificaciones.rutaPDFMOriginal = null;
                }
                String fecha = jTableML.getValueAt(filaActual,1).toString(); // FECHA
                String horaItinerario = jTableML.getValueAt(filaActual,2).toString(); // HORA ITINERARIO
                String horaReal = jTableML.getValueAt(filaActual,3).toString(); // HORA REAL
                VJFrameVentanaCapturarModificaciones.fechaHoraMOriginal = fecha + " " + horaItinerario + ":00";
                String fechaFormatoDiagonal = fecha.replace("-","/");
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy/MM/dd");
                try {
                    captura.jDateChooser2.setDate(formatoFecha.parse(fechaFormatoDiagonal)); // FECHA
                    VJFrameVentanaCapturarModificaciones.fechaMOriginal = fechaFormatoDiagonal;
                    captura.jLabel21.setForeground(Color.BLACK);
                } catch (Exception e) {}
                String horaMinutos [] = horaItinerario.split(":");
                captura.jSpinnerHoraItinerario.setValue(Integer.parseInt(horaMinutos[0]));
                captura.jSpinnerMinutosItinerario.setValue(Integer.parseInt(horaMinutos[1]));
                VJFrameVentanaCapturarModificaciones.horaItinerarioMOriginal = horaMinutos[0];
                VJFrameVentanaCapturarModificaciones.minutosItinerarioMOriginal = horaMinutos[1];
                String horaMinutosReal [] = horaReal.split(":");
                captura.jSpinnerHoraReal.setValue(Integer.parseInt(horaMinutosReal[0]));
                captura.jSpinnerMinutosReal.setValue(Integer.parseInt(horaMinutosReal[1]));
                VJFrameVentanaCapturarModificaciones.horaRealMOriginal = horaMinutosReal[0];
                VJFrameVentanaCapturarModificaciones.minutosRealMOriginal = horaMinutosReal[1];
                captura.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this,mensajeNoSeleccionado,"SELECCIÓN",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UJFrameVentanaModificaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscarCierres;
    private javax.swing.JButton botonBuscarML;
    private javax.swing.JButton botonBuscarMS;
    private javax.swing.JButton botonBuscarPlanes;
    private javax.swing.JButton botonCriteriosCierres;
    private javax.swing.JButton botonCriteriosML;
    private javax.swing.JButton botonCriteriosMS;
    private javax.swing.JButton botonCriteriosPlanes;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton16;
    public static javax.swing.JLabel jLabel21;
    public static javax.swing.JLabel jLabel22;
    public static javax.swing.JLabel jLabel23;
    public static javax.swing.JLabel jLabel24;
    public static javax.swing.JLabel jLabel25;
    public static javax.swing.JLabel jLabel26;
    public static javax.swing.JLabel jLabel27;
    public static javax.swing.JLabel jLabel28;
    public static javax.swing.JLabel jLabel29;
    public static javax.swing.JLabel jLabel30;
    public static javax.swing.JLabel jLabel31;
    public static javax.swing.JLabel jLabel32;
    public static javax.swing.JLabel jLabel33;
    public static javax.swing.JLabel jLabel34;
    public static javax.swing.JLabel jLabel35;
    public static javax.swing.JLabel jLabel36;
    public static javax.swing.JLabel jLabel37;
    public static javax.swing.JLabel jLabel38;
    public static javax.swing.JLabel jLabel39;
    public static javax.swing.JLabel jLabel40;
    public static javax.swing.JLabel jLabel41;
    public static javax.swing.JLabel jLabel42;
    public static javax.swing.JLabel jLabel43;
    public static javax.swing.JLabel jLabel44;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableCierres;
    private javax.swing.JTable jTableML;
    private javax.swing.JTable jTableMS;
    private javax.swing.JTable jTablePlanes;
    // End of variables declaration//GEN-END:variables
    
    private String pw;
    
    int filaActual;
    int filasSeleccionadas;
    
    private final String mensajeNoSeleccionado = "PRIMERO HAGA CLIC IZQUIERDO SOBRE EL ELEMENTO DESEADO DE LA TABLA";
    
    static String criteriosPlanes = null;
    static String criteriosCierres = null;
    static String criteriosManifiestosSalida = null;
    static String criteriosManifiestosLlegada = null;
    
    static int rBFechaMSalida = 0;
    static String fecha1MSalida = null;
    static String fecha2MSalida = null;
    static String fecha3MSalida = null;
    static int rBPersonalMSalida = 0;
    static String licenciaMSalida = null;
    static int rBAeronaveMSalida = 0;
    static String aeronaveMSalida = null;
    static int rBDestinoMSalida = 0;
    static String destinoMSalida = null;
    static String aerolineaMSalida = null;
    static String vueloMSalida = null;
    static boolean primeraVezMSalida = true;
    
    private void limpiarCriteriosManifiestosSalida () {
        jLabel31.setText("FECHA");
        jLabel31.setEnabled(false);
        jLabel32.setText("PERSONAL DE VUELO");
        jLabel32.setEnabled(false);
        jLabel33.setText("COMPAÑÍA");
        jLabel33.setEnabled(false);
        jLabel34.setText("AERONAVE");
        jLabel34.setEnabled(false);
        jLabel35.setText("DESTINO");
        jLabel35.setEnabled(false);
        jLabel36.setText("NO. DE VUELO");
        jLabel36.setEnabled(false);
        criteriosManifiestosSalida = null;
    }
    
    static int rBFechaMLlegada = 0;
    static String fecha1MLlegada = null;
    static String fecha2MLlegada = null;
    static String fecha3MLlegada = null;
    static int rBPersonalMLlegada = 0;
    static String licenciaMLlegada = null;
    static int rBAeronaveMLlegada = 0;
    static String aeronaveMLlegada = null;
    static int rBOrigenMLlegada = 0;
    static String origenMLlegada = null;
    static String aerolineaMLlegada = null;
    static String vueloMLlegada = null;
    static boolean primeraVezMLlegada = true;
    
    private void limpiarCriteriosManifiestosLlegada () {
        jLabel37.setText("FECHA");
        jLabel37.setEnabled(false);
        jLabel38.setText("PERSONAL DE VUELO");
        jLabel38.setEnabled(false);
        jLabel39.setText("COMPAÑÍA");
        jLabel39.setEnabled(false);
        jLabel40.setText("AERONAVE");
        jLabel40.setEnabled(false);
        jLabel41.setText("ORIGEN");
        jLabel41.setEnabled(false);
        jLabel42.setText("NO. DE VUELO");
        jLabel42.setEnabled(false);
        criteriosManifiestosLlegada = null;
    }
    
    static int rBFechaPlanes = 0;
    static String fecha1Planes = null;
    static String fecha2Planes = null;
    static String fecha3Planes = null;
    static int cBPasajeros1Planes = 0;
    static String pasajero1Planes = null;
    static int cBPasajeros2Planes = 0;
    static String pasajero2Planes = null;
    static int cBPasajeros3Planes = 0;
    static String pasajero3Planes = null;
    static int rBPersonalPlanes = 0;
    /////
    static int cBPersonal1Planes = 0;
    static String personal1Planes = null;
    static int cBPersonal2Planes = 0;
    static String personal2Planes = null;
    static int cBPersonal3Planes = 0;
    static String personal3Planes = null;
    static int rBPersonalInfoPlanes = 0;
    ////
    static String licenciaPlanes = null;
    static int rBAeronavePlanes = 0;
    static String aeronavePlanes = null;
    static int rBAeropuertoPlanes = 0;
    static String aeropuertoPlanes = null;
    static boolean primeraVezPlanes = true;
    
    private void limpiarCriteriosPlanes () {
        jLabel21.setText("FECHA");
        jLabel21.setEnabled(false);
        jLabel22.setText("PERSONAL DE VUELO");
        jLabel22.setEnabled(false);
        jLabel23.setText("PASAJERO");
        jLabel23.setEnabled(false);
        jLabel24.setText("AERONAVE");
        jLabel24.setEnabled(false);
        jLabel25.setText("AEROPUERTO/AERÓDROMO DE LLEGADA");
        jLabel25.setEnabled(false);
        jLabel43.setText("PERSONAL DE VUELO (NOMBRE)");
        jLabel43.setEnabled(false);
        criteriosPlanes = null;
    }
    
    static int rBFechaCierres = 0;
    static String fecha1Cierres = null;
    static String fecha2Cierres = null;
    static String fecha3Cierres = null;
    static int cBPasajeros1Cierres = 0;
    static String pasajero1Cierres = null;
    static int cBPasajeros2Cierres = 0;
    static String pasajero2Cierres = null;
    static int cBPasajeros3Cierres = 0;
    static String pasajero3Cierres = null;
    static int rBPersonalCierres = 0;
    /////
    static int cBPersonal1Cierres = 0;
    static String personal1Cierres = null;
    static int cBPersonal2Cierres = 0;
    static String personal2Cierres = null;
    static int cBPersonal3Cierres = 0;
    static String personal3Cierres = null;
    static int rBPersonalInfoCierres = 0;
    ////
    static String licenciaCierres = null;
    static int rBAeronaveCierres = 0;
    static String aeronaveCierres = null;
    static int rBAeropuertoCierres = 0;
    static String aeropuertoCierres = null;
    static boolean primeraVezCierres = true;
    
    private void limpiarCriteriosCierres () {
        jLabel26.setText("FECHA");
        jLabel26.setEnabled(false);
        jLabel27.setText("PERSONAL DE VUELO");
        jLabel27.setEnabled(false);
        jLabel28.setText("PASAJERO");
        jLabel28.setEnabled(false);
        jLabel29.setText("AERONAVE");
        jLabel29.setEnabled(false);
        jLabel30.setText("AEROPUERTO/AERÓDROMO DE SALIDA");
        jLabel30.setEnabled(false);
        jLabel44.setText("PERSONAL DE VUELO (NOMBRE)");
        jLabel44.setEnabled(false);
        criteriosCierres = null;
    }
    
    public void volverAlInicio() {
        this.setVisible(false);
        try {
            Thread.sleep (500);
        } catch (Exception e) {
        }
        AAJFrameVentanaInicio ventanaInicio = new AAJFrameVentanaInicio();
        ventanaInicio.setVisible(true);
        this.dispose();
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
        getImage(ClassLoader.getSystemResource("Necesarios/iconoP.png"));
        return retValue;
    }
    
    public void setP(String ll) {
        pw = ll;
    }
}
