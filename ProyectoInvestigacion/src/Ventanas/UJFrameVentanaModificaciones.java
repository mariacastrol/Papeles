/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.ConexionMysql;
import Clases.FuncionesGenerales;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ADOLFO
 */
public class UJFrameVentanaModificaciones extends javax.swing.JFrame {

    /**
     * Creates new form JFrameVentanaConsultas
     */
    public UJFrameVentanaModificaciones() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePlanes = new javax.swing.JTable();
        botonBuscarPlanes = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        botonCriteriosPlanes = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCierres = new javax.swing.JTable();
        botonBuscarCierres = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        botonCriteriosCierres = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableMS = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableML = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONSULTAS");
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(1000, 650));
        setResizable(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTablePlanes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTablePlanes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTablePlanes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePlanesMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTablePlanesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePlanes);

        botonBuscarPlanes.setText("BUSCAR");
        botonBuscarPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarPlanesActionPerformed(evt);
            }
        });

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        botonCriteriosPlanes.setText("ESTABLECER");
        botonCriteriosPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriteriosPlanesActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel21.setText("FECHA");
        jLabel21.setEnabled(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel22.setText("PERSONAL DE VUELO");
        jLabel22.setEnabled(false);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel23.setText("PASAJERO");
        jLabel23.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel24.setText("AERONAVE");
        jLabel24.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel25.setText("AEROPUERTO/AERÓDROMO DE LLEGADA");
        jLabel25.setEnabled(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCriteriosPlanes)
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCriteriosPlanes)
                    .addComponent(jLabel21)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addContainerGap())
        );

        jButton12.setText("LIMPIAR");
        jButton12.setEnabled(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1043, Short.MAX_VALUE)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton12)
                        .addGap(18, 18, 18)
                        .addComponent(botonBuscarPlanes)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonBuscarPlanes)
                    .addComponent(jButton12))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("PLANES", jPanel1);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableCierres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableCierres.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableCierres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCierresMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableCierresMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCierres);

        botonBuscarCierres.setText("BUSCAR");
        botonBuscarCierres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarCierresActionPerformed(evt);
            }
        });

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        botonCriteriosCierres.setText("ESTABLECER");
        botonCriteriosCierres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCriteriosCierresActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel26.setText("FECHA");
        jLabel26.setEnabled(false);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel27.setText("PERSONAL DE VUELO");
        jLabel27.setEnabled(false);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel28.setText("PASAJERO");
        jLabel28.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel29.setText("AERONAVE");
        jLabel29.setEnabled(false);

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel30.setText("AEROPUERTO/AERÓDROMO DE SALIDA");
        jLabel30.setEnabled(false);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(botonCriteriosCierres)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCriteriosCierres)
                    .addComponent(jLabel26)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addContainerGap())
        );

        jButton11.setText("LIMPIAR");
        jButton11.setEnabled(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton11)
                        .addGap(18, 18, 18)
                        .addComponent(botonBuscarCierres))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1043, Short.MAX_VALUE)
                            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(10, 10, 10))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonBuscarCierres)
                    .addComponent(jButton11))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("CIERRES DE PLANES", jPanel2);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableMS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableMS.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableMS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMSMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableMSMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTableMS);

        jButton6.setText("BUSCAR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        jButton13.setText("ESTABLECER");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel31.setText("FECHA");
        jLabel31.setEnabled(false);

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel32.setText("PERSONAL DE VUELO");
        jLabel32.setEnabled(false);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel33.setText("COMPAÑÍA");
        jLabel33.setEnabled(false);

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel34.setText("AERONAVE");
        jLabel34.setEnabled(false);

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel35.setText("DESTINO");
        jLabel35.setEnabled(false);

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel36.setText("NO. DE VUELO");
        jLabel36.setEnabled(false);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton13)
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jLabel31)
                    .addComponent(jLabel34)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel35))
                .addContainerGap())
        );

        jButton14.setText("LIMPIAR");
        jButton14.setEnabled(false);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1043, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton14)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton14))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("MANIFIESTOS DE SALIDA", jPanel3);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableML.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableML.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableML.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMLMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableMLMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTableML);

        jButton8.setText("BUSCAR");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("CRITERIOS DE BUSQUEDA"));

        jButton15.setText("ESTABLECER");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel37.setText("FECHA");
        jLabel37.setEnabled(false);

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel38.setText("PERSONAL DE VUELO");
        jLabel38.setEnabled(false);

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel39.setText("COMPAÑÍA");
        jLabel39.setEnabled(false);

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel40.setText("AERONAVE");
        jLabel40.setEnabled(false);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel41.setText("ORIGEN");
        jLabel41.setEnabled(false);

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel42.setText("NO. DE VUELO");
        jLabel42.setEnabled(false);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton15)
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton15)
                    .addComponent(jLabel37)
                    .addComponent(jLabel40)
                    .addComponent(jLabel42))
                .addGap(10, 10, 10)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(jLabel41))
                .addContainerGap())
        );

        jButton16.setText("LIMPIAR");
        jButton16.setEnabled(false);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jButton16)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1043, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton16))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("MANIFIESTOS DE LLEGADA", jPanel4);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1092, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonBuscarPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarPlanesActionPerformed
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "APERTURAS_DE_VUELO.fecha_hora, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
        preconsulta += "PILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - LICENCIA";
        preconsulta += "PILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - NOMBRE(S)";
        preconsulta += "PILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A PATERNO";
        preconsulta += "PILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A MATERNO";
        preconsulta += "PILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - T LICENCIA";
        preconsulta += "COPILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - LICENCIA";
        preconsulta += "COPILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - NOMBRE(S)";
        preconsulta += "COPILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A PATERNO";
        preconsulta += "COPILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A MATERNO";
        preconsulta += "COPILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - T LICENCIA";
        preconsulta += "AEROPUERTOS_PLANES.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_PLANES.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "AERONAVES_PLANES.identificacion_aeronave, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_PLANES.tipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - TIPO";
        preconsulta += "APERTURAS_DE_VUELO.otros_datos, ";
            nombresColumnas[columnas][1] = "variosRenglones";
            nombresColumnas[columnas++][0] = "OTROS DATOS";
        preconsulta += "APERTURAS_DE_VUELO.no_personas_a_bordo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PERSONAS A BORDO";
        preconsulta += "PASAJEROS_APERTURA.nombre, ";
            nombresColumnas[columnas][1] = "pasajeroN";
            nombresColumnas[columnas++][0] = "PASAJERO - NOMBRE(S)";
        preconsulta += "PASAJEROS_APERTURA.apellido_paterno, ";
            nombresColumnas[columnas][1] = "pasajeroAP";
            nombresColumnas[columnas++][0] = "PASAJERO - A PATERNO";
        preconsulta += "PASAJEROS_APERTURA.apellido_materno, ";
            nombresColumnas[columnas][1] = "pasajeroAM";
            nombresColumnas[columnas++][0] = "PASAJERO - A MATERNO";
        preconsulta += "PASAJEROS_APERTURA.nacionalidad, ";
            nombresColumnas[columnas][1] = "pasajeroNa";
            nombresColumnas[columnas++][0] = "PASAJERO - NACIONALIDAD";
        preconsulta += "PDFS_APERTURA.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_APERTURA.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM APERTURAS_DE_VUELO\n";
        consulta += "LEFT JOIN PILOTOS_PLANES\n" +
            "ON PILOTOS_PLANES.no_licencia = APERTURAS_DE_VUELO.piloto\n";           
        consulta += "LEFT JOIN COPILOTOS_APERTURA\n" +
            "ON COPILOTOS_APERTURA.fecha = APERTURAS_DE_VUELO.fecha_hora\n" +
            "LEFT JOIN COPILOTOS_PLANES\n" +
            "ON COPILOTOS_APERTURA.copiloto = COPILOTOS_PLANES.no_licencia\n";           
        consulta += "LEFT JOIN AEROPUERTOS_PLANES\n" +
            "ON AEROPUERTOS_PLANES.codigo_oaci = APERTURAS_DE_VUELO.aeropuerto_destino\n";           
        consulta += "LEFT JOIN AERONAVES_PLANES\n" +
            "ON AERONAVES_PLANES.identificacion_aeronave = APERTURAS_DE_VUELO.aeronave\n";           
        consulta += "LEFT JOIN PASAJEROS_APERTURA\n" +
            "ON PASAJEROS_APERTURA.fecha = APERTURAS_DE_VUELO.fecha_hora\n";
        consulta += "LEFT JOIN RELACION_PDF_APERTURAS\n" +
            "ON RELACION_PDF_APERTURAS.fecha = APERTURAS_DE_VUELO.fecha_hora\n" +
            "LEFT JOIN PDFS_APERTURA\n" +
            "ON RELACION_PDF_APERTURAS.pdf = PDFS_APERTURA.ruta_pdf\n"; 
        if (criteriosPlanes != null) {
            consulta += criteriosPlanes;
        }
        ConexionMysql conexionConsultaPlan = new ConexionMysql();
        if (conexionConsultaPlan.conectarBD("localhost","root","l1u2c3h4o5e6d7u","baseaeropuerto")) {
            if (!conexionConsultaPlan.mostrarColumnasTablaMysqlCompuesta(jTablePlanes,consulta,nombresColumnas,columnas,2)) {
                JOptionPane.showMessageDialog(this,conexionConsultaPlan.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton12.setEnabled(true);
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaPlan.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonBuscarPlanesActionPerformed

    private void botonCriteriosPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriteriosPlanesActionPerformed
        limpiarCriteriosPlanes();
        BBJDialogBusquedaPlanes cPlanes = new BBJDialogBusquedaPlanes(this,true);
        if (primeraVezPlanes == false) {
            if (rBFechaPlanes != 0) {
                cPlanes.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaPlanes  == 11) {
                    try {
                        cPlanes.jDateChooser3.setDate(formatoFecha.parse(fecha1Planes));
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cPlanes.jRadioButton12.setSelected(true);
                    try {
                        cPlanes.jDateChooser2.setDate(formatoFecha.parse(fecha2Planes));
                        cPlanes.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cPlanes.jDateChooser1.setDate(formatoFecha.parse(fecha3Planes));
                        cPlanes.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (cBPasajeros1Planes != 0 || cBPasajeros2Planes != 0 || cBPasajeros3Planes != 0) {
                cPlanes.jCheckBox1.setSelected(true);
                if (cBPasajeros1Planes == 2) {
                    cPlanes.jCheckBox2.setSelected(true);
                    cPlanes.jTextField7.setText(pasajero1Planes);
                }
                if (cBPasajeros2Planes == 7) {
                    cPlanes.jCheckBox7.setSelected(true);
                    cPlanes.jTextField14.setText(pasajero2Planes);
                }
                if (cBPasajeros3Planes == 8) {
                    cPlanes.jCheckBox8.setSelected(true);
                    cPlanes.jTextField13.setText(pasajero3Planes);
                }
            }
            if (rBPersonalPlanes  != 0) {
                cPlanes.jCheckBox6.setSelected(true);
                if (rBPersonalPlanes == 15) {
                    cPlanes.jRadioButton15.setSelected(true);
                    cPlanes.jTextField15.setText(licenciaPlanes);
                } else  {
                    cPlanes.jRadioButton17.setSelected(true);
                    cPlanes.jTextField17.setText(licenciaPlanes);
                }
            }
            if (rBAeronavePlanes != 0) {
                cPlanes.jCheckBox3.setSelected(true);
                if (rBAeronavePlanes == 9) {
                    cPlanes.jRadioButton9.setSelected(true);
                    cPlanes.jTextField11.setText(aeronavePlanes);
                } else  {
                    cPlanes.jRadioButton10.setSelected(true);
                    cPlanes.jTextField12.setText(aeronavePlanes);
                }
            }
            if (rBAeropuertoPlanes != 0) {
                cPlanes.jCheckBox5.setSelected(true);
                if (rBAeropuertoPlanes == 18) {
                    cPlanes.jRadioButton18.setSelected(true);
                    cPlanes.jTextField20.setText(aeropuertoPlanes);
                } else  {
                    cPlanes.jRadioButton19.setSelected(true);
                    cPlanes.jTextField21.setText(aeropuertoPlanes);
                }
            }
        }
        cPlanes.setVisible(true);
    }//GEN-LAST:event_botonCriteriosPlanesActionPerformed

    private void botonCriteriosCierresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCriteriosCierresActionPerformed
        limpiarCriteriosCierres();
        BCJDialogBusquedaCierres cCierres = new BCJDialogBusquedaCierres(this,true);
        if (primeraVezCierres == false) {
            if (rBFechaCierres != 0) {
                cCierres.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaCierres  == 11) {
                    try {
                        cCierres.jDateChooser3.setDate(formatoFecha.parse(fecha1Cierres));
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cCierres.jRadioButton12.setSelected(true);
                    try {
                        cCierres.jDateChooser2.setDate(formatoFecha.parse(fecha2Cierres));
                        cCierres.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cCierres.jDateChooser1.setDate(formatoFecha.parse(fecha3Cierres));
                        cCierres.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (cBPasajeros1Cierres != 0 || cBPasajeros2Cierres != 0 || cBPasajeros3Cierres != 0) {
                cCierres.jCheckBox1.setSelected(true);
                if (cBPasajeros1Cierres == 2) {
                    cCierres.jCheckBox2.setSelected(true);
                    cCierres.jTextField7.setText(pasajero1Cierres);
                }
                if (cBPasajeros2Cierres == 7) {
                    cCierres.jCheckBox7.setSelected(true);
                    cCierres.jTextField14.setText(pasajero2Cierres);
                }
                if (cBPasajeros3Cierres == 8) {
                    cCierres.jCheckBox8.setSelected(true);
                    cCierres.jTextField13.setText(pasajero3Cierres);
                }
            }
            if (rBPersonalCierres  != 0) {
                cCierres.jCheckBox6.setSelected(true);
                if (rBPersonalCierres == 15) {
                    cCierres.jRadioButton15.setSelected(true);
                    cCierres.jTextField15.setText(licenciaCierres);
                } else  {
                    cCierres.jRadioButton17.setSelected(true);
                    cCierres.jTextField17.setText(licenciaCierres);
                }
            }
            if (rBAeronaveCierres != 0) {
                cCierres.jCheckBox3.setSelected(true);
                if (rBAeronaveCierres == 9) {
                    cCierres.jRadioButton9.setSelected(true);
                    cCierres.jTextField11.setText(aeronaveCierres);
                } else  {
                    cCierres.jRadioButton10.setSelected(true);
                    cCierres.jTextField12.setText(aeronaveCierres);
                }
            }
            if (rBAeropuertoCierres != 0) {
                cCierres.jCheckBox5.setSelected(true);
                if (rBAeropuertoCierres == 18) {
                    cCierres.jRadioButton18.setSelected(true);
                    cCierres.jTextField20.setText(aeropuertoCierres);
                } else  {
                    cCierres.jRadioButton19.setSelected(true);
                    cCierres.jTextField21.setText(aeropuertoCierres);
                }
            }
        }
        cCierres.setVisible(true);
    }//GEN-LAST:event_botonCriteriosCierresActionPerformed

    private void botonBuscarCierresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarCierresActionPerformed
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "CIERRES_DE_PLAN.fecha_hora, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
        preconsulta += "PILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - LICENCIA";
        preconsulta += "PILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - NOMBRE(S)";
        preconsulta += "PILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A PATERNO";
        preconsulta += "PILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - A MATERNO";
        preconsulta += "PILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PILOTO - T LICENCIA";
        preconsulta += "COPILOTOS_PLANES.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - LICENCIA";
        preconsulta += "COPILOTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - NOMBRE(S)";
        preconsulta += "COPILOTOS_PLANES.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A PATERNO";
        preconsulta += "COPILOTOS_PLANES.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - A MATERNO";
        preconsulta += "COPILOTOS_PLANES.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COPILOTO - T LICENCIA";
        preconsulta += "AEROPUERTOS_PLANES.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_PLANES.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_PLANES.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "AERONAVES_PLANES.identificacion_aeronave, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_PLANES.tipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - TIPO";
        preconsulta += "CIERRES_DE_PLAN.observaciones, ";
            nombresColumnas[columnas][1] = "variosRenglones";
            nombresColumnas[columnas++][0] = "OBSERVACIONES";
        preconsulta += "CIERRES_DE_PLAN.no_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "No. PASAJEROS";
        preconsulta += "PASAJEROS_CIERRE.nombre, ";
            nombresColumnas[columnas][1] = "pasajeroN";
            nombresColumnas[columnas++][0] = "PASAJERO - NOMBRE(S)";
        preconsulta += "PASAJEROS_CIERRE.apellido_paterno, ";
            nombresColumnas[columnas][1] = "pasajeroAP";
            nombresColumnas[columnas++][0] = "PASAJERO - A PATERNO";
        preconsulta += "PASAJEROS_CIERRE.apellido_materno, ";
            nombresColumnas[columnas][1] = "pasajeroAM";
            nombresColumnas[columnas++][0] = "PASAJERO - A MATERNO";
        preconsulta += "PASAJEROS_CIERRE.nacionalidad, ";
            nombresColumnas[columnas][1] = "pasajeroNa";
            nombresColumnas[columnas++][0] = "PASAJERO - NACIONALIDAD";
        preconsulta += "PDFS_CIERRE.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_CIERRE.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM CIERRES_DE_PLAN\n";
        consulta += "LEFT JOIN PILOTOS_PLANES\n" +
            "ON PILOTOS_PLANES.no_licencia = CIERRES_DE_PLAN.piloto\n";             
        consulta += "LEFT JOIN COPILOTOS_CIERRE\n" +
            "ON COPILOTOS_CIERRE.fecha = CIERRES_DE_PLAN.fecha_hora\n" +
            "LEFT JOIN COPILOTOS_PLANES\n" +
            "ON COPILOTOS_CIERRE.copiloto = COPILOTOS_PLANES.no_licencia\n";               
        consulta += "LEFT JOIN AEROPUERTOS_PLANES\n" +
            "ON AEROPUERTOS_PLANES.codigo_oaci = CIERRES_DE_PLAN.aeropuerto_origen\n";           
        consulta += "LEFT JOIN AERONAVES_PLANES\n" +
            "ON AERONAVES_PLANES.identificacion_aeronave = CIERRES_DE_PLAN.aeronave\n";           
        consulta += "LEFT JOIN PASAJEROS_CIERRE\n" +
            "ON PASAJEROS_CIERRE.fecha = CIERRES_DE_PLAN.fecha_hora\n";  
        consulta += "LEFT JOIN RELACION_PDF_CIERRES\n" +
            "ON RELACION_PDF_CIERRES.fecha = CIERRES_DE_PLAN.fecha_hora\n" +
            "LEFT JOIN PDFS_CIERRE\n" +
            "ON RELACION_PDF_CIERRES.pdf = PDFS_CIERRE.ruta_pdf\n"; 
        if (criteriosPlanes != null) {
            consulta += criteriosPlanes;
        }
        System.out.println(consulta);
        ConexionMysql conexionConsultaCierre = new ConexionMysql();
        if (conexionConsultaCierre.conectarBD("localhost","root","l1u2c3h4o5e6d7u","baseaeropuerto")) {
            if (!conexionConsultaCierre.mostrarColumnasTablaMysqlCompuesta(jTableCierres,consulta,nombresColumnas,columnas,2)) {
                JOptionPane.showMessageDialog(this,conexionConsultaCierre.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton11.setEnabled(true);
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaCierre.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonBuscarCierresActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        limpiarCriteriosManifiestosSalida();
        BDJDialogBusquedaManifiestos cManifiestosSalida = new BDJDialogBusquedaManifiestos(this,true);
        if (primeraVezMSalida == false) {
            if (rBFechaMSalida != 0) {
                cManifiestosSalida.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaMSalida == 11) {
                    try {
                        cManifiestosSalida.jDateChooser3.setDate(formatoFecha.parse(fecha1MSalida));
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cManifiestosSalida.jRadioButton12.setSelected(true);
                    try {
                        cManifiestosSalida.jDateChooser2.setDate(formatoFecha.parse(fecha2MSalida));
                        cManifiestosSalida.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cManifiestosSalida.jDateChooser1.setDate(formatoFecha.parse(fecha3MSalida));
                        cManifiestosSalida.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (rBPersonalMSalida != 0) {
                cManifiestosSalida.jCheckBox6.setSelected(true);
                if (rBPersonalMSalida == 15) {
                    cManifiestosSalida.jRadioButton15.setSelected(true);
                    cManifiestosSalida.jTextField15.setText(licenciaMSalida);
                } else if (rBPersonalMSalida == 17) {
                    cManifiestosSalida.jRadioButton17.setSelected(true);
                    cManifiestosSalida.jTextField17.setText(licenciaMSalida);
                } else if (rBPersonalMSalida == 16) {
                    cManifiestosSalida.jRadioButton16.setSelected(true);
                    cManifiestosSalida.jTextField16.setText(licenciaMSalida);
                } else {
                    cManifiestosSalida.jRadioButton20.setSelected(true);
                    cManifiestosSalida.jTextField18.setText(licenciaMSalida);
                }
            }
            if (rBAeronaveMSalida != 0) {
                cManifiestosSalida.jCheckBox3.setSelected(true);
                if (rBAeronaveMSalida == 9) {
                    cManifiestosSalida.jRadioButton9.setSelected(true);
                    cManifiestosSalida.jTextField11.setText(aeronaveMSalida);
                } else {
                    cManifiestosSalida.jRadioButton10.setSelected(true);
                    cManifiestosSalida.jTextField12.setText(aeronaveMSalida);
                }
            }
            if (rBDestinoMSalida != 0) {
                cManifiestosSalida.jCheckBox5.setSelected(true);
                if (rBDestinoMSalida == 18) {
                    cManifiestosSalida.jRadioButton18.setSelected(true);
                    cManifiestosSalida.jTextField20.setText(destinoMSalida);
                } else {
                    cManifiestosSalida.jRadioButton19.setSelected(true);
                    cManifiestosSalida.jTextField21.setText(destinoMSalida);
                }
            }
            if (aerolineaMSalida != null) {
                cManifiestosSalida.jCheckBox7.setSelected(true);
                cManifiestosSalida.jTextField1.setText(aerolineaMSalida);
            }
            if (vueloMSalida != null) {
                cManifiestosSalida.jCheckBox8.setSelected(true);
                cManifiestosSalida.jTextField2.setText(vueloMSalida);
            }
        }
        cManifiestosSalida.setVisible(true);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        limpiarCriteriosManifiestosLlegada();
        BEJDialogBusquedaManifiestosLlegada cManifiestosLlegada = new BEJDialogBusquedaManifiestosLlegada(this,true);
        if (primeraVezMLlegada == false) {
            if (rBFechaMLlegada != 0) {
                cManifiestosLlegada.jCheckBox4.setSelected(true);
                SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
                if (rBFechaMLlegada == 11) {
                    try {
                        cManifiestosLlegada.jDateChooser3.setDate(formatoFecha.parse(fecha1MLlegada));
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    cManifiestosLlegada.jRadioButton12.setSelected(true);
                    try {
                        cManifiestosLlegada.jDateChooser2.setDate(formatoFecha.parse(fecha2MLlegada));
                        cManifiestosLlegada.jDateChooser2.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        cManifiestosLlegada.jDateChooser1.setDate(formatoFecha.parse(fecha3MLlegada));
                        cManifiestosLlegada.jDateChooser1.setEnabled(false);
                    } catch (ParseException ex) {
                        Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (rBPersonalMLlegada != 0) {
                cManifiestosLlegada.jCheckBox6.setSelected(true);
                if (rBPersonalMLlegada == 15) {
                    cManifiestosLlegada.jRadioButton15.setSelected(true);
                    cManifiestosLlegada.jTextField15.setText(licenciaMLlegada);
                } else if (rBPersonalMLlegada == 17) {
                    cManifiestosLlegada.jRadioButton17.setSelected(true);
                    cManifiestosLlegada.jTextField17.setText(licenciaMLlegada);
                } else if (rBPersonalMLlegada == 16) {
                    cManifiestosLlegada.jRadioButton16.setSelected(true);
                    cManifiestosLlegada.jTextField16.setText(licenciaMLlegada);
                } else {
                    cManifiestosLlegada.jRadioButton20.setSelected(true);
                    cManifiestosLlegada.jTextField18.setText(licenciaMLlegada);
                }
            }
            if (rBAeronaveMLlegada != 0) {
                cManifiestosLlegada.jCheckBox3.setSelected(true);
                if (rBAeronaveMLlegada == 9) {
                    cManifiestosLlegada.jRadioButton9.setSelected(true);
                    cManifiestosLlegada.jTextField11.setText(aeronaveMLlegada);
                } else {
                    cManifiestosLlegada.jRadioButton10.setSelected(true);
                    cManifiestosLlegada.jTextField12.setText(aeronaveMLlegada);
                }
            }
            if (rBOrigenMLlegada != 0) {
                cManifiestosLlegada.jCheckBox5.setSelected(true);
                if (rBOrigenMLlegada == 18) {
                    cManifiestosLlegada.jRadioButton18.setSelected(true);
                    cManifiestosLlegada.jTextField20.setText(origenMLlegada);
                } else {
                    cManifiestosLlegada.jRadioButton19.setSelected(true);
                    cManifiestosLlegada.jTextField21.setText(origenMLlegada);
                }
            }
            if (aerolineaMLlegada != null) {
                cManifiestosLlegada.jCheckBox7.setSelected(true);
                cManifiestosLlegada.jTextField1.setText(aerolineaMLlegada);
            }
            if (vueloMLlegada != null) {
                cManifiestosLlegada.jCheckBox8.setSelected(true);
                cManifiestosLlegada.jTextField2.setText(vueloMLlegada);
            }
        }
        cManifiestosLlegada.setVisible(true);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "MANIFIESTOS_SALIDA.fecha_hora_itinerario, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
        ///****-------------------------------------------
        nombresColumnas[columnas][1] = "hi";
        nombresColumnas[columnas++][0] = "HORA ITINERARIO";
        ///****----------------------------------------
        preconsulta += "MANIFIESTOS_SALIDA.hora_real, ";
            nombresColumnas[columnas][1] = "hr";
            nombresColumnas[columnas++][0] = "HORA REAL";
        preconsulta += "MANIFIESTOS_SALIDA.no_de_vuelo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "NO DE VUELO";
        preconsulta += "COMPANIAS.siglas, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - SIGLAS";
        preconsulta += "COMPANIAS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - NOMBRE";
        preconsulta += "AERONAVES_MANIFIESTOS.matricula, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_MANIFIESTOS.equipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - EQUIPO";
        preconsulta += "COMANDANTE.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - LICENCIA";
        preconsulta += "COMANDANTE.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDATE - NOMBRE(S)";
        preconsulta += "COMANDANTE.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A PATERNO";
        preconsulta += "COMANDANTE.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A MATERNO";
        preconsulta += "COMANDANTE.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - T LICENCIA";
        preconsulta += "PRIMER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - LICENCIA";
        preconsulta += "PRIMER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - NOMBRE(S)";
        preconsulta += "PRIMER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A PATERNO";
        preconsulta += "PRIMER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A MATERNO";
        preconsulta += "PRIMER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - T LICENCIA";    
        preconsulta += "SEGUNDO_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - LICENCIA";
        preconsulta += "SEGUNDO_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - NOMBRE(S)";
        preconsulta += "SEGUNDO_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A PATERNO";
        preconsulta += "SEGUNDO_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A MATERNO";
        preconsulta += "SEGUNDO_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - T LICENCIA";    
        preconsulta += "TERCER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - LICENCIA";
        preconsulta += "TERCER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - NOMBRE(S)";
        preconsulta += "TERCER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A PATERNO";
        preconsulta += "TERCER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A MATERNO";
        preconsulta += "TERCER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - T LICENCIA";    
        preconsulta += "MANIFIESTOS_SALIDA.sobrecargos, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SOBRECARGOS";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "MANIFIESTOS_SALIDA.tramo_interior, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TRAMO INTERIOR";
        preconsulta += "MANIFIESTOS_SALIDA.exentos_nacionales, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "EXENTOS NACIONALES";
        preconsulta += "MANIFIESTOS_SALIDA.internacionales, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "INTERNACIONALES";
        preconsulta += "MANIFIESTOS_SALIDA.exentos_internacionales, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "EXENTOS INTERNACIONALES";
        preconsulta += "MANIFIESTOS_SALIDA.infantes, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "INFANTES";
        preconsulta += "MANIFIESTOS_SALIDA.transito, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TRANSITO";
        preconsulta += "MANIFIESTOS_SALIDA.total, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - PASAJEROS";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_equipaje, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - EQUIPAJE";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_carga, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CARGA";
        preconsulta += "MANIFIESTOS_SALIDA.ttl_correo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CORREO";
        preconsulta += "PDFS_MANIFIESTOS.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM MANIFIESTOS_SALIDA\n";
        consulta += "LEFT JOIN COMPANIAS\n" +
            "ON COMPANIAS.siglas = MANIFIESTOS_SALIDA.empresa\n";
        consulta += "LEFT JOIN AERONAVES_MANIFIESTOS\n" +
            "ON AERONAVES_MANIFIESTOS.matricula = MANIFIESTOS_SALIDA.aeronave\n";
        consulta += "LEFT JOIN COMANDANTE\n" +
            "ON COMANDANTE.no_licencia = MANIFIESTOS_SALIDA.comandante\n";
        consulta += "LEFT JOIN PRIMER_OFICIAL\n" +
            "ON PRIMER_OFICIAL.no_licencia = MANIFIESTOS_SALIDA.primer\n";
        consulta += "LEFT JOIN SEGUNDO_SALIDA\n" +
            "ON SEGUNDO_SALIDA.fecha_ss = MANIFIESTOS_SALIDA.fecha_hora_itinerario\n" +
            "LEFT JOIN SEGUNDO_OFICIAL\n" +
            "ON SEGUNDO_SALIDA.licencia_ss = SEGUNDO_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN TERCERO_SALIDA\n" +
            "ON TERCERO_SALIDA.fecha_ts = MANIFIESTOS_SALIDA.fecha_hora_itinerario\n" +
            "LEFT JOIN TERCER_OFICIAL\n" +
            "ON TERCERO_SALIDA.licencia_ts = TERCER_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN AEROPUERTOS_MANIFIESTOS\n" +
            "ON AEROPUERTOS_MANIFIESTOS.codigo_iata = MANIFIESTOS_SALIDA.destino\n";       
        consulta += "LEFT JOIN PDFS_SALIDA\n" +
            "ON PDFS_SALIDA.fecha = MANIFIESTOS_SALIDA.fecha_hora_itinerario\n" +
            "LEFT JOIN PDFS_MANIFIESTOS\n" +
            "ON PDFS_SALIDA.pdf = PDFS_MANIFIESTOS.ruta_pdf\n"; 
        if (criteriosManifiestosSalida != null) {
            consulta += criteriosManifiestosSalida;
        }
        System.out.println(consulta);
        ConexionMysql conexionConsultaMS = new ConexionMysql();
        if (conexionConsultaMS.conectarBD("localhost","root","l1u2c3h4o5e6d7u","baseaeropuerto")) {
            if (!conexionConsultaMS.mostrarColumnasTablaMysqlCompuesta(jTableMS,consulta,nombresColumnas,columnas,2)) {
                JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton14.setEnabled(true);
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        FuncionesGenerales.limpiarTablaCompletamente(jTablePlanes);
        limpiarCriteriosPlanes();
        rBFechaPlanes = 0;
        fecha1Planes = null;
        fecha2Planes = null;
        fecha3Planes = null;
        cBPasajeros1Planes = 0;
        pasajero1Planes = null;
        cBPasajeros2Planes = 0;
        pasajero2Planes = null;
        cBPasajeros3Planes = 0;
        pasajero3Planes = null;
        rBPersonalPlanes = 0;
        licenciaPlanes = null;
        rBAeronavePlanes = 0;
        aeronavePlanes = null;
        rBAeropuertoPlanes = 0;
        aeropuertoPlanes = null;
        primeraVezPlanes = true;
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        FuncionesGenerales.limpiarTablaCompletamente(jTableCierres);
        limpiarCriteriosCierres();
        rBFechaCierres = 0;
        fecha1Cierres = null;
        fecha2Cierres = null;
        fecha3Cierres = null;
        cBPasajeros1Cierres = 0;
        pasajero1Cierres = null;
        cBPasajeros2Cierres = 0;
        pasajero2Cierres = null;
        cBPasajeros3Cierres = 0;
        pasajero3Cierres = null;
        rBPersonalCierres = 0;
        licenciaCierres = null;
        rBAeronaveCierres = 0;
        aeronaveCierres = null;
        rBAeropuertoCierres = 0;
        aeropuertoCierres = null;
        primeraVezCierres = true;
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        FuncionesGenerales.limpiarTablaCompletamente(jTableMS);
        limpiarCriteriosManifiestosSalida();
        rBFechaMSalida = 0;
        fecha1MSalida = null;
        fecha2MSalida = null;
        fecha3MSalida = null;
        rBPersonalMSalida = 0;
        licenciaMSalida = null;
        rBAeronaveMSalida = 0;
        aeronaveMSalida = null;
        rBDestinoMSalida = 0;
        destinoMSalida = null;
        aerolineaMSalida = null;
        vueloMSalida = null;
        primeraVezMSalida = true;
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String preconsulta = "SELECT ";
        String [] [] nombresColumnas = new String [50][2];
        int columnas = 0;
        nombresColumnas[columnas][1] = "-0";
        nombresColumnas[columnas++][0] = "";
        preconsulta += "MANIFIESTOS_LLEGADA.fecha_hora_itinerario, ";
            nombresColumnas[columnas][1] = "fechaPrincipal";
            nombresColumnas[columnas++][0] = "FECHA";
        ///****-------------------------------------------
        nombresColumnas[columnas][1] = "hi";
        nombresColumnas[columnas++][0] = "HORA ITINERARIO";
        ///****----------------------------------------
        preconsulta += "MANIFIESTOS_LLEGADA.hora_real, ";
            nombresColumnas[columnas][1] = "hr";
            nombresColumnas[columnas++][0] = "HORA REAL";
        preconsulta += "MANIFIESTOS_LLEGADA.no_de_vuelo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "NO DE VUELO";
        preconsulta += "COMPANIAS.siglas, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - SIGLAS";
        preconsulta += "COMPANIAS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMPAÑÍA - NOMBRE";
        preconsulta += "AERONAVES_MANIFIESTOS.matricula, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - MATRÍCULA";
        preconsulta += "AERONAVES_MANIFIESTOS.equipo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AERONAVE - EQUIPO";
        preconsulta += "COMANDANTE.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - LICENCIA";
        preconsulta += "COMANDANTE.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDATE - NOMBRE(S)";
        preconsulta += "COMANDANTE.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A PATERNO";
        preconsulta += "COMANDANTE.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - A MATERNO";
        preconsulta += "COMANDANTE.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "COMANDANTE - T LICENCIA";
        preconsulta += "PRIMER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - LICENCIA";
        preconsulta += "PRIMER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - NOMBRE(S)";
        preconsulta += "PRIMER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A PATERNO";
        preconsulta += "PRIMER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - A MATERNO";
        preconsulta += "PRIMER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PRIMER_OFICIAL - T LICENCIA";    
        preconsulta += "SEGUNDO_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - LICENCIA";
        preconsulta += "SEGUNDO_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - NOMBRE(S)";
        preconsulta += "SEGUNDO_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A PATERNO";
        preconsulta += "SEGUNDO_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - A MATERNO";
        preconsulta += "SEGUNDO_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SEGUNDO_OFICIAL - T LICENCIA";    
        preconsulta += "TERCER_OFICIAL.no_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - LICENCIA";
        preconsulta += "TERCER_OFICIAL.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - NOMBRE(S)";
        preconsulta += "TERCER_OFICIAL.apellido_paterno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A PATERNO";
        preconsulta += "TERCER_OFICIAL.apellido_materno, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - A MATERNO";
        preconsulta += "TERCER_OFICIAL.tipo_licencia, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TERCER_OFICIAL - T LICENCIA";    
        preconsulta += "MANIFIESTOS_LLEGADA.sobrecargos, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "SOBRECARGOS";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_iata, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - IATA";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.codigo_oaci, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - OACI";
        preconsulta += "AEROPUERTOS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "AEROPUERTO - NOMBRE";
        preconsulta += "MANIFIESTOS_LLEGADA.total_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL PASAJEROS";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_pasajeros, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - PASAJEROS";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_equipaje, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - EQUIPAJE";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_carga, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CARGA";
        preconsulta += "MANIFIESTOS_LLEGADA.ttl_correo, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "TOTAL - CORREO";
        preconsulta += "PDFS_MANIFIESTOS.ruta_pdf, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - RUTA";
        preconsulta += "PDFS_MANIFIESTOS.nombre, ";
            nombresColumnas[columnas][1] = "-1";
            nombresColumnas[columnas++][0] = "PDF - NOMBRE";
        String consulta = preconsulta.substring(0, preconsulta.length() - 2); 
        consulta += " FROM MANIFIESTOS_LLEGADA\n";
        consulta += "LEFT JOIN COMPANIAS\n" +
            "ON COMPANIAS.siglas = MANIFIESTOS_LLEGADA.empresa\n";
        consulta += "LEFT JOIN AERONAVES_MANIFIESTOS\n" +
            "ON AERONAVES_MANIFIESTOS.matricula = MANIFIESTOS_LLEGADA.aeronave\n";
        consulta += "LEFT JOIN COMANDANTE\n" +
            "ON COMANDANTE.no_licencia = MANIFIESTOS_LLEGADA.comandante\n";
        consulta += "LEFT JOIN PRIMER_OFICIAL\n" +
            "ON PRIMER_OFICIAL.no_licencia = MANIFIESTOS_LLEGADA.primer\n";
        consulta += "LEFT JOIN SEGUNDO_LLEGADA\n" +
            "ON SEGUNDO_LLEGADA.fecha_sl = MANIFIESTOS_LLEGADA.fecha_hora_itinerario\n" +
            "LEFT JOIN SEGUNDO_OFICIAL\n" +
            "ON SEGUNDO_LLEGADA.licencia_sl = SEGUNDO_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN TERCERO_LLEGADA\n" +
            "ON TERCERO_LLEGADA.fecha_tl = MANIFIESTOS_LLEGADA.fecha_hora_itinerario\n" +
            "LEFT JOIN TERCER_OFICIAL\n" +
            "ON TERCERO_LLEGADA.licencia_tl = TERCER_OFICIAL.no_licencia\n";
        consulta += "LEFT JOIN AEROPUERTOS_MANIFIESTOS\n" +
            "ON AEROPUERTOS_MANIFIESTOS.codigo_iata = MANIFIESTOS_LLEGADA.origen\n";
        consulta += "LEFT JOIN PDFS_LLEGADA\n" +
            "ON PDFS_LLEGADA.fecha = MANIFIESTOS_LLEGADA.fecha_hora_itinerario\n" +
            "LEFT JOIN PDFS_MANIFIESTOS\n" +
            "ON PDFS_LLEGADA.pdf = PDFS_MANIFIESTOS.ruta_pdf\n"; 
        if (criteriosManifiestosLlegada != null) {
            consulta += criteriosManifiestosLlegada;
        }
        System.out.println(consulta);
        ConexionMysql conexionConsultaMS = new ConexionMysql();
        if (conexionConsultaMS.conectarBD("localhost","root","l1u2c3h4o5e6d7u","baseaeropuerto")) {
            if (!conexionConsultaMS.mostrarColumnasTablaMysqlCompuesta(jTableML,consulta,nombresColumnas,columnas,2)) {
                JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
            } else {
                jButton16.setEnabled(true);
            }
        } else {
            JOptionPane.showMessageDialog(this,conexionConsultaMS.getMensajesError(),"",JOptionPane.ERROR_MESSAGE);
        }
        
        //
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        FuncionesGenerales.limpiarTablaCompletamente(jTableML);
        limpiarCriteriosManifiestosLlegada();
        rBFechaMLlegada = 0;
        fecha1MLlegada = null;
        fecha2MLlegada = null;
        fecha3MLlegada = null;
        rBPersonalMLlegada = 0;
        licenciaMLlegada = null;
        rBAeronaveMLlegada = 0;
        aeronaveMLlegada = null;
        rBOrigenMLlegada = 0;
        origenMLlegada = null;
        aerolineaMLlegada = null;
        vueloMLlegada = null;
        primeraVezMLlegada = true;                           
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jTableCierresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCierresMouseClicked
        if(!evt.isMetaDown() && jTablePlanes.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableCierres,0);
            jTableCierres.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableCierresMouseClicked

    private void jTableCierresMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCierresMousePressed
        if(!evt.isMetaDown()){
            int fila = jTableCierres.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableCierres,fila);
            jTableCierres.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
            if (FuncionesGenerales.celdaPDFSeleccionada(jTableCierres, "PDF - NOMBRE")) {
                int columna = jTableCierres.getSelectedColumn();
                String mensaje = FuncionesGenerales.abrirPDFSeleccionada(jTableCierres,"PDF - RUTA", fila, columna);
                if (mensaje.contains("ERROR")) {
                    JOptionPane.showMessageDialog(this,"NO SE PUEDE CARGAR EL DOCUMENT","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jTableCierresMousePressed

    private void jTableMSMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMSMousePressed
        if(!evt.isMetaDown()){
            int fila = jTableMS.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableMS,fila);
            jTableMS.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
            if (FuncionesGenerales.celdaPDFSeleccionada(jTableMS, "PDF - NOMBRE")) {
                int columna = jTableMS.getSelectedColumn();
                String mensaje = FuncionesGenerales.abrirPDFSeleccionada(jTableMS,"PDF - RUTA", fila, columna);
                if (mensaje.contains("ERROR")) {
                    JOptionPane.showMessageDialog(this,"NO SE PUEDE CARGAR EL DOCUMENT","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jTableMSMousePressed

    private void jTableMLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMLMousePressed
        if(!evt.isMetaDown()){
            int fila = jTableML.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableML,fila);
            jTableML.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
            if (FuncionesGenerales.celdaPDFSeleccionada(jTableML, "PDF - NOMBRE")) {
                int columna = jTableML.getSelectedColumn();
                String mensaje = FuncionesGenerales.abrirPDFSeleccionada(jTableML,"PDF - RUTA", fila, columna);
                if (mensaje.contains("ERROR")) {
                    JOptionPane.showMessageDialog(this,"NO SE PUEDE CARGAR EL DOCUMENT","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jTableMLMousePressed

    private void jTableMSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMSMouseClicked
        if(!evt.isMetaDown() && jTableMS.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableMS,0);
            jTableMS.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableMSMouseClicked

    private void jTableMLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMLMouseClicked
        if(!evt.isMetaDown() && jTableML.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTableML,0);
            jTableML.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTableMLMouseClicked

    private void jTablePlanesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePlanesMousePressed
        if(!evt.isMetaDown()){
            int fila = jTablePlanes.getSelectedRow();
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTablePlanes,fila);
            jTablePlanes.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
            if (FuncionesGenerales.celdaPDFSeleccionada(jTablePlanes, "PDF - NOMBRE")) {
                int columna = jTablePlanes.getSelectedColumn();
                String mensaje = FuncionesGenerales.abrirPDFSeleccionada(jTablePlanes,"PDF - RUTA", fila, columna);
                if (mensaje.contains("ERROR")) {
                    JOptionPane.showMessageDialog(this,"NO SE PUEDE CARGAR EL DOCUMENT","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jTablePlanesMousePressed

    private void jTablePlanesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePlanesMouseClicked
        if(!evt.isMetaDown() && jTablePlanes.getSelectedRow() == -1){
            int filasAMarcar [] = FuncionesGenerales.celdasTabla(jTablePlanes,0);
            jTablePlanes.getSelectionModel().setSelectionInterval(filasAMarcar[0],filasAMarcar[1]);
        }
    }//GEN-LAST:event_jTablePlanesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UJFrameVentanaModificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UJFrameVentanaModificaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscarCierres;
    private javax.swing.JButton botonBuscarPlanes;
    private javax.swing.JButton botonCriteriosCierres;
    private javax.swing.JButton botonCriteriosPlanes;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    public static javax.swing.JLabel jLabel21;
    public static javax.swing.JLabel jLabel22;
    public static javax.swing.JLabel jLabel23;
    public static javax.swing.JLabel jLabel24;
    public static javax.swing.JLabel jLabel25;
    public static javax.swing.JLabel jLabel26;
    public static javax.swing.JLabel jLabel27;
    public static javax.swing.JLabel jLabel28;
    public static javax.swing.JLabel jLabel29;
    public static javax.swing.JLabel jLabel30;
    public static javax.swing.JLabel jLabel31;
    public static javax.swing.JLabel jLabel32;
    public static javax.swing.JLabel jLabel33;
    public static javax.swing.JLabel jLabel34;
    public static javax.swing.JLabel jLabel35;
    public static javax.swing.JLabel jLabel36;
    public static javax.swing.JLabel jLabel37;
    public static javax.swing.JLabel jLabel38;
    public static javax.swing.JLabel jLabel39;
    public static javax.swing.JLabel jLabel40;
    public static javax.swing.JLabel jLabel41;
    public static javax.swing.JLabel jLabel42;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableCierres;
    private javax.swing.JTable jTableML;
    private javax.swing.JTable jTableMS;
    private javax.swing.JTable jTablePlanes;
    // End of variables declaration//GEN-END:variables
    
    static String criteriosPlanes = null;
    static String criteriosCierres = null;
    static String criteriosManifiestosSalida = null;
    static String criteriosManifiestosLlegada = null;
    
    static int rBFechaMSalida = 0;
    static String fecha1MSalida = null;
    static String fecha2MSalida = null;
    static String fecha3MSalida = null;
    static int rBPersonalMSalida = 0;
    static String licenciaMSalida = null;
    static int rBAeronaveMSalida = 0;
    static String aeronaveMSalida = null;
    static int rBDestinoMSalida = 0;
    static String destinoMSalida = null;
    static String aerolineaMSalida = null;
    static String vueloMSalida = null;
    static boolean primeraVezMSalida = true;
    
    private void limpiarCriteriosManifiestosSalida () {
        jLabel31.setText("FECHA");
        jLabel31.setEnabled(false);
        jLabel32.setText("PERSONAL DE VUELO");
        jLabel32.setEnabled(false);
        jLabel33.setText("COMPAÑÍA");
        jLabel33.setEnabled(false);
        jLabel34.setText("AERONAVE");
        jLabel34.setEnabled(false);
        jLabel35.setText("DESTINO");
        jLabel35.setEnabled(false);
        jLabel36.setText("NO. DE VUELO");
        jLabel36.setEnabled(false);
    }
    
    static int rBFechaMLlegada = 0;
    static String fecha1MLlegada = null;
    static String fecha2MLlegada = null;
    static String fecha3MLlegada = null;
    static int rBPersonalMLlegada = 0;
    static String licenciaMLlegada = null;
    static int rBAeronaveMLlegada = 0;
    static String aeronaveMLlegada = null;
    static int rBOrigenMLlegada = 0;
    static String origenMLlegada = null;
    static String aerolineaMLlegada = null;
    static String vueloMLlegada = null;
    static boolean primeraVezMLlegada = true;
    
    private void limpiarCriteriosManifiestosLlegada () {
        jLabel37.setText("FECHA");
        jLabel37.setEnabled(false);
        jLabel38.setText("PERSONAL DE VUELO");
        jLabel38.setEnabled(false);
        jLabel39.setText("COMPAÑÍA");
        jLabel39.setEnabled(false);
        jLabel40.setText("AERONAVE");
        jLabel40.setEnabled(false);
        jLabel41.setText("ORIGEN");
        jLabel41.setEnabled(false);
        jLabel42.setText("NO. DE VUELO");
        jLabel42.setEnabled(false);
    }
    
    static int rBFechaPlanes = 0;
    static String fecha1Planes = null;
    static String fecha2Planes = null;
    static String fecha3Planes = null;
    static int cBPasajeros1Planes = 0;
    static String pasajero1Planes = null;
    static int cBPasajeros2Planes = 0;
    static String pasajero2Planes = null;
    static int cBPasajeros3Planes = 0;
    static String pasajero3Planes = null;
    static int rBPersonalPlanes = 0;
    static String licenciaPlanes = null;
    static int rBAeronavePlanes = 0;
    static String aeronavePlanes = null;
    static int rBAeropuertoPlanes = 0;
    static String aeropuertoPlanes = null;
    static boolean primeraVezPlanes = true;
    
    private void limpiarCriteriosPlanes () {
        jLabel21.setText("FECHA");
        jLabel21.setEnabled(false);
        jLabel22.setText("PERSONAL DE VUELO");
        jLabel22.setEnabled(false);
        jLabel23.setText("PASAJERO");
        jLabel23.setEnabled(false);
        jLabel24.setText("AERONAVE");
        jLabel24.setEnabled(false);
        jLabel25.setText("AEROPUERTO/AERÓDROMO DE LLEGADA");
        jLabel25.setEnabled(false);
    }
    
    static int rBFechaCierres = 0;
    static String fecha1Cierres = null;
    static String fecha2Cierres = null;
    static String fecha3Cierres = null;
    static int cBPasajeros1Cierres = 0;
    static String pasajero1Cierres = null;
    static int cBPasajeros2Cierres = 0;
    static String pasajero2Cierres = null;
    static int cBPasajeros3Cierres = 0;
    static String pasajero3Cierres = null;
    static int rBPersonalCierres = 0;
    static String licenciaCierres = null;
    static int rBAeronaveCierres = 0;
    static String aeronaveCierres = null;
    static int rBAeropuertoCierres = 0;
    static String aeropuertoCierres = null;
    static boolean primeraVezCierres = true;
    
    private void limpiarCriteriosCierres () {
        jLabel26.setText("FECHA");
        jLabel26.setEnabled(false);
        jLabel27.setText("PERSONAL DE VUELO");
        jLabel27.setEnabled(false);
        jLabel28.setText("PASAJERO");
        jLabel28.setEnabled(false);
        jLabel29.setText("AERONAVE");
        jLabel29.setEnabled(false);
        jLabel30.setText("AEROPUERTO/AERÓDROMO DE SALIDA");
        jLabel30.setEnabled(false);
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
        getImage(ClassLoader.getSystemResource("Necesarios/iconoP.png"));
        return retValue;
    }
}
